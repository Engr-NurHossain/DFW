@{
    Layout = null;
}
@using DateTimeExt = HS.Framework.DateTimeExtension
@model HS.Entities.NotificationViewModel
<style>
    .notification_item a {
        padding: unset !important;
    }

    .no_notification_div {
        width: 100%;
        float: left;
        text-align: center;
        padding: 18px;
        line-height: 14px;
    }

        .no_notification_div i {
            font-size: 35px !important;
        }

        .no_notification_div label {
            margin-bottom: 0px;
            font-size: 12px;
        }

    .red {
        color: red !important;
    }
    /*.red {
        color: #9a9a9a; 
    }*/
</style>
<script>
    var NotificationCount = "@Model.TotalCount";
    if (NotificationCount == "0") {
        $(".notification_counter").text('0');
        $(".notification_counter").addClass("hidden");
    }else{
        $(".notification_counter").text(NotificationCount);
        $(".notification_counter").removeClass("hidden");
    }
</script>
<div>
    @if (Model.Notifications.Count() == 0)
    {
        <div class="no_notification_div">
            <div><i class="fa fa-bell-o"></i></div>
            <div> <label>You have no notifications</label></div>
            <div><label>They'll be here when you get 'em.</label></div>
        </div>
    }
    else
    {
        foreach (var item in Model.Notifications)
        {
            string url = string.Empty;
            if (!item.NotificationUrl.Contains("/knowledgebase/Id="))
            {
                url = "onclick=OpenUrl('" + item.NotificationUrl + "')";
            }
            <div class="notification_item @(item.IsRead?"":"notification_not_seen")" @(string.IsNullOrWhiteSpace(item.NotificationUrl) ? "" : url )>
                @if (item.Type.ToLower() == "task")
                {
                    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                         width="18.375px" height="23.094px" viewBox="0 0 18.375 23.094" enable-background="new 0 0 18.375 23.094" xml:space="preserve">
<g>
                    <path fill="none" stroke="#000000" stroke-miterlimit="10" d="M13.839,4.386h2.699c0,0,1.337,0.222,1.337,1.362v15.378
		c0,0-0.54,1.446-1.209,1.446H1.781c0,0-1.26-0.389-1.26-1.251V5.859c0,0,0.077-1.474,1.182-1.474h2.674" />
                    <path fill="none" stroke="#000000" stroke-miterlimit="10" d="M4.429,3.106V5.47c0,0,0.283,0.667,0.848,0.667h7.944
		c0,0,0.643-0.25,0.643-0.667V3.106c0,0,0.077-0.723-0.591-0.723h-1.722c0,0-0.463-1.808-2.353-1.808c0,0-1.941-0.167-2.301,1.696
		h-1.8C5.097,2.272,4.429,2.355,4.429,3.106z" />
</g>
<polyline fill="none" stroke="#000000" stroke-miterlimit="10" points="3.276,10.12 4.764,11.665 7.917,8.446 " />
<polyline fill="none" stroke="#000000" stroke-miterlimit="10" points="3.276,14.646 4.764,16.192 7.917,12.973 " />
<polyline fill="none" stroke="#000000" stroke-miterlimit="10" points="3.276,19.191 4.764,20.735 7.917,17.517 " />
<line fill="none" stroke="#000000" stroke-miterlimit="10" x1="10.952" y1="10.056" x2="15.199" y2="10.056" />
<line fill="none" stroke="#000000" stroke-miterlimit="10" x1="10.952" y1="14.813" x2="15.199" y2="14.813" />
<line fill="none" stroke="#000000" stroke-miterlimit="10" x1="10.952" y1="19.609" x2="15.199" y2="19.609" />
</svg>
                }
                <div>
                    @if (item.Type.ToLower() == "accountability")
                    {
                        if (item.KnowledgebaseIsRead)
                        {
                            <i class="fa fa-check-circle-o" style="color: #2ca01c; font-size: 17px;" aria-hidden="true" title="Completed"></i>
                        }
                        else
                        {
                            <i class="fa fa-circle-o" style="font-size: 17px;" aria-hidden="true" title="Not Completed"></i>
                        }
                    }
                    @Html.Raw(item.What)
                </div>
                @if (item.Type.ToLower() == "accountability")
                {
                    if (@Convert.ToDateTime(@item.LastVisited).AddDays(Model.DueDay) < DateTime.Now)
                    {
                        <div class="log_info red"> @Convert.ToDateTime(@item.LastVisited).AddDays(Model.DueDay)</div>
                    }
                    else
                    {
                        <div class="log_info"> @Convert.ToDateTime(@item.LastVisited).AddDays(Model.DueDay)</div>
                    }
                }
                else
                {
                    <div class="log_info">@item.LastVisited @*on @string.Format(DateTimeExt.UTCToClientTime(item.CreatedDate).ToString("MM/dd/yyyy {0} hh:mm tt"), "at")*@</div>
                }

            </div>
        }
    }
</div>
