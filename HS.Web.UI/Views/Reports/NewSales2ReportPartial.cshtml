@{
    Layout = null;
    string Currency = HS.Web.UI.Helper.LabelHelper.CurrentTransMakeCurrency.MakeCurrency(null);
}
@using Localize = HS.Web.UI.Helper.LanguageHelper
@using PermissionChekcer = HS.Web.UI.Helper.PermissionHelper
@using Permissions = HS.Framework.UserPermissions
@using LabelHelper = HS.Web.UI.Helper.LabelHelper
<link href="~/Content/Bootstrap/MultipleSelect/bootstrap-select.css" rel="stylesheet" />
<link href="~/Content/Css/Ticket/TicketListPartial.css" rel="stylesheet" />
<link href="~/Content/Css/Report/RecurringBillingReportPartial.css" rel="stylesheet" />
<script src="~/Content/Bootstrap/MultipleSelect/bootstrap-select.js"></script>

<style>
</style>
<script>
    var SalesPersonList = '@Html.Raw(Json.Encode(@ViewBag.EmployeeList))';
    SalesPersonList = JSON.parse(SalesPersonList);

    var SalesLocationList = '@Html.Raw(Json.Encode(@ViewBag.SalesLocationList))';
    SalesLocationList = JSON.parse(SalesLocationList);

    var LeadSourceTypeList = '@Html.Raw(Json.Encode(@ViewBag.LeadSourceTypeList))';
    LeadSourceTypeList = JSON.parse(LeadSourceTypeList);

    var LeadSourceList = '@Html.Raw(Json.Encode(@ViewBag.LeadSourceList))';
    LeadSourceList = JSON.parse(LeadSourceList);

    var InvoiceTypeList = '@Html.Raw(Json.Encode(@ViewBag.InvoiceTypeList))';
    InvoiceTypeList = JSON.parse(InvoiceTypeList);

    var pageno = '@ViewBag.PageNumber';
        var OpenTicketById = function(ticketId){
        OpenTopToBottomModal(domainurl + "/Ticket/AddTicket/?Id=" + ticketId);
    }
    var FilterNewSales = function (pageno) {
        var StartDate = $(".min-date").val();
        var EndDate = $(".max-date").val();
        var searchtext = $("#new_sales_search_text").val();
        var SalesPerson = encodeURI($("#SalesPerson").val());
        var SalesLocation = encodeURI($("#SalesLocation").val());
        var InvoiceType = encodeURI($("#InvoiceType").val());
        var LeadSourceType = encodeURI($("#LeadSourceType").val());
        var LeadSource = encodeURI($("#LeadSource").val());
        var InstallFromDate = $("#install_from_date").val();
        var InstallToDate = $("#install_to_date").val();
        $(".NewSalesReport").html(TabsLoaderText);
        console.log(InstallFromDate, InstallToDate);
        $(".NewSalesReport").load(domainurl + "/Reports/NewSales2ReportPartialList?Start=" + encodeURI(StartDate) + "&End=" + encodeURI(EndDate) + "&searchtext=" + encodeURI(searchtext) + "&pageno=" + pageno + "&pagesize=20"
            + "&SalesList=" + SalesPerson + "&SalesLocationList=" + SalesLocation + "&InvoiceTypeList=" + InvoiceType + "&LeadSourceTypeList=" + LeadSourceType + "&LeadSourceList=" + LeadSource + "&InstallFrom=" + InstallFromDate + "&InstallTo=" + InstallToDate);
    }
    var ResetFilterSalesPerson = function () {
        $('.SalesPerson').selectpicker("val", "");
        FilterNewSales(1);
    }
    $(document).ready(function () {
        $(".convert_cus_report_filter").hide();
        $("#filterbtn").click(function () {
            console.log("filter");
            if ($(".convert_cus_report_filter").is(":visible")) {
                $(".convert_cus_report_filter").hide();

            } else {
                $(".convert_cus_report_filter").show();

            }
        });

        if (SalesPersonList.length != 0) {
            $("#SalesPerson").selectpicker('val', SalesPersonList);
        }
        else {
            $("#SalesPerson").selectpicker('val', '');
        }

        $("#SalesLocation").selectpicker('val', SalesLocationList);
        $("#InvoiceType").selectpicker('val', InvoiceTypeList);
        $("#LeadSourceType").selectpicker('val', LeadSourceTypeList);
        $("#LeadSource").selectpicker('val', LeadSourceList);

        FilterNewSales(1);

        $(".icon_sort_timeclock").click(function () {

            var orderval = $(this).attr('data-val');
            $(".NewSalesReport").html(TabsLoaderText);
            $(".NewSalesReport").load("/Reports/NewSales2ReportPartial", { PageNo: pagenumber, pagesize: pagesize, SearchText: searchtext, order: orderval, Start: DateFrom, End: DateTo });
        })

        new Pikaday({ format: 'MM/DD/YYYY', field: $('#install_from_date')[0] });
        new Pikaday({ format: 'MM/DD/YYYY', field: $('#install_to_date')[0] });

        $("#btnnewsales").click(function () {
            var StartDate = $(".min-date").val();
            var EndDate = $(".max-date").val();
            var searchtext = $("#new_sales_search_text").val();
            var SalesPerson = encodeURI($("#SalesPerson").val());
            var SalesLocation = encodeURI($("#SalesLocation").val());
            var InvoiceType = encodeURI($("#InvoiceType").val());
            var LeadSourceType = encodeURI($("#LeadSourceType").val());
            var LeadSource = encodeURI($("#LeadSource").val());
            var InstallFromDate = $("#install_from_date").val();
            var InstallToDate = $("#install_to_date").val();
            window.location.href = domainurl + "/Reports/NewSales2ReportPartialList?Start=" + encodeURI(StartDate) + "&End=" + encodeURI(EndDate) + "&GetReport=true" + "&searchtext=" + encodeURI(searchtext) + "&pageno=" + pageno + "&pagesize=20"
                + "&SalesList=" + SalesPerson + "&SalesLocationList=" + SalesLocation + "&InvoiceTypeList=" + InvoiceType + "&LeadSourceTypeList=" + LeadSourceType + "&LeadSourceList=" + LeadSource + "&InstallFrom=" + InstallFromDate + "&InstallTo=" + InstallToDate
                ;
        })
           $("#new_sales_search_text").keydown(function (e) {

                if (e.which == 13) {
                    FilterNewSales(1);
                }
            });
    });
    $(window).resize(function () {
        //if (window.innerWidth > 1025) {
        //    $(".new_sales_report_table_div").height(window.innerHeight - 338);
        //}

    })


</script>

<div class="sales_summery_report_top_bar">
    <div class="input-group add-on">
        @if (ViewBag.searchtext != "" && ViewBag.searchtext != "undefined")
        {
            <input class="form-control" placeholder="Search Text" value="@ViewBag.searchtext" id="new_sales_search_text" />
        }
        else
        {
            <input class="form-control" placeholder="Search Text" value="" id="new_sales_search_text" />
        }

        <div class="input-group-btn"> <button class="btn green_button" onclick="FilterNewSales(1)" id="btn_new_sales" title="@Localize.T("Search")"><i class="fa fa-search"></i></button></div>
    </div>

    <button class="btn convert_cus_div lilrp_filter_btn" id="filterbtn">
        <span title="Filter" class="glyphicon glyphicon-filter"></span>
    </button>
    @if (PermissionChekcer.IsPermitted(Permissions.ReportsPermissions.NewSalesReport2Export))
    {
        <button title="@Localize.T(" Download")" class="btn btn-primary" id="btnnewsales"><i class="fa fa-download"></i></button>
    }
    <div class="convert_cus_report_filter">
        <div class="convert_cus_report_filte_innerr convert_cus_div">
            <div class="form-group clearfix">
                <label>@Localize.T("Sales Person")</label>
                @Html.DropDownList("SalesPerson", (List<SelectListItem>)ViewBag.EmployeeList, new { @class = "form-control  SalesPerson", id = "SalesPerson", @title = "Select Sales Person" })
            </div>
            <div class="form-group clearfix">
                <label>@Localize.T("Sales Location")</label>
                @Html.DropDownList("SalesLocation", (List<SelectListItem>)ViewBag.SalesLocationList, new { @class = "form-control  SalesPerson", id = "SalesLocation", @title = "Select Sales Location" })
            </div>
            <div class="form-group clearfix">
                <label>@Localize.T("Invoice Type")</label>
                @Html.DropDownList("InvoiceType", (List<SelectListItem>)ViewBag.InvoiceTypeList, new { @class = "form-control  SalesPerson", id = "InvoiceType", @title = "Select Invoice Type" })
            </div>
            <div class="form-group clearfix">
                <label>@Localize.T("Lead Source Type")</label>
                @Html.DropDownList("LeadSourceType", (List<SelectListItem>)ViewBag.LeadSourceTypeList, new { @class = "form-control  SalesPerson", id = "LeadSourceType", @title = "Select Lead Source Type" })
            </div>
            <div class="form-group clearfix">
                <label>@Localize.T("Lead Source")</label>
                @Html.DropDownList("LeadSource", (List<SelectListItem>)ViewBag.LeadSourceList, new { @class = "form-control  SalesPerson", id = "LeadSource", @title = "Select Lead Source" })
            </div>
            <div class="form-group clearfix">
                <label>@Localize.T("Install From Date")</label>
                <input class="form-control transfer_cus_inp" placeholder="Transfer Min Date" id="install_from_date" />
            </div>
            <div class="form-group clearfix">
                <label>@Localize.T("Install To Date")</label>
                <input class="form-control transfer_cus_inp" placeholder="Transfer Max Date" id="install_to_date" />
            </div>
        </div>
        <div class="convert_cus_report_footer convert_cus_div">
            <button class="btn green_button" id="apply_btn_filter" onclick="FilterNewSales(1)">@Localize.T("Apply")</button>
            <button class="btn red_button" id="reset_btn_filter" onclick="ResetFilterSalesPerson()">@Localize.T("Reset")</button>
        </div>
    </div>
</div>
<div class="col-md-12">
    &nbsp;
</div>

<div class="NewSalesReport">


</div>



