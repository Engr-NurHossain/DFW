@using Localize = HS.Web.UI.Helper.LanguageHelper
@model HS.Entities.InvoiceSetting
<style>
    .label-custom-padding {
        padding-left: 25px;
    }

    .estimate_left_set_header {
        width: 100%;
        font-size: 2rem;
        font-weight: 400;
        color: #393a3d;
        background-color: #f4f5f8;
        padding: 10px 0px 10px 20px;
    }
</style>
<script>
    var ShowEstimateServiceSetting = '@Model.ShowEstimateServiceSetting';
    var EstimateTaxSetting = '@Model.ShowEstimateTaxSetting';

    var EstimateSettingsChange = function (val,key) {
        var url = "/Estimate/ChangeEstimateSetting";
        var param = JSON.stringify({
            value: val,
            datakey: key
        });
        $.ajax({
            type: "POST",
            ajaxStart: $(".loader-div").show(),
            url: url,
            data: param,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                if (data.result == true) {
                    Console.log("changed");
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        })
    }
    var CalculateNewAmount = function () {
        var amount = parseFloat('0');
        $(".txtProductAmount").each(function () {
            var _CalAmt = $(this).val().trim();
            _CalAmt = _CalAmt.replaceAll(',', '');

            var currAmount = parseFloat(_CalAmt);
            if (!isNaN(currAmount)) {
                amount += currAmount;
            }
        });
        amount = parseFloat(amount).toFixed(2);
        amount1 = amount.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
        $(".amount").text(TransMakeCurrency + amount1);
        TotalAmount = amount;
        FinalTotal = amount;
        BalanceDue = amount;

        if ($("#Invoice_DiscountType").val() == "percent") {
            var a = 0;
            var Fval = 0;
            var discountAmount = 0;
            if ($("#discountAmount").length > 0) {
                if ($("#discountAmount").val() == "") {
                    discountAmount = 0;
                }
                else {
                    discountAmount = $("#discountAmount").val();
                }
            }
            Fdiscountamount = TotalAmount - ((amount / 100) * discountAmount);
            if (discountAmount != "" && Fdiscountamount > 0) {
                var discountAmountPercent = parseFloat(discountAmount);
                DiscountDBPercent = discountAmountPercent;
                DiscountDBAmount = a;
                DiscountAmount = (amount / 100) * discountAmountPercent;
                FinalTotal = TotalAmount - DiscountAmount;
                BalanceDue = FinalTotal;
                $(".shippingAmountTxt").text(TransMakeCurrency + DiscountAmount.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                if (DiscountAmount == 0) {
                    $(".Discount-total").addClass('hidden');
                }
                else {
                    $(".DiscountAmountTxt").text(TransMakeCurrency + Fdiscountamount.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                }
            }
            else {
                $(".shippingAmountTxt").text(TransMakeCurrency + "0.00");
                $("#discountAmount").val("");
                $(".DiscountAmountTxt").text(TransMakeCurrency + "0.00");
            }
        }
        if ($("#Invoice_DiscountType").val() == "amount") {
            var a = 0;
            var discountAmount = 0;
            if ($("#discountAmount").length > 0) {
                if ($("#discountAmount").val() == "") {
                    discountAmount = 0;
                }
                else {
                    discountAmount = $("#discountAmount").val();
                }
            }
            if (discountAmount != "" && DiscountAmount < amount) {
                var discountAmountPercent = parseFloat(discountAmount);
                DiscountDBAmount = discountAmountPercent;
                DiscountDBPercent = a;
                DiscountAmount = discountAmountPercent;
                FinalTotal = TotalAmount - DiscountAmount;
                BalanceDue = FinalTotal;
                Fdiscountamount = amount - DiscountAmount;
                $(".shippingAmountTxt").text(TransMakeCurrency + DiscountAmount.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                if (DiscountAmount == 0) {
                    $(".Discount-total").addClass('hidden');
                }
                else {
                    $(".DiscountAmountTxt").text(TransMakeCurrency + Fdiscountamount.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
                }
                /*$(".FinalTotalTxt").text("$" + FinalTotal.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));

                $(".balanceDueAmount").text("$" + FinalTotal.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));*/

            }
            else {
                $(".shippingAmountTxt").text(TransMakeCurrency + "0.00");
                $("#discountAmount").val("");
                $(".DiscountAmountTxt").text(TransMakeCurrency + "0.00");
            }
        }

        if ($("#taxType").val() != "") {
            var TPVal = $("#taxType").val();
            var TPercent = parseFloat(TPVal);
            if ($("#discountAmount").val() != "") {
                TaxAmount = (Fdiscountamount / 100) * TPercent;
                $(".tax").text(TransMakeCurrency + TaxAmount.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
            }
            else {
                TaxAmount = (FinalTotal / 100) * TPercent;
                $(".tax").text(TransMakeCurrency + TaxAmount.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
            }
            /*FinalTotal = parseFloat(FinalTotal) + parseFloat(TaxAmount);
            $(".FinalTotalTxt").text("$" + FinalTotal.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
            BalanceDue = FinalTotal;
            $(".balanceDueAmount").text("$" + FinalTotal.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));*/
        }
        if ($("#Invoice_ShippingCost").val() != "") {
            var shippingCostString = $("#Invoice_ShippingCost").val();
            ShippingAmount = parseFloat(shippingCostString);

        }
        var DA = 0;
        if ($("#Invoice_Deposit").val() != "") {
            DA = $("#Invoice_Deposit").val();
            if ($("#discountAmount").val() != "") {
                BalanceDue = Fdiscountamount - parseFloat(DA);
            }
            else {
                BalanceDue = FinalTotal - parseFloat(DA);
            }
            /* $(".balanceDueAmount").text("$" + BalanceDue.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));*/
        }
        if ($("#discountAmount").val() != "") {
            BalanceDue = parseFloat(Fdiscountamount) + parseFloat(TaxAmount) + parseFloat(ShippingAmount) - parseFloat(DA);
            FinalTotal = parseFloat(Fdiscountamount) + parseFloat(TaxAmount);
        }
        else {
            BalanceDue = parseFloat(TotalAmount) + parseFloat(TaxAmount) + parseFloat(ShippingAmount) - parseFloat(DA);
            FinalTotal = parseFloat(TotalAmount) + parseFloat(TaxAmount);
        }

        $(".FinalTotalTxt").text(TransMakeCurrency + FinalTotal.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
        $(".balanceDueAmount").text(TransMakeCurrency + BalanceDue.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
        $(".amount-big").text(TransMakeCurrency + BalanceDue.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
    }
    var Showshipping = function () {

        $("#ShippingField").show();
        $(".shipping").show();
    }
    var Hideshipping = function () {

        $("#ShippingField").hide();
        $(".shipping").hide();
        $("#Invoice_ShippingCost").val("0");
        CalculateNewAmount();
    }
    var ShowDiposit = function () {
        $(".Diposit").show();
    }
    var HideDiposit = function () {
        $(".Diposit").hide();
        $("#Invoice_Deposit").val("0");
        CalculateNewAmount();
    }
    
    var ShowTax = function () {

        $(".tax-amount-div").show();
    }
    var ShowDiscount = function () {

        $(".Discount").show();
    }
    var ShowService = function () {

        $(".service_list_div").show();
    }
    var HideTax = function () {

        $(".tax-amount-div").hide();
        $("#taxType").val("0");
        CalculateNewAmount();
    }
    var HideDiscount = function () {

        $(".Discount").hide();
        $("#discountAmount").val("0");
   
        CalculateNewAmount();
    }
    var HideService = function () {

        $(".service_list_div").hide();
        //$("#discountAmount").val("0");
        //CalculateNewAmount();
    }
    var flag = 0;
    var checkTotal = function () {
        console.log(flag);
        if (flag >0) {
            $(".total-amount-div").show();
        }
        else {
            $(".total-amount-div").hide();
        }
    }
    var ShowShippingDiv = function () {

        console.log("kire");
        $(".shipping-div").show();
        $(".shipping-amount-div").show();

    }
    var HideShippingDiv = function () {
        console.log("hare");
        $(".shipping-div").hide();
        $(".shipping-amount-div").hide();

    }
    var ShowDiscountDiv = function () {
        $(".discount-amount-div").show();
        //$(".Discount-total").removeClass('hidden');
    }
    var HideDiscountDiv = function () {
        $(".discount-amount-div").hide();
        $("#discountAmount").val("0");
    }
    var ShowDepositDiv = function () {
        $(".deposit-amount-div").show();

    }
    var HideDepositDiv = function () {
        $(".deposit-amount-div").hide();

    }

    $(document).ready(function () {
        var discountflag = 0;
        //InvoiceSettingsInitialLoad();
        if ($(".shipping-checkbox-es").prop('checked') == true) {
            flag++;
            ShowShippingDiv();
        }
        else {
            HideShippingDiv();
            $(".shippingAddress").val("");
        }
        if ($(".discount-checkbox-es").prop('checked') == true) {

            $(".Discount-total").removeClass('hidden');
            ShowDiscountDiv();
        }
        else {
            $(".Discount-total").addClass('hidden');
            HideDiscountDiv();
        }

        if (EstimateTaxSetting.toLowerCase() == "true") {
            if ($(".tax-checkbox-es").prop('checked') == true) {
                ShowTax();
            }
            else {
                HideTax();
            }
        }

        if (ShowEstimateServiceSetting.toLowerCase() == "true") {
            if ($(".service-checkbox-es").prop('checked') == true) {
            ShowService();
            }
        else{
            HideService();
            }
        }
        if ($(".deposit-checkbox-es").prop('checked') == true) {
            flag++;
            ShowDepositDiv();
        }
        else {
            HideDepositDiv();
        }

        $(".shipping-checkbox-es").change(function () {
            if (this.checked) {
                flag++;
                checkTotal();
                Showshipping();
                EstimateSettingsChange(true, 'InvoiceSettingsShipping');


            }
            else {
                Hideshipping();
                EstimateSettingsChange(false, 'InvoiceSettingsShipping');
                $(".shippingAddress").val("");
                if (flag <= 0) {
                    flag = 0;
                }
                else {
                    flag--;
                }

                checkTotal();
            }
        });
         $(".tax-checkbox-es").change(function () {
             if (this.checked) {
                 ShowTax();
                EstimateSettingsChange(true, 'EstimateTaxSetting');

            }
            else {
                 $(".Discount-total").addClass('hidden');
                 HideTax();
                EstimateSettingsChange(false, 'EstimateTaxSetting');
            }
        });
        $(".discount-checkbox-es").change(function () {
            if (this.checked) {
                $(".Discount-total").removeClass('hidden');
                ShowDiscount();
                EstimateSettingsChange(true, 'InvoiceSettingsDiscount');

            }
            else {
                $(".Discount-total").addClass('hidden');
                HideDiscount();
                EstimateSettingsChange(false, 'InvoiceSettingsDiscount');
            }
        });
        $(".service-checkbox-es").change(function () {
            if (this.checked) {
                //$(".Discount-total").removeClass('hidden');
                ShowService();
                EstimateSettingsChange(true, 'EstimateServiceSetting');

            }
            else {
                //$(".Discount-total").addClass('hidden');
                HideService();
                EstimateSettingsChange(false, 'EstimateServiceSetting');
            }
        });
        $(".deposit-checkbox-es").change(function () {
            if (this.checked) {

                ShowDiposit();
                EstimateSettingsChange(true, 'InvoiceSettingsDeposit');

                flag++;
                console.log(flag);
                checkTotal();
            }
            else {
                if (flag <= 0) {
                    flag = 0;
                }
                else {
                    flag--;
                }

                HideDiposit();
                EstimateSettingsChange(false, 'InvoiceSettingsDeposit');
                checkTotal();
            }
        });

        $(".vendorprice-checkbox-es").change(function () {
            if (this.checked) {

                EstimateSettingsChange(true, 'VendorPrice');
                console.log(flag);
                $(".retail_area").show();

            }
            else {

                $(".retail_area").hide();
                EstimateSettingsChange(false, 'VendorPrice');

            }
        });
    })
</script>
<div class="estimate_left_set_header">
    @Localize.T("Customize what you see here")
</div>
<div class="container-fluid">
    <div class="row">

        <div class="col-md-12">
            <h5>@Localize.T("Changes you make here apply to all sales forms (like sales receipts and estimates).")</h5>
        </div>
        <div class="col-md-12">
            <label>@Localize.T("Fields")</label>
        </div>
        <div class="col-md-12">
            @if (Model.ShowEstimateServiceSetting)
            {
                <div class="col-md-12">
                    <label class="label-cbx">
                        <input id="cbx" type="checkbox" class="invisible service-checkbox-es" @(Model.ServiceSetting ? "checked" : "") autocomplete="off">
                        <div class="checkbox">
                            <svg width="20px" height="20px" viewBox="0 0 20 20">
                                <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                <polyline points="4 11 8 15 16 6"></polyline>
                            </svg>
                            <span class="label-custom-padding">@Localize.T("Show Service")</span>
                        </div>
                    </label>
                </div>
            }
            <div class="col-md-12">
                <label class="label-cbx">
                    <input id="cbx" type="checkbox" class="invisible shipping-checkbox-es" @(Model.ShippingSetting ? "checked" : "") autocomplete="off">
                    <div class="checkbox">
                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                            <polyline points="4 11 8 15 16 6"></polyline>
                        </svg>
                        <span class="label-custom-padding">@Localize.T("Shipping")</span>
                    </div>
                </label>
            </div>
            <div class="col-md-12">
                <label class="label-cbx">
                    <input id="cbx" type="checkbox" class="invisible tax-checkbox-es" @(Model.ShowEstimateTaxSetting ? "checked" : "") autocomplete="off">
                    <div class="checkbox">
                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                            <polyline points="4 11 8 15 16 6"></polyline>
                        </svg>
                        <span class="label-custom-padding">@Localize.T("Tax")</span>
                    </div>
                </label>
            </div>
            <div class="col-md-12">
                <label class="label-cbx">
                    <input id="cbx" type="checkbox" class="invisible discount-checkbox-es" @(Model.DiscountSetting ? "checked" : "") autocomplete="off">
                    <div class="checkbox">
                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                            <polyline points="4 11 8 15 16 6"></polyline>
                        </svg>
                        <span class="label-custom-padding">@Localize.T("Discount")</span>
                    </div>
                </label>
            </div>

            <div class="col-md-12">
                <label class="label-cbx">
                    <input id="cbx" type="checkbox" class="invisible deposit-checkbox-es" @(Model.DepositSetting ? "checked" : "") autocomplete="off">
                    <div class="checkbox">
                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                            <polyline points="4 11 8 15 16 6"></polyline>
                        </svg>
                        <span class="label-custom-padding">@Localize.T("Deposit")</span>
                    </div>
                </label>
            </div>

            <div class="col-md-12">
                <label class="label-cbx">
                    <input id="cbx" type="checkbox" class="invisible vendorprice-checkbox-es" @(Model.VendorPriceSetting ? "checked" : "") autocomplete="off">
                    <div class="checkbox">
                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                            <polyline points="4 11 8 15 16 6"></polyline>
                        </svg>
                        <span class="label-custom-padding">@Localize.T("Vendor Price")</span>
                    </div>
                </label>
            </div>
        </div>
    </div>
</div>
