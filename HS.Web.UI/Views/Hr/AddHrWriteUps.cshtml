@{ 
    Layout = null;
}
@model HS.Entities.EmployeeWriteUp
@using Localize = HS.Web.UI.Helper.LanguageHelper
<link href="~/Content/Css/Hr/AddWriteup.css" rel="stylesheet" />
<link href="~/Content/Css/AddFile/AddFile.css" rel="stylesheet" />
<script>
    var filepathFM = '@Model.FilePath';

    var UserFileUploadjqXHRData;
    //var ReloadFIlesTab = function () {
    //    $("#FilesTab").load("/File/CustomerFiles/" + customerId);
    //}
    //var SaveCustomerFile = function () {
    //    var url = domainurl + "/File/SaveCustomerFile/";
    //    var param = JSON.stringify({
    //        File: $("#UploadedPath").val(),
    //        CustomerId: userId,
    //        Description: $("#description").val()
    //    });
    //    $.ajax({
    //        type: "POST",
    //        ajaxStart: $(".loader-div").show(),
    //        url: url,
    //        data: param,
    //        contentType: "application/json; charset=utf-8",
    //        dataType: "json",
    //        cache: false,
    //        success: function (data) {
    //            OpenSuccessMessageNew("Success!", "File Saved Successfully.", function () {
    //                OpenFilesTab();
    //                $("#Right-To-Left-Modal-Body .close").click();
    //            });
    //            $(".customer-files-modal-head .close").click();
    //        },
    //        error: function (jqXHR, textStatus, errorThrown) {
    //            console.log(errorThrown);
    //        }
    //    });

    //}


    var SaveThisHrWriteup = function () {
        console.log(userId);
        var url = domainurl + "/Hr/SaveHrWriteup";
        var param = JSON.stringify({
            Id: $("#IdVal").val(),
            UserId: userId,
            Supervisor:$("#Supervisor").val(),
            Category: $("#Hr_Category").val(),
            Description: $("#Description").val(),
            WriteupDate: $("#WriteupDate").val(),
            FilePath: $("#UploadedPath").val(),
            FileName: $("#FileName").val()
          
        })
        $.ajax({
            type: "POST",
            url: url,
            data: param,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                if (data.result) {
                    OpenSuccessMessageNew("Success!", data.message, function () {
                        $("#WriteupsLoad").load(domainurl + "/Hr/HrWriteUps?userId=" + userId);
                        $(".close").click()
                    });
                } else {
                    OpenErrorMessageNew("Error!", data.message, function () {

                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $(".loader-div").hide();
                console.log(errorThrown);
            }
        });
    }
    $(document).ready(function () {
        if (typeof (filepathFM) != "undefined" && filepathFM != null && filepathFM != "" && filepathFM != "-1") {
                $("#UploadSuccessMessage").removeClass('hidden');
                $("#UploadedPath").val(filepathFM);
                var spfile = filepathFM.split('.');
                $(".fileborder").removeClass('red-border');
                $("#uploadfileerror").addClass("hidden");
                var index = spfile.length - 1;
                if (spfile[index] == "png" || spfile[index] == "PNG" || spfile[index] == "jpg" || spfile[index] == "JPG" || spfile[index] == "jpeg" || spfile[index] == "JPEG") {
                    $("#UploadCustomerFileBtnWriteUp").attr('src', filepathFM)
                    $(".chooseFilebtn").addClass("hidden");
                    $(".changeFilebtn").removeClass("hidden");
                    $(".deleteDoc").removeClass("hidden");
                    $("#UploadCustomerFileBtnWriteUp").addClass('custom-file');
                    $("#UploadCustomerFileBtnWriteUp").removeClass('otherfileposition');
                    $(".fileborder").addClass('border_none');
                }
                else if (spfile[index] == "pdf") {
                    $(".chooseFilebtn").addClass("hidden");
                    $(".changeFilebtn").removeClass("hidden");
                    $(".deleteDoc").removeClass("hidden");
                    $("#UploadCustomerFileBtnWriteUp").attr('src', domainurl + '/Content/Icons/pdf.png');
                    $("#UploadCustomerFileBtnWriteUp").addClass('otherfileposition');
                    $("#UploadCustomerFileBtnWriteUp").removeClass('custom-file');
                    $(".fileborder").removeClass('border_none');
                }
                else if (spfile[index] == "doc" || spfile[index] == "docx") {
                    $(".chooseFilebtn").addClass("hidden");
                    $(".changeFilebtn").removeClass("hidden");
                    $(".deleteDoc").removeClass("hidden");
                    $("#UploadCustomerFileBtnWriteUp").attr('src', '/Content/Icons/docx.png');
                    $("#UploadCustomerFileBtnWriteUp").addClass('otherfileposition');
                    $("#UploadCustomerFileBtnWriteUp").removeClass('custom-file');
                    $(".fileborder").removeClass('border_none');
                }
                else if (spfile[index] == "mp4" || spfile[index] == "mov") {
                    $(".chooseFilebtn").addClass("hidden");
                    $(".changeFilebtn").removeClass("hidden");
                    $(".deleteDoc").removeClass("hidden");
                    $("#UploadCustomerFileBtnWriteUp").attr('src', '/Content/Icons/mp4.png');
                    $(".fileborder").removeClass('border_none');
                }
                else {
                    $(".chooseFilebtn").addClass("hidden");
                    $(".changeFilebtn").removeClass("hidden");
                    $(".deleteDoc").removeClass("hidden");
                    $("#UploadCustomerFileBtnWriteUp").attr('src', '/Content/Icons/docx.png');
                    $("#UploadCustomerFileBtnWriteUp").addClass('otherfileposition');
                    $("#UploadCustomerFileBtnWriteUp").removeClass('custom-file');
                    $(".fileborder").removeClass('border_none');
                }
        }



        $("#UploadCustomerFileBtnWriteUp").click(function () {
            console.log("UploadCustomerFileBtnWriteUp");
            $("#UploadedFile").click();
            $("#UploadSuccessMessage").addClass('hidden');
        });
        $(".change-picture-logo").click(function () {
            console.log("change-picture-logo");
            $("#UploadedFile").click();
            $("#UploadSuccessMessage").addClass('hidden');
        });
        $('#UploadedFile').fileupload({
            pasteZone: null,
            url: domainurl + '/File/UploadWriteUpsFile?CustomerId=' + $("#IdVal").val(), /* CustomerId*/
            dataType: 'json',
            add: function (e, data) {
                var ext = data.files[0].name.split(".");
                if ($("#FileName").val() == "") {
                    var filename = data.fileInput[0].value.split('\\').pop();
                    $("#FileName").val(filename);
                }
                if (ext[1] == 'doc' || ext[1] == 'docx' || ext[1] == 'xls' || ext[1] == 'xlsx' || ext[1] == 'jpeg' || ext[1] == 'JPEG' || ext[1] == 'jpg' || ext[1] == 'gif' || ext[1] == 'png' || ext[1] == 'rtf' || ext[1] == 'pdf' || ext[1] == 'txt' || ext[1] == 'mp4' || ext[1] == 'mov') {

                    if (data.files[0].size <= 50000000) {
                        UserFileUploadjqXHRData = data;
                    }
                    else {
                        OpenErrorMessageNew("Error!", "File size is more then 50 mb.", function () {
                            $(".close").click();
                        })
                    }

                }
                else {
                    OpenErrorMessageNew("Error!", "File format not valid.", function () {
                        $(".close").click();
                    })
                }

            },
            progress: function (e, data) {
                var percentVal = parseInt(data.loaded / data.total * 100, 10);
                $(".file-progress").show();
                $(".file-progress .progress-bar").animate({
                    width: percentVal + "%"
                }, 40);
                $(".file-progress .progress-bar span").text(percentVal + '%');
            },
            done: function (event, data) {
                console.log("dfdf");
                setTimeout(function () {
                    $(".file-progress").hide();
                    $(".file-progress .progress-bar").animate({
                        width: 0 + "%"
                    }, 0);
                    $(".file-progress .progress-bar span").text(0 + '%');
                }, 500);

                if ((typeof (data.result.isUploaded) != "undefined") && data.result.isUploaded == true) {
                    $("#UploadSuccessMessage").removeClass('hidden');
                    //$("#UploadCustomerFileBtnWriteUp").addClass('hidden');
                    $("#UploadedPath").val(data.result.filePath);
                    var spfile = data.result.FullFilePath.split('.');
                    //if (spfile[1] == "png" || spfile[1] == "jpg" || spfile[1] == "jpeg") {
                    //    $(".Upload_Doc").addClass('hidden');

                    //    $(".LoadPreviewDocument").removeClass('hidden');
                    //    $("#Preview_Doc").attr('src', data.result.FullFilePath);
                    //}
                    $(".fileborder").removeClass('red-border');
                    $("#uploadfileerror").addClass("hidden");

                    var index = spfile.length - 1;
                    if (spfile[index] == "png" || spfile[index] == "PNG" || spfile[index] == "jpg" || spfile[index] == "JPG" || spfile[index] == "jpeg" || spfile[index] == "JPEG") {
                        //$(".Upload_Doc").addClass('hidden');
                        //$(".LoadPreviewDocument").removeClass('hidden');
                        //$("#Preview_Doc").attr('src', data.result.FullFilePath);
                        $("#UploadCustomerFileBtnWriteUp").attr('src', data.result.filePath)
                        $(".chooseFilebtn").addClass("hidden");
                        $(".changeFilebtn").removeClass("hidden");
                        $(".deleteDoc").removeClass("hidden");
                        $("#UploadCustomerFileBtnWriteUp").addClass('custom-file');
                        $("#UploadCustomerFileBtnWriteUp").removeClass('otherfileposition');
                        $(".fileborder").addClass('border_none');
                    }
                    else if (spfile[index] == "pdf") {
                        $(".chooseFilebtn").addClass("hidden");
                        $(".changeFilebtn").removeClass("hidden");
                        $(".deleteDoc").removeClass("hidden");
                        $("#UploadCustomerFileBtnWriteUp").attr('src', domainurl + '/Content/Icons/pdf.png');
                        $("#UploadCustomerFileBtnWriteUp").addClass('otherfileposition');
                        $("#UploadCustomerFileBtnWriteUp").removeClass('custom-file');
                        $(".fileborder").removeClass('border_none');
                    }
                    else if (spfile[index] == "doc" || spfile[index] == "docx") {
                        $(".chooseFilebtn").addClass("hidden");
                        $(".changeFilebtn").removeClass("hidden");
                        $(".deleteDoc").removeClass("hidden");
                        $("#UploadCustomerFileBtnWriteUp").attr('src', '/Content/Icons/docx.png');
                        $("#UploadCustomerFileBtnWriteUp").addClass('otherfileposition');
                        $("#UploadCustomerFileBtnWriteUp").removeClass('custom-file');
                        $(".fileborder").removeClass('border_none');
                    }
                    else if (spfile[index] == "mp4" || spfile[index] == "mov") {
                        $(".chooseFilebtn").addClass("hidden");
                        $(".changeFilebtn").removeClass("hidden");
                        $(".deleteDoc").removeClass("hidden");
                        $("#UploadCustomerFileBtnWriteUp").attr('src', '/Content/Icons/mp4.png');
                        //$("#UploadCustomerFileBtnWriteUp").addClass('otherfileposition');
                        //$("#UploadCustomerFileBtnWriteUp").removeClass('custom-file');
                        $(".fileborder").removeClass('border_none');
                    }
                    else {
                        $(".chooseFilebtn").addClass("hidden");
                        $(".changeFilebtn").removeClass("hidden");
                        $(".deleteDoc").removeClass("hidden");
                        $("#UploadCustomerFileBtnWriteUp").attr('src', '/Content/Icons/docx.png');
                        $("#UploadCustomerFileBtnWriteUp").addClass('otherfileposition');
                        $("#UploadCustomerFileBtnWriteUp").removeClass('custom-file');
                        $(".fileborder").removeClass('border_none');
                    }
                    //else {
                    //    $(".Upload_Doc").addClass('hidden');
                    //    $(".LoadPreviewDocument").addClass('hidden');
                    //    $(".LoadPreviewDocument1").removeClass('hidden');
                    //    $("#Frame_Doc").attr('src', data.result.FullFilePath);
                    //}
                }
            },
            fail: function (event, data) {
                //if (data.files[0].error) {
                //    //alert(data.files[0].error);
                //}
            }
        });
        //$("#UploadedFile").on("change", function () {
        //    if (UserFileUploadjqXHRData) {
        //        UserFileUploadjqXHRData.submit();
        //    }
        //    return false;
        //});

        $("#btnSaveHrWriteup").click(function () {
            if (CommonUiValidation() ) {
                    SaveThisHrWriteup();

                //SaveCustomerFile();
                $(".fileborder").removeClass('red-border');
            }
            //if ($("#UploadedPath").val() == "") {
            //    $("#uploadfileerror").removeClass("hidden");
            //    $(".fileborder").addClass('red-border');
            //}
        });


        $(".deleteDoc").click(function () {
            OpenConfirmationMessageNew("Confirm?", "Are you sure you want to delete this file?", function () {
                $(".Upload_Doc").removeClass('hidden');
                //$(".LoadPreviewDocument").addClass('hidden');
                //$(".LoadPreviewDocument1").addClass('hidden');
                $("#UploadCustomerFileBtnWriteUp").attr('src', '/Content/Icons/blank_thumb_file.png');
                $(".chooseFilebtn").removeClass("hidden");
                $(".changeFilebtn").addClass("hidden");
                $(".deleteDoc").addClass("hidden");
                $("#Preview_Doc").attr('src', "");
                $("#Frame_Doc").attr('src', "");
                $("#UploadSuccessMessage").hide();
                $("#FileName").val("");
                $("#UploadedPath").val('');
                $(".fileborder").addClass('border_none');
                $("#UploadCustomerFileBtnWriteUp").removeClass('otherfileposition');
            });
        });


        $("#WriteupDateCustom").change(function () {
         
            if ($("#WriteupDate").val() != "") {
                $("#WDate").addClass("hidden");
                $("#WriteupDate").removeClass("required");
            }
        })

        setTimeout(function () {
            var WriteupDate = new Pikaday({
                format: 'MM/DD/YYYY',
                field: $('#WriteupDate')[0],
                trigger: $('#WriteupDateCustom')[0],
                firstDay: 1
            },2000);
        });
        //$("#btnSaveHrWriteup").click(function () {
        //    if (CommonUiValidation()) {
        //        SaveThisHrWriteup();
        //    }
        //});
    });

    $("#UploadedPath").blur(function () {
        if ($("#UploadedPath").val() == "") {
            $("#uploadfileerror").removeClass("hidden");
            $(".fileborder").addClass('red-border');
        }
        if ($("#UploadedPath").val() != "") {
            $("#uploadfileerror").addClass("hidden");
            $(".fileborder").removeClass('red-border');
        }
    })
</script>

<div class="AddWriteup_container">
    <div class="AddWriteup_header">
        @Localize.T("Add Write up")
    </div>
    <div class="AddWriteup_inner">
        <input type="hidden" value="@Model.Id" id="IdVal" />
        @Html.HiddenFor(m => m.Id)
        <div class="AddWriteup_inner_info">
            <label>@Localize.T("Supervisor")</label>
            <div class="input_group_for_date add-on" id="OccurenceDatePickerCustom">
                @Html.DropDownListFor(x => x.Supervisor, (List<SelectListItem>)ViewBag.SupervisorList, new { @class = "form-control" })

            </div>
        </div>
        <div class="AddWriteup_inner_info">
            <label>@Localize.T("Catagory")</label>
            <div class="input_group_for_date add-on" id="OccurenceDatePickerCustom">
              @Html.DropDownListFor(x => x.Category, (List<SelectListItem>)ViewBag.CatagoryList, new { @class = "form-control", id = "Hr_Category" })
               
            </div>
        </div>
        <div class="AddWriteup_inner_info">
            <label>@Localize.T("Write up date")</label>
            <div class="shipping-amount-span">
                <div class="input-group" id="WriteupDateCustom">
                    <input type="text" Placeholder = "Write up Date" id="WriteupDate" value="@Model.WriteupDate"  class="form-control" name="WDate" datarequired="true" />
                    
                    <div class="input-group-btn">
                        <btn class="btn">
                            <i class="fa fa-calendar" aria-hidden="true" style="cursor:pointer;"></i>
                        </btn>
                    </div>

                </div>
                <label rel="WDate" id="WDate" class="label hidden red position-absolute">*@Localize.T("Write up Date Required")</label>
            </div>

        </div>

        

        <div class="form-group clearfix">
            <span class="">@Localize.T("Allowed file types: doc, docx, xls, xlsx, jpg, jpeg, gif, png, rtf, pdf, txt") </span><br />
            <span class="">@Localize.T("(max file size: 20 mb)")</span>
        </div>
        <div>
            <br />
        </div>
        <div class="txt-form Upload_Doc">
            <div class="col-md-12 padding-left-0">
                <div class="fileborder border_none">
                    <img id="UploadCustomerFileBtnWriteUp" class="cursor-pointer custom-file" src="~/Content/Icons/blank_thumb_file.png" />
                </div>
                
                <div class="deleteDoc cursor-pointer hidden">
                    <img src="~/Content/Icons/cross-image-delete.png" />
                </div>
                <div class="change-picture-logo white-color cursor-pointer text-align-center">
                    <span class="chooseFilebtn"><img src="~/Content/Icons/edit-icon.png" /> @Localize.T("Choose File to Upload")</span>
                    <span class="changeFilebtn hidden"><img src="~/Content/Icons/edit-icon.png" /> @Localize.T("Change File")</span>
                </div>
           
                <div class="LoadPreviewDocument hidden">
                    <div class="show-image PropertyLogoPreviewPic">
                        <div class="image-delete" data-id="">
                            <img src="~/Content/Icons/cross-image-delete.png" />
                        </div>
                        <img class="Preview_Doc T360image-photo T360image" src="" />
                    </div>
                    <div class="change-picture-logo white-color cursor-pointer text-align-center T360image">
                        <span><img src="~/Content/Icons/edit-icon.png" /> @Localize.T("Change File")</span>
                    </div>
                </div>
          
            </div>

            <div class="col-md-12 progress-container file-progress" style="display:none; padding-left:0; padding-right:0; margin-top: 15px;">
                <div class="progress progress-striped active">
                    <div class="progress-bar progress-bar-success" style="width:0%">
                        <span> 0%</span>
                    </div>
                </div>
            </div>
            <label class="label red position-relative hidden" id="uploadfileerror">*@Localize.T("File required")</label>
        </div>
        <div class="LoadPreviewDocument hidden">
            <div class="show-image">
                <img id="Preview_Doc" src="" />
                <input class="deleteDoc" type="image" title="@Localize.T("Close")" src="~/Content/Icons/cross_update.png" />
            </div>
            <div class="change-picture-logo white-color cursor-pointer text-align-center T360image">
                <span><img src="~/Content/Icons/edit-icon.png" /></span>
            </div>
        </div>
        <div class="LoadPreviewDocument1 hidden">
            <div class="show-image">
                <iframe id="Frame_Doc" src="" width="319" height="455"></iframe>
                <input class="deleteDoc" type="image" title="@Localize.T("Close")" src="~/Content/Icons/cross_update.png" />
            </div>
        </div>
        <div class="hidden">
            <input  type="text" id="FileName"/>
        </div>











        <div class="AddWriteup_inner_info">
            <label>@Localize.T("Description")</label>
            @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @row = "5" })
          
        </div>
    </div>
    <div class="AddWriteup_footer">
        <button class="btn" id="btnSaveHrWriteup"><i class="fa fa-floppy-o" aria-hidden="true"></i> Save</button>
    </div>
  
</div>

<div class="">
    <input type="hidden" id="UploadedPath" value="" />
    <input type="file" name="CustomerFile" class="hidden" id="UploadedFile" />

</div>

