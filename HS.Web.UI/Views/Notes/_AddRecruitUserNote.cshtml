@{
    Layout = null;
}

@model HS.Entities.EmployeeNote
@using Localize = HS.Web.UI.Helper.LanguageHelper
<style>
    .ChooseUserTypeHeader {
        text-align: left;
        background-color: #e4e4e4;
    }

        .ChooseUserTypeHeader div {
            padding-top: 10px;
            padding-bottom: 10px;
            padding-left: 10px;
            font-size: 2rem;
        }

    .content-div {
        padding-left: 10px;
        padding-right: 10px;
        margin-top: 10px;
    }

    .SaveCancelDiv {
        width: 95%;
        padding-top: 8px;
    }

    .footer-section {
        background: #eceef1;
        height: 50px;
        position: fixed;
        width: 100%;
        bottom: 0%;
    }

    .btn-ennote {
        float: right;
        background-color: green;
        color: white;
    }

        .btn-ennote:hover {
            color: white;
        }
        .label-cbx {
  user-select: none;
  cursor: pointer;
  margin-bottom: 0;
}
.label-cbx input:checked + .checkbox_ac {
  border-color: #00c31f;
 
}
.label-cbx input:checked + .checkbox_ac svg path {
  fill: none;
}
.label-cbx input:checked + .checkbox_ac svg polyline {
  stroke-dashoffset: 0;
}
.label-cbx:hover .checkbox_ac svg path {
  stroke-dashoffset: 0;
  stroke-width: 1;
  

}
.label-cbx .checkbox_ac {
  position: relative;
  top: 5px;
  float: left;
  margin-right: 8px;
  width: 20px;
  height: 20px;
  border: 2px solid #C8CCD4;
  border-radius: 3px;
}
.label-cbx .checkbox_ac svg {
    position: absolute;
    top: -3px;
    left: -2px;
}
.label-cbx .checkbox_ac svg path {
  fill: none ;
  stroke: #00c31f;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-dasharray: 71px;
  stroke-dashoffset: 71px;
  transition: all 0.6s ease;
}
.label-cbx .checkbox_ac svg polyline {
  fill: none;
  stroke: #00c31f;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-dasharray: 18px;
  stroke-dashoffset: 18px;
  transition: all 0.3s ease;
}
.label-cbx > span {
  pointer-events: none;
  vertical-align: middle;
}
.invisible {
  position: absolute;
  z-index: -1;
  width: 0;
  height: 0;
  opacity: 0;
}
</style>
<script>
    var enrdate = new Pikaday({ format: 'MM/DD/YYYY', field: $('#ReminderDate')[0] });
    var SaveEmployeeNote = function () {
        var url = domainurl + "/Notes/AddRecruitUserNote";
        var param = JSON.stringify({
            Id: $("#Id").val(),
            EmpId: $("#EmpId").val(),
            Notes: $("#Notes").val(),
            ReminderDate: enrdate.getDate(),
            IsEmail: $("#IsEmail").is(':checked'),
            IsText: $("#IsText").is(':checked')
        })
        $.ajax({
            type: "POST",
            url: url,
            data: param,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                if (data.result == true) {
                    $('.close').trigger('click');
                    $("#notesTab").load(domainurl + "/Notes/RecruitUserNote?id=" + data.empid);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $(".loader-div").hide();
                console.log(errorThrown);
            }
        });
    }

    $(document).ready(function () {
        $("#SaveEmployeeNote").click(function () {
            if ($("#Notes").val() == "" && $("#ReminderDate").val() == "") {
                $("#Notes").css("border-color", "red");
                $("#ReminderDate").css("border-color", "red");
            }
            else {
                $("#Notes").css("border-color", "#ccc");
                $("#ReminderDate").css("border-color", "#ccc");
                SaveEmployeeNote();
            }
        })
    })
</script>
@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.EmpId)
<div class="ChooseUserTypeHeader">
    <div>@Localize.T("Add User Note")</div>
</div>
<div class="form-group clearfix content-div">
    <label>@Localize.T("Note")</label>
    @Html.TextAreaFor(x => x.Notes, new { @class = "form-control"})
</div>
<div class="form-group clearfix content-div">
    <label>@Localize.T("Reminder Date")</label>
    @Html.TextBoxFor(x => x.ReminderDate, new { @class = "form-control" })
</div>
<div class="form-group clearfix content-div">
    <label for="IsEmail" class="label-cbx">
        <input id="IsEmail" idval="" type="checkbox" name="checkbox" class="invisible" @(Model.IsEmail.Value ? "checked" : "") autocomplete="off">
        <div class="checkbox_ac">
            <svg width="20px" height="20px" viewBox="0 0 20 20">
                <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                <polyline points="4 11 8 15 16 6"></polyline>
            </svg>
        </div>
    </label>
    <label class="lbl-CheckBoxText pad_none">@Localize.T("Is Email")</label>
</div>

<div class="form-group clearfix content-div">
    <label for="IsText" class="label-cbx">
        <input id="IsText" idval="" type="checkbox" name="checkbox" class="invisible" @(Model.IsText.Value ? "checked" : "") autocomplete="off">
        <div class="checkbox_ac">
            <svg width="20px" height="20px" viewBox="0 0 20 20">
                <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                <polyline points="4 11 8 15 16 6"></polyline>
            </svg>
        </div>
    </label>
    <label class="lbl-CheckBoxText pad_none">@Localize.T("Is Text")</label>
</div>


<section class="footer-section">
    <footer class="footer">
        <div class="SaveCancelDiv">
            <button class="btn btn-ennote" id="SaveEmployeeNote"><i class="fa fa-floppy-o" aria-hidden="true"></i>@Localize.T(" Save")</button>
        </div>
    </footer>
</section>
