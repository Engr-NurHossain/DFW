@model List<HS.Entities.GridSetting>
@using Localize = HS.Web.UI.Helper.LanguageHelper
@{ 
    List<HS.Entities.GridSetting> GroupGridSettings = (List<HS.Entities.GridSetting>)ViewBag.GroupGridSettings;
}
<link href="~/Content/Css/Setup/CustomerUiSettingsPartial.css" rel="stylesheet" />
@*<script>
    var UpdateCustomerUi = function () {
        var url = domainurl + "/Setup/UpdateCustomerUiSettings";

            var GridSettings = [];
            $(".customerGridSettings tbody tr").each(function () {
                GridSettings.push({
                    Id: $(this).attr('data-id'),
                    ListKeyName: "CustomerGrid",
                    SelectedColumn: $(this).find('.CustKeyName').text(),
                    OrderBy: $(this).find(".orderby").text(),
                    InputType: $(this).find(".InputType").text(),
                    FormActive: $(this).find(".CustFormValue").is(':checked'),
                    GridActive: $(this).find(".CustGridValue").is(':checked'),
                    ColumnGroup: $("#CustColumnGroup_" + $(this).attr('data-id')).val(),
                    IsActive: $(this).find(".IsActive").text()
                });
            });

            console.log(GridSettings)

            $.ajax({
                type: "POST",
                ajaxStart: function () { },
                url: url,
                data: JSON.stringify(GridSettings),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                cache: false,
                success: function (data) {
                    // LoadInventory(true);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(errorThrown);
                }
            })
    }

    var UpdateCustomerGroupUi = function () {
        var url = domainurl + "/Setup/UpdateCustomerUiSettings";

        var GridSettings = [];
        $(".customerGroupGridSettings tbody tr").each(function () {
            GridSettings.push({
                Id: $(this).attr('data-id'),
                ListKeyName: "CustomerGridGroup",
                SelectedColumn: $(this).find('.CustGroupKeyName').text(),
                OrderBy: $(this).find(".orderby").text(),
                InputType: $(this).find(".InputType").text(),
                FormActive: $(this).find(".CustGroupFormValue").is(':checked'),
                GridActive: $(this).find(".CustGroupGridValue").is(':checked'),
                ColumnGroup: $("#CustGroupColumnGroup" + $(this).attr('data-id')).val(),
                IsActive: $(this).find(".IsActive").text()
            });
        });

        console.log(GridSettings)

        $.ajax({
            type: "POST",
            ajaxStart: function () { },
            url: url,
            data: JSON.stringify(GridSettings),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                // LoadInventory(true);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        })
    }
        $(document).ready(function () {
            $(".LoaderWorkingDiv").hide();

            $(".CustFormValue").click(function () {
                UpdateCustomerUi();
            });
            $(".CustGridValue").click(function () {
                UpdateCustomerUi();
            });
            $(".CustColumnGroup").children().change(function () {
                UpdateCustomerUi();
            })
            $(".CustGroupFormValue").click(function () {
                UpdateCustomerGroupUi();
            });
            $(".CustGroupGridValue").click(function () {
                UpdateCustomerGroupUi();
            });

            $(".customerGridSettings tbody").sortable({
                update: function () {
                    var i = 1;
                    $(".customerGridSettings tbody tr td.orderby").each(function () {
                        $(this).text(i);
                        i += 1;
                    });
                    UpdateCustomerUi();
                }
            }).disableSelection();

            $(".customerGroupGridSettings tbody").sortable({
                update: function () {
                    var i = 1;
                    $(".customerGroupGridSettings tbody tr td.orderby").each(function () {
                        $(this).text(i);
                        i += 1;
                    });
                    UpdateCustomerGroupUi();
                }
            }).disableSelection();
        });
</script>*@

<div class="customerUiSettingPartial_container">
    @*<div class="ci_header clearfix">
        <div style="float:left;">@Localize.T("Lead UI Settings")</div>
    </div>*@
    @*<div class="row">
    *@
    @*<div class="col-md-12">
            <h4>@Localize.T("Equipment Grid Settings") </h4>
        </div>*@
   
        <table class="customerGridSettings">
            <thead>
                <tr>
                    <th>@Localize.T("Order")</th>
                    <th>@Localize.T("Name")</th>
                    <th>@Localize.T("Column Group")</th>
                    <th>@Localize.T("Grid List")</th>
                    <th>@Localize.T("Form Design")</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var FormChecked = "";
                    if (item.FormActive != null && item.FormActive == true)
                    {
                        FormChecked = "checked";
                    }
                    var GridChecked = "";
                    if (item.GridActive != null && item.GridActive == true)
                    {
                        GridChecked = "checked";
                    }
                    <tr data-id="@item.Id">
                        <td class="hidden InputType">@item.InputType</td>
                        <td class="hidden IsActive">@item.IsActive</td>
                        <td class="orderby">@item.OrderBy</td>
                        <td class="CustKeyName">@item.SelectedColumn</td>
                        <td class="CustColumnGroup">
                            <script>
                                if('@item.ColumnGroup'!='')
                                    $("#CustGroupColumnGroup_@item.Id").val('@item.ColumnGroup');
                            </script>
                            <select class="form-control" style="width:170px" id="CustGroupColumnGroup_@item.Id" onchange="updateGroup('@item.Id', this.value)">
                                @foreach (var group in ViewBag.GroupList as List<SelectListItem>)
                                {
                                    <option value="@group.Value" @(group.Value == item.ColumnGroup ? "selected" : "")>@group.Text</option>
                                }
                            </select>
                        </td>
                        <td class="IsView">
                            <label for="cbx-Grid@(item.Id)" class="label-cbx">
                                <input id="cbx-Grid@(item.Id)" idval="@(item.Id)" type="checkbox" name="checkbox-Grid-@(item.Id)" class="invisible CustGridValue" @GridChecked>
                                <div class="checkbox">
                                    <svg width="20px" height="20px" viewBox="0 0 20 20">
                                        <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                        <polyline points="4 11 8 15 16 6"></polyline>
                                    </svg>
                                </div>
                            </label>
                        </td>
                        <td class="IsView">
                            <label for="cbx@(item.Id)" class="label-cbx">
                                <input id="cbx@(item.Id)" idval="@(item.Id)" type="checkbox" name="checkbox-Form-@(item.Id)" class="invisible CustFormValue" @FormChecked>
                                <div class="checkbox">
                                    <svg width="20px" height="20px" viewBox="0 0 20 20">
                                        <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                        <polyline points="4 11 8 15 16 6"></polyline>
                                    </svg>
                                </div>
                            </label>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
   
    <div class="col-md-12">
        <div class="instructions-container-div">
            <p class="instructions">@Localize.T("Drag rows to up and down for rearranging column order").</p>
        </div>
    </div>

    <div class="col-md-12">
            <h4>@Localize.T("Customer Group Grid Settings") </h4>
        </div>
   
        <table class="customerGroupGridSettings">
            <thead>
                <tr>
                    <th>@Localize.T("Order")</th>
                    <th>@Localize.T("Name")</th>
                    <th>@Localize.T("Column Group")</th>
                    @*<th>@Localize.T("Grid List")</th>
                    <th>@Localize.T("Form Design")</th>*@
                </tr>
            </thead>
            <tbody>
                @foreach (var item in GroupGridSettings)
                {
                    var FormChecked = "";
                    if (item.FormActive != null && item.FormActive == true)
                    {
                        FormChecked = "checked";
                    }
                    var GridChecked = "";
                    if (item.GridActive != null && item.GridActive == true)
                    {
                        GridChecked = "checked";
                    }
                    <tr data-id="@item.Id">
                        <td class="hidden InputType">@item.InputType</td>
                        <td class="hidden IsActive">@item.IsActive</td>
                        <td class="orderby">@item.OrderBy</td>
                        <td class="CustGroupKeyName">@item.SelectedColumn</td>
                        <td class="hidden CustGroupColumnGroup">
                            <script>
                                    $("#CustGroupColumnGroup_@item.Id").val('@item.ColumnGroup');
                            </script>
                            <select class="form-control" style="width:170px" id="CustGroupColumnGroup_@item.Id" onchange="updateGroup('@item.Id', this.value)">
                                @foreach (var group in ViewBag.GroupList as List<SelectListItem>)
                                {
                                    <option value="@group.Value" @(group.Value == item.ColumnGroup ? "selected" : "")>@group.Text</option>
                                }
                            </select>
                        </td>
                        <td class="IsView"> 
                            <label for="cbx-Grid@(item.Id)" class="label-cbx">
                                <input id="cbx-Grid@(item.Id)" idval="@(item.Id)" type="checkbox" name="checkbox-Grid-@(item.Id)" class="invisible CustGroupGridValue" @GridChecked>
                                <div class="checkbox">
                                    <svg width="20px" height="20px" viewBox="0 0 20 20">
                                        <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                        <polyline points="4 11 8 15 16 6"></polyline>
                                    </svg>
                                </div>
                            </label>
                        </td>
                        <td class="hidden IsView"> 
                            <label for="cbx@(item.Id)" class="label-cbx">
                                <input id="cbx@(item.Id)" idval="@(item.Id)" type="checkbox" name="checkbox-Form-@(item.Id)" class="invisible CustGroupFormValue" @FormChecked>
                                <div class="checkbox">
                                    <svg width="20px" height="20px" viewBox="0 0 20 20">
                                        <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                        <polyline points="4 11 8 15 16 6"></polyline>
                                    </svg>
                                </div>
                            </label>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    
    <div class="col-md-12">
        <div class="instructions-container-div">
            <p class="instructions">@Localize.T("Drag rows to up and down for rearranging column order").</p>
        </div>
    </div>

    @*
        </div>*@
</div>


