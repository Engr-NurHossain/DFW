@model HS.Entities.CreateCustomerRequisition
@using Localize = HS.Web.UI.Helper.LanguageHelper
@{
    Layout = null;
}
@using System.Collections;
<html>
<head>
    <script src="~/Content/Jquery-ui/jquery.js"></script>
    @Styles.Render("~/styles/SendEmailInvoiceCS")
    <script>
        var PdfLocation = '@ViewBag.PdfLocation';
        @*var CustomerGuid = '@Model.CustomerId';
        var Invoiceid = '@Model.Invoice.Id';*@

        var sendSMSfunction = function () {
            var url = parent.domainurl + "/SMS/SendRequisitionText";
    var param = JSON.stringify({
        ContactNumber: $(".ContactNumber").val(),
        Message: $("#SMSDescription").val()
    });
    $.ajax({
        type: "POST",
        url: url,
        data: param,
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            if (data.result) {
                parent.OpenSuccessMessageNew("Success!", data.message, function () {
                    parent.ClosePopup();
                });
            } else {
                parent.OpenErrorMessageNew("Error!", data.message, function () {

                });
            }
        }
    });
}
var BothSMSAndEmailFunction = function () {
    var url = parent.domainurl + "/SMS/SendRequisitionText";
    var param = JSON.stringify({
        ContactNumber: $(".ContactNumber").val(),
        Message: $("#SMSDescription").val(),

    });
    $.ajax({
        type: "POST",
        url: url,
        data: param,
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            if (data.result) {
                var EmailDes = tinyMCE.get('Description').getContent();
                var EmailSub = $("#EmailSubject").val();
                var ccEmail = $("#CCEmail").val();
                var SendEmail = $("#SendEmailAddress").val();
                parent.SaveRequest(true, SendEmail, EmailDes, EmailSub, ccEmail);
                parent.ClosePopup();
            } else {
                parent.OpenErrorMessageNew("Error!", data.message, function () {

                });
            }
        }
    });
}

var SendBothEmailAndSMS = function () {
    if ($(".ContactNumber").val().trim() == ""
       || $("#SMSDescription").val().trim() == "") {
        parent.OpenErrorMessageNew("Error!", "Contact number and SMS body can't be empty.");
    }
    else {
        BothSMSAndEmailFunction();
    }
}
$(document).ready(function () {
    if ($(window).width() < 700) {
        $("#pdfView").addClass("hidden");
    }
    else {
        $("#pdfView").removeClass("hidden");
    }
    $(".btnSendMailAndClose").click(function () {
        console.log("SendMailFired");
        //parent.SaveAndClose();
        if ($("#SendEmailAddress").val().trim() == "") {
            parent.OpenErrorMessageNew("Error!", "Email can't be empty.");
        }
        else {
            console.log("SendMailFired");
            var EmailDes = tinyMCE.get('Description').getContent();
            var EmailSub = $("#EmailSubject").val();
            var ccEmail = $("#CCEmail").val();
            var SendEmail = $("#SendEmailAddress").val();
            console.log(ccEmail);
            parent.SaveRequest(true, SendEmail, EmailDes, EmailSub, ccEmail);
            parent.ClosePopup();
        }
    });
    //$(".btnSaveAndNew").click(function () {
    //    parent.SaveAndNew();
    //    parent.ClosePopup();
    //});
    $(".btnSendTextAndClose").click(function () {
        if ($(".ContactNumber").val().trim() == ""
           || $("#SMSDescription").val().trim() == "") {
            parent.OpenErrorMessageNew("Error!", "Contact number and SMS body can't be empty.");
        }
        else {
            sendSMSfunction()
        }
    });
    $(".btnSendBoth").click(function () {
        if ($(".ContactNumber").val().trim() == ""
            || $("#SMSDescription").val().trim() == "") {
            parent.OpenErrorMessageNew("Error!", "Contact number and SMS body can't be empty.");
        }
        else if ($("#SendEmailAddress").val().trim()=="")
        {
            parent.OpenErrorMessageNew("Error!", "Email can't be empty.");
        }
        else {
            SendBothEmailAndSMS();
        }

    })
});
    </script>
    @*@Scripts.Render("~/scripts/SendEmailInvoiceJS")*@
    <script src="~/Content/Tiny/jquery.tinymce.min.js"></script>
    <script src="~/Content/Tiny/tinymce.min.js"></script>
    <script src="~/Content/Tiny/tiny.js"></script>

</head>
@{
    Hashtable datatemplate = new Hashtable();
    datatemplate.Add("CustomerName", ViewBag.MailSendToName);
    //datatemplate.Add("ExpirationDate", Model.Invoice.DueDate);
    datatemplate.Add("SalesPhone Number", ViewBag.SalesPhone);
    datatemplate.Add("CompanyName", Model.CompanyName);
    datatemplate.Add("SalesGuy", ViewBag.SalesGuy);
    datatemplate.Add("url", ViewBag.url);
    string emailtemplate = HS.Web.UI.Helper.LabelHelper.ParserHelper(Model.EmailTemplate.BodyContent, datatemplate);
}
<body>
    <div class="send_mail_invoice_container">

        <div class="send_mail_invoice_header">
            @Localize.T("Send email")
            <div class="CloseButtonDiv" onclick="parent.ClosePopup()">
                <img title="@Localize.T("Close")" src="~/Content/Icons/cross_update.png">
            </div>
        </div>


        <div class="width_50p_firstdiv">
            <div class="row">
                <div class="col-md-6">
                    @Localize.T("Email")
                </div>
                <div class="col-md-6">
                    <input class="SendEmailAddress" type="text" value="@Model.SendEmailAddress" id="SendEmailAddress" placeholder="Email Address" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    @Localize.T("Cc")
                </div>
                <div class="col-md-6">
                    <input type="text" value="@Model.CcSendEmailAddress" class="EmailSubject" placeholder="Add cc email by ';' separator" id="CCEmail">
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    @Localize.T("Subject")
                </div>
                <div class="col-md-6">
                    <input type="text" value="New Requisition from @Model.CompanyName" class="EmailSubject" placeholder="Subject" id="EmailSubject">
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="emailbody" style="font-weight:600">@Localize.T("Body")</div>
                    <textarea class="txtEmailbody tinymce" id="Description" name="Description">@emailtemplate</textarea>
                </div>
            </div>

            <div class="">
                <h4>@Localize.T("Send TEXT MSG")</h4>
            </div>
            <div class="row">
                <div class="col-md-6">
                    @Localize.T("Contact Number")
                </div>
                <div class="col-md-6">
                    <input class="ContactNumber" type="text" value="@Model.SendContactNumber" placeholder="Contact Number" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="emailbody">@Localize.T("TEXT MSG Body")</div>
                    <textarea rows="3" id="SMSDescription" name="SMSDescription">@Model.SMSBody</textarea>
                    <label class="label black">@Localize.T("'##url##' will be replaced by actual url.")</label>
                </div>
            </div>
        </div>

        @if (Request.Browser.IsMobileDevice)
        {
            <object data='@ViewBag.PdfLocation'>
                <p class="">Oops! You don't support PDFs!</p>
                <button class="btn btnPdfDownLoadForMo"><a href="@ViewBag.PdfLocation" id="PdfDownLoadForPhone" download>Download Instead</a></button>
            </object>
        }
        else
        {
            <div class="width_50p_pdf" id="pdfView">
                <iframe class="pdf_styles_send_mail_invoice @(string.IsNullOrWhiteSpace(ViewBag.PdfLocation)?"hidden":"")" id="iframePdf" src="@ViewBag.PdfLocation"></iframe>
            </div>
        }





        <div class="send_email_invoice_footerContents">
            <button onclick="parent.ClosePopup()" class="btnCancel">@Localize.T("Cancel")</button>
            <button class="btn btnSendBoth green_button">@Localize.T("Send To Both")</button>
            <button class="btn btnSendMailAndClose green_button">@Localize.T("Send Email")</button>
            @*<button class="btn btnSaveAndNew">@Localize.T("Send and new")</button>*@
            <button class="btn btnSendTextAndClose green_button">@Localize.T("Send TEXT MSG")</button>

        </div>
    </div>
</body>
</html>
