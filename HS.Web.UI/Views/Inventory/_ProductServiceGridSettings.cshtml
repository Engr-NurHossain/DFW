@model List<HS.Entities.GridSetting>
@using Localize = HS.Web.UI.Helper.LanguageHelper

<script>
    var UpdateInventoryGrid = function () {
        var url = domainurl + "/Inventory/UpdateProductServiceGridSettings";

        var GridSettings = [];
        $("tbody tr").each(function () {
            GridSettings.push({
                Id: $(this).attr('data-id'),
                ListKeyName: "ProductServiceGrid",
                SelectedColumn: $(this).find('.KeyName').text(),
                OrderBy: $(this).find(".orderby").text(),
                IsActive: $(this).find(".IsActive").is(':checked')
            });
        });

        console.log(GridSettings)

        $.ajax({
            type: "POST",
            ajaxStart: function () { },
            url: url,
            data: JSON.stringify(GridSettings),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                $('#ProductsandServices').load(domainurl + "/Inventory/ProductListPartial");
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        })
    }
    $(document).ready(function () {
        $(".LoaderWorkingDiv").hide();

        $(".IsActive").click(function () {
            UpdateInventoryGrid();
        });

        $(".InventoryGridSettings tbody").sortable({
            update: function () {
                var i = 1;
                $(".InventoryGridSettings tbody tr td.orderby").each(function () {
                    $(this).text(i);
                    i += 1;
                });
                UpdateInventoryGrid();
            }
        }).disableSelection();
    });
</script>
<style>
    .InventoryGridSettings tr td {
        text-align: center;
    }

    .InventoryGridSettings th {
        background-color: #e4e4e4;
        padding-left: 5px;
        padding-right: 5px;
        padding-top: 5px;
        padding-bottom: 5px;
        text-align: center;
    }

    .InventoryGridSettings tr {
        cursor: move;
    }

        .InventoryGridSettings tr:hover {
            background-color: #f4f5f8;
        }

    .InventoryGridSettings .KeyName {
        width: 50%;
    }

    .InventoryGridSettings .orderby {
        width: 25%;
    }

    .InventoryGridSettings .IsView {
        width: 25%;
    }

    .instructions {
        color: #5f5b5b;
        font-size: 14px;
        font-style: italic;
    }

    .InventoryGridSettings {
        width: 100%;
    }

    .instructions-container-div {
        padding-top: 30px;
    }
</style>

<div class="container-fluid">

    <div class="row">
        <div class="col-md-12">
            <h4>@Localize.T("Inventory Grid Setting") </h4>
        </div>
        <div class="col-md-12">
            <table class="InventoryGridSettings">
                <thead>
                    <tr>
                        <th>@Localize.T("Order")</th>
                        <th>@Localize.T("Name")</th>
                        <th>@Localize.T("Is Active")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-id="@item.Id">
                            <td class="orderby">@item.OrderBy</td>
                            <td class="KeyName">@item.SelectedColumn</td>
                            <td class="IsView">
                                @*<input class="IsActive" type="checkbox" @(item.IsActive ? "checked" : "") />*@
                                <label for="cbx@(item.Id)" class="label-cbx">
                                    <input id="cbx@(item.Id)" idval="@(item.Id)" type="checkbox" name="checkbox-@(item.Id)" class="invisible IsActive" @(item.IsActive ? "checked" : "")>
                                    <div class="checkbox">
                                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                            <polyline points="4 11 8 15 16 6"></polyline>
                                        </svg>
                                    </div>
                                </label>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-md-12">
            <div class="instructions-container-div">
                <span class="instructions">@Localize.T("Drag rows to up and down for rearranging column order").</span>
            </div>
        </div>
    </div>
</div>



