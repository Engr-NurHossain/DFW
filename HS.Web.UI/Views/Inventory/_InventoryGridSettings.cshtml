@model List<HS.Entities.GridSetting>
@using Localize = HS.Web.UI.Helper.LanguageHelper

<script>
    var UpdateInventoryGrid = function () {
        var url = domainurl + "/Inventory/UpdateInventoryGridSettings";

        var GridSettings = [];
        $(".InventoryGridSettings tbody tr").each(function () {
            GridSettings.push({
                Id: $(this).attr('data-id'),
                ListKeyName: "InventoryGrid",
                SelectedColumn: $(this).find('.KeyName').text(),
                OrderBy: $(this).find(".orderby").text(),
                IsActive: $(this).find(".IsActive").is(':checked')
            });
        });

        console.log(GridSettings)

        $.ajax({
            type: "POST",
            ajaxStart: function () { },
            url: url,
            data: JSON.stringify(GridSettings),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                //OpenRightToLeftModal();
                //LoadInventory(true);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        })
    }
    $(document).ready(function () {
        $(".LoaderWorkingDiv").hide();

        //$(".close").hide();
        $("#close_modal").click(function () {
            LoadInventory(true);
        })
        $(".IsActive").click(function () {
            UpdateInventoryGrid();
        });

        $(".InventoryGridSettings tbody").sortable({
            update: function () {
                var i = 1;
                $(".InventoryGridSettings tbody tr td.orderby").each(function () {
                    $(this).text(i);
                    i += 1;
                });
                UpdateInventoryGrid();
            }
        }).disableSelection();
        $(".inventory_grid_settings_height").height(window.innerHeight - 96);
    });
    $(window).resize(function () {
        $(".inventory_grid_settings_height").height(window.innerHeight - 96);
    })
</script>
<style>
    .inventory_grid_settings_container {
        width: 100%;
        float: left;
    }

    .inventory_grid_settings_header {
        width: 100%;
        float: left;
        background-color: #ececf1;
        padding: 5px 15px;
        font-size: 20px;
        border-bottom: 1px solid #ccc;
    }

    .inventory_grid_settings_height {
        width: 100%;
        float: left;
        overflow-x: hidden;
        overflow-y: auto;
    }

    .inventory_grid_settings_inner {
        width: 100%;
        float: left;
        padding: 5px 15px;
    }

    .inventory_grid_settings_footer {
        width: 100%;
        float: left;
        padding: 5px 15px;
        border-top: 1px solid #ccc;
        position: relative;
    }

    .InventoryGridSettings tr td {
        text-align: center;
        padding: 0px 6px;
    }

    .InventoryGridSettings th {
        text-align: center;
        padding: 10px 5px;
    }

    .InventoryGridSettings tr {
        cursor: move;
        border-bottom: 1px solid #ccc;
    }

        .InventoryGridSettings tr:hover {
            background-color: #f4f5f8;
        }

    .InventoryGridSettings .KeyName {
        width: 60%;
    }

    .InventoryGridSettings .orderby {
        width: 18%;
    }

    .InventoryGridSettings .IsView {
        width: 22%;
    }

    .instructions {
        color: #5f5b5b;
        font-size: 14px;
        font-style: italic;
    }

    .InventoryGridSettings {
        width: 100%;
    }

    .instructions-container-div {
        width: 80%;
        float: left;
    }

    #close_modal {
        background-color: green;
        color: white;
        position: absolute;
        right: 14px;
        top: 8px;
    }
</style>

<div class="inventory_grid_settings_container">


    <div class="inventory_grid_settings_header">
        @Localize.T("Inventory Grid Setting")
    </div>
    <div class="inventory_grid_settings_height">
        <div class="inventory_grid_settings_inner">
            <table class="InventoryGridSettings">
                <thead>
                    <tr>
                        <th>@Localize.T("Order")</th>
                        <th>@Localize.T("Name")</th>
                        <th>@Localize.T("Is Active")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-id="@item.Id">
                            <td class="orderby">@item.OrderBy</td>
                            <td class="KeyName">@item.SelectedColumn</td>
                            <td class="IsView">
                                @*<input class="IsActive" type="checkbox" @(item.IsActive ? "checked" : "") />*@
                                <label for="cbx@(item.Id)" class="label-cbx">
                                    <input id="cbx@(item.Id)" idval="@(item.Id)" type="checkbox" name="checkbox-@(item.Id)" class="invisible IsActive" @(item.IsActive ? "checked" : "")>
                                    <div class="checkbox">
                                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                            <polyline points="4 11 8 15 16 6"></polyline>
                                        </svg>
                                    </div>
                                </label>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
    </div>
    <div class="inventory_grid_settings_footer">
        <div class="instructions-container-div">
            <span class="instructions">@Localize.T("Drag rows to up and down for rearranging column order").</span>
        </div>
        <button id="close_modal" class="btn"> Reload </button>
    </div>

</div>


