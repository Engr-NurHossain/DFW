@using Localize = HS.Web.UI.Helper.LanguageHelper
@{ 
    Layout = null;
     List<HS.Entities.GridSetting> UiGridSetting = (List<HS.Entities.GridSetting>)ViewBag.EquipmentUiSetting;
}
@model HS.Entities.Equipment
@Styles.Render("~/styles/AddEquipmentServiceBundle")
@Scripts.Render("~/scripts/AddEquipmentServiceBundle")

@using PermissionChekcer = HS.Web.UI.Helper.PermissionHelper
@using Permissions = HS.Framework.UserPermissions
<style>
    .add_equipment_contents .tt-menu {
        background: white;
        min-width: 320px;
        font-size: 12px;
        max-height: 230px;
       -webkit-box-shadow: 0 5px 20px rgba(0,0,0,0.3);
        box-shadow: 0 5px 20px rgba(0,0,0,0.3);
        margin-top: 0px;
        position: absolute;
        /*left: -5px;*/
        top:56px;
        z-index: 100;
        display: none;
        /*width: 450px;*/
        overflow-y:scroll;
    }

    .add_equipment_contents .tt-dataset-autocomplete {
        margin-top: -5px;
    }

    .add_equipment_contents .tt-suggestion {
        min-height: 36px;
        display: block;
        padding: 10px 10px 9px 15px;
        position: relative;
        cursor: pointer;
        white-space: nowrap;
        border-bottom: 1px solid #ccc;
    }

    .add_equipment_contents .tt-menu p, .search-bar-container .twitter-typeahead > i p {
        margin: 0;
    }

    .add_equipment_contents .tt-sug-text {
        width: 90%;
        font-size: 14px;
        text-overflow: ellipsis;
    }

    .add_equipment_contents .tt-suggestion u {
        text-decoration: none;
        color: #aa2121;
    }

    .add_equipment_contents .tt-suggestion.active {
        background-color: #f2f2f2;
    }

    .add_equipment_contents .tt-sug-desc {
        width: 100%;
        color: #999;
        padding-top: 2px;
        display: block;
        text-overflow: ellipsis;
        overflow: hidden;
    }

    .add_equipment_contents .tt-sug-type {
        position: absolute;
        right: 17px;
        top: 11px;
        color: #999;
        font-style: italic;
    }

    .add_equipment_contents .tt-eq-price {
        float: right;
    }
    .add_equipment_contents .tt-eq-name {
        float: left;
    }
    .input_group_for_date {
        width:100%;
        float:left;
        position: relative;
        display: table;
        border-collapse: separate;
    }
    .input_group_for_date input {
        border-radius:4px 0px 0px 4px;
    }
    .input_group_for_date .btn {
        height:34px;
        border-radius:0px 4px 4px 0px;
    }
    /*Currency Style css Start*/
.currency_style .input-group-prepend {
        margin-right: -1px;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        margin-right:-1px;
}
    
    .currency_style .input-group-text {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    padding: .375rem .75rem;
    margin-bottom: 0;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: #495057;
    text-align: center;
    white-space: nowrap;
    background-color: #e9ecef;
    border: 1px solid #ced4da;
    border-radius: .25rem;
}
    .currency_style .input-group > .input-group-prepend > .input-group-text {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}
    .currency_style .input-group>.form-control {
    position: relative;
    -webkit-box-flex: 1;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    width: 1%;
    margin-bottom: 0;
}
    .currency_style .input-group {
    position: relative;
    display: -webkit-box;
    display: -ms-flexbox;
     display: flex; 
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
    width: 100%;
}
 /*Currency Style css Start*/
    .Manufacturercost .form-group {
        width:50%;
    }
</style>

<script>
    var equipmentId = '@Model.EquipmentId';
    var EquipmentPoint = '@ViewBag.PointValue';
    var RepPoint = '@ViewBag.RefPointValue';
    var SupplierCost = '@Model.SupplierCost';
    var EquipmentClassId = 1;
    var OpenFromModal = '@ViewBag.OpenFromModal';
    var Flag = '@ViewBag.Flag';
    console.log(Flag);
    var ShowManufactureDetails = '@ViewBag.ShowManufactureDetails';

    var saveNonInventory = function () {
        var url = domainurl + "/Inventory/AddInventoryEquipment/";
        var param = JSON.stringify({
            id: $("#Id").val(),
            name: $("#Name").val(),
            SKU: $("#SKU").val(),
            EquipmentTypeId: $("#EquipmentTypeId").val(),
            StrAsOfDate: $("#AsOfDate").val(),
            reorderpoint: $("#reorderpoint").val(),
            whreorderpoint: $("#whreorderpoint").val(),
            Point: $("#EquipmentPoint").val(),
            Cost: SupplierCost,
            ManufacturerId: $("#ManufacturerId").val(),
            SupplierCost: SupplierCost,
            SupplierId: $("#SupplierId").val(),
            CreatedDate: $("#CreatedDate").val(),
            CompanyId: $("#CompanyId").val(),
            EquipmentId: $("#EquipmentId").val(),
            EquipmentClassId: EquipmentClassId,
            IsActive: $("#IsActive").val(),
            Retail: $("#Retail").val(),
            QtyOnHand: $("#QtyOnHand").val(),
            Comments: $("#Comments").val(),
            IsKit: $("#IsKit").is(':checked'),
            IsUpsold: $("#IsUpsold").is(':checked'),
            RepCost: $("#RepCost").val(),
            RackNo: $("#RackNo").val(),
            Location: $("#EquipmentLocation").val(),
            Type: $("#EquipmentType").val(),
            Model: $("#EquipmentModel").val(),
            Finish: $("#EquipmentFinish").val(),
            Capacity: $("#EquipmentCapacity").val(),
            OverheadRate: $("#OverheadRate").val(),
            ProfitRate: $("#ProfitRate").val(),
            IsTaxable:$("#IsTaxable").is(':checked'),
            /*ModelNumber: $("#EquipmentModelNumber").val(),*/
            Barcode: $("#EquipmentBarcode").val(),
            Unit: $("#Unit").val(),
            TaggedEmail: $("#TaggedEmail").val(),
            IsIncludeEstimate:$("#IsEstInclude").is(':checked')
        });
        $.ajax({
            type: "POST",
            ajaxStart: $(".loader-div").show(),
            url: url,
            data: param,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                if (OpenFromModal.toLowerCase() == 'true') {
                    OpenRightToLeftLgModal();
                } else {
                   /* window.location.reload();*/
                    window.location.href = domainurl + "/Inventory";
                }
                //OpenRightToLeftLgModal();
                //parent.LoadEquipmentList();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $(".loader-div").hide();
                console.log(errorThrown);
            }
        });
    }

    var OptionSearchKeyDown = function (item, event) {
        if (event.keyCode == 13) {
            var selectedTTMenu = $(event.target).parent().find('.tt-suggestion.active');
            if (selectedTTMenu.length > 0) {
                setTimeout(function () { $(selectedTTMenu).click(); }, 10)
                $('.tt-menu').hide();
            }
        }
        if (event.keyCode == 40) {
            var ttSugstionDom = $(event.target).parent().find('.tt-suggestion');
            var ttSugActive = $(event.target).parent().find('.tt-suggestion.active');
            if ($(ttSugstionDom).length > 0) {
                if ($(ttSugActive).length == 0) {
                    $($(ttSugstionDom).get(0)).addClass('active');
                    $(item).val($($(ttSugstionDom).get(0)).attr('data-select'))
                }
                else {
                    var suggestionlist = $(ttSugstionDom);
                    var activesuggestion = $(ttSugActive);
                    var indexactive = -1;
                    for (var id = 0; id < suggestionlist.length; id++) {
                        if ($(suggestionlist[id]).hasClass('active'))
                            indexactive = id;
                    }
                    if (indexactive < suggestionlist.length - 1) {
                        $(ttSugstionDom).removeClass('active');
                        var possibleactive = $(ttSugstionDom).get(indexactive + 1);
                        $($(ttSugstionDom).get(indexactive + 1)).addClass('active');
                        $(possibleactive).addClass('active');
                        $(item).val($(possibleactive).attr('data-select'));
                    }
                }
                event.preventDefault();
            }
        }
        if (event.keyCode == 38) {
            var ttSugstionDom = $(event.target).parent().find('.tt-suggestion');
            var ttSugActive = $(event.target).parent().find('.tt-suggestion.active');
            if ($(ttSugstionDom).length > 0 && $(ttSugActive).length > 0) {
                var suggestionlist = $(ttSugstionDom);
                var activesuggestion = $(ttSugActive);
                var indexactive = -1;
                for (var id = 0; id < suggestionlist.length; id++) {
                    if ($(suggestionlist[id]).hasClass('active'))
                        indexactive = id;
                }
                if (indexactive > 0) {
                    $(ttSugstionDom).removeClass('active');
                    var possibleactive = $(ttSugstionDom).get(indexactive - 1);
                    $(possibleactive).addClass('active');
                    $(item).val($(possibleactive).attr('data-select'))
                }
                event.preventDefault();
            }
        }
    }

    var EquipmentOptionsClickBind = function (item) {
        /*Capacity*/
        $('.EquipmentCapacity .tt-suggestion').click(function () {
            var clickitem = this;
            $('.EquipmentCapacity .tt-menu').hide();
            var BussiName = $(clickitem).find(".data-name").text().trim();
            $("#EquipmentCapacity").val(BussiName);
        });
        /*Location*/
        $('.EquipmentLocation .tt-suggestion').click(function () {
            var clickitem = this;
            $('.EquipmentLocation .tt-menu').hide();
            var BussiName = $(clickitem).find(".data-name").text().trim();
            $("#EquipmentLocation").val(BussiName);
        });
        /*Type*/
        $('.EquipmentType .tt-suggestion').click(function () {
            var clickitem = this;
            $('.EquipmentType .tt-menu').hide();
            var BussiName = $(clickitem).find(".data-name").text().trim();
            $("#EquipmentType").val(BussiName);
        });
        /*Model*/
        $('.EquipmentModel .tt-suggestion').click(function () {
            var clickitem = this;
            $('.EquipmentModel .tt-menu').hide();
            var BussiName = $(clickitem).find(".data-name").text().trim();
            $("#EquipmentModel").val(BussiName);
        });
        /*Finish*/
        $('.EquipmentFinish .tt-suggestion').click(function () {
            var clickitem = this;
            $('.EquipmentFinish .tt-menu').hide();
            var BussiName = $(clickitem).find(".data-name").text().trim();
            $("#EquipmentFinish").val(BussiName);
        });

        $('.EquipmentCapacity .tt-suggestion, .EquipmentLocation .tt-suggestion, .EquipmentType .tt-suggestion, .EquipmentModel .tt-suggestion, .EquipmentFinish .tt-suggestion').hover(function () {
            var clickitem = this;
            $('.tt-suggestion').removeClass("active");
            $(clickitem).addClass('active');
        });
    }

    var OptionsSearchKeyUp = function (item, event, OptionType) {

        var CustomerSuggestiontemplate =
             "<div class='tt-suggestion tt-selectable'>"
                + "<p class='tt-sug-text'>"
                    + "<span class='data-name'>{0}</span>"
                    + " <em class='tt-eq-price'> </em>"
                + "</p> "
             + "</div>";

        if (event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13)
            return false;
        $.ajax({
            url: domainurl + "/Inventory/GetEquipmentOptionsByKey",
            data: JSON.stringify({
                key: $(item).val(),
                Type : OptionType
            }),
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                console.log(data);
                $('.tt-menu').hide();
                var resultparse = JSON.parse(data.result);

                if (resultparse.length > 0) {
                    var searchresultstring = "<div class='NewProjectSuggestion'>";
                    for (var i = 0; i < resultparse.length; i++) {
                        searchresultstring = searchresultstring + String.format(CustomerSuggestiontemplate,
                            resultparse[i].OptionName, resultparse[i].EquipmentId);
                    }
                    searchresultstring += "</div>";
                    var ttdom = $($(item).parent()).find('.tt-menu');
                    var ttdomComplete = $($(item).parent()).find('.tt-dataset-autocomplete');
                    $(ttdomComplete).html(searchresultstring);
                    $(ttdom).show();


                    EquipmentOptionsClickBind(item);
                    if (resultparse.length > 5) {
                        $(".EquipmentCapacity .NewProjectSuggestion").height(200);
                    }
                }
                if (resultparse.length == 0)
                    $('.tt-menu').hide();
            }
        });
    }


    $(document).ready(function () {
        var windowsHeight = window.innerHeight - 92;

        if (Flag == "Edit") {
            $(".EditNew").removeClass("hidden");
            $(".AddNew").addClass("hidden");
        }
        if (ShowManufactureDetails.toLowerCase() != "true") {
            $("#manu_details_div").addClass("hidden");
        }
        var Asofdatepicker = new Pikaday({
            field: $('#AsOfDate')[0],
            trigger: $('#AsOfDateArea')[0],
            format: 'MM/DD/YYYY',
            firstDay: 1
        });
        $(".add_equipment_container_height").height(windowsHeight);
        $("#saveProduct").click(function () {
            if (CommonUiValidation()) {
                saveNonInventory();
            }
        });
        $("#EquipmentPoint").focusout(function () {
            if(EquipmentPoint!=''){
                $("#Retail").val($(this).val() * parseFloat(EquipmentPoint));
            }
            if (RepPoint != '') {
                $("#RepCost").val($(this).val() * parseFloat(RepPoint));
            }
        });
        $(".EquipmentCost").load(domainurl + "/Inventory/AddEquipmentVendor");
        $(".EquipmentVendorList").load(domainurl + "/Inventory/VendorList?EquipmentId=" + equipmentId);
        $(".Manufacturercost").load(domainurl + "/Inventory/AddEquipmentManufacturer");
        $(".Equipmentmanufacturerlist").load(domainurl + "/Inventory/ManufacturerList?EquipmentId=" + equipmentId);
        $(".add_equipment_container").click(function () {

        });
        $("#EquipmentTypeId").change(function(){
           if($(this).find("option:selected").text() != "Labor"){
                $("#ProfitRate").val("0");
            }
        });
    })
    $(window).resize(function () {
        var windowsHeight = window.innerHeight - 92;
        $(".add_equipment_container_height").height(windowsHeight);
    })

</script>

<div class="addequipment_div">
    <div class="hidden">
        @Html.HiddenFor(x => x.Id, new { id = "Id" })
        @Html.HiddenFor(x => x.CreatedDate, new { id = "CreatedDate" })
        @Html.HiddenFor(x => x.CompanyId, new { id = "CompanyId" })
        @Html.HiddenFor(x => x.EquipmentId, new { id = "EquipmentId" })
        @Html.HiddenFor(x => x.IsActive, new { id = "IsActive" })
    </div>
    <div class="add_equipment_contents">
        
        <div class="add_equip_header">
            <span class="AddNew">@Localize.T("New Equipment")</span>
            <span class="EditNew hidden">@Localize.T("Equipment Details")</span>
            <div onclick="CloseTopToBottomModal()" class="add_equip_close_div">
                <img class="close_btn_size" title="@Localize.T("Close")" src="~/Content/Icons/cross_update.png">
            </div>
        </div> 
        <div class="add_equipment_container_height">
            <div class="add_equipment_container">
                <div class="equipment_info_block">
                    <div class="equipment_info_block_header">@Localize.T("Equipment information")</div>
                    <div class="equipment_info_block_information equi_info">
                        @foreach (var item in UiGridSetting)
                        {
                            if (item.SelectedColumn == "Name")
                            {
                                <div class="form-group clearfix equipment-entity" style="position:relative;">
                                    <span class="span-style">@Localize.T("Name")<span class="red">*</span></span>
                                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control required-field", placeholder = "Name", datarequired = "true" })
                                    <label rel="Name" class="label hidden red position-absolute">*@Localize.T("Please enter equipment name")</label>
                                </div>
                            }
                            else if (item.SelectedColumn == "SKU")
                            {
                                <div class="form-group clearfix equipment-entity">
                                    <span class="span-style">@Localize.T("SKU")</span>
                                    @Html.TextBoxFor(x => x.SKU, new { @class = "form-control", placeholder = "SKU" })
                                </div>
                            }
                            else if (item.SelectedColumn == "Category")
                            {
                                //if (PermissionChekcer.IsPermitted(Permissions.InventoryPermissions.CategoryField))
                                //{
                                <div class="form-group clearfix equipment-entity" style="position:relative;">
                                    <span class="span-style">@Localize.T("Category")<span class="red">*</span></span>
                                    @Html.DropDownListFor(x => x.EquipmentTypeId, (List<SelectListItem>)ViewBag.EquipmentTypeList, new { @class = "form-control", datarequired = "true" })
                                    <label rel="EquipmentTypeId" class="label hidden red position-absolute">*@Localize.T("Please select category")</label>
                                </div>
                                //}
                            }
                            else if (item.SelectedColumn == "AsOfDate")
                            {
                                <div class="form-group clearfix equipment-entity">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("As Of Date")</span>
                                    <div class="input_group_for_date add-on" id="AsOfDateArea">
                                        @Html.TextBoxFor(x => x.AsOfDate, "{0:MM/dd/yy}", new { @class = "form-control width-40p", placeholder = "As Of Date", id = "AsOfDate", @readonly = "readonly" })
                                        <div class="input-group-btn">
                                            <btn class="btn" id="calanderBtn"><i class="fa fa-calendar" aria-hidden="true" style="cursor:pointer;"></i></btn>

                                        </div>
                                    </div>
                                </div>
                            }
                            else if (item.SelectedColumn == "ReorderPoint")
                            {
                                <div class="form-group clearfix equipment-entity">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Reorder Point (Tech)")</span>
                                    @Html.TextBoxFor(x => x.reorderpoint, new { @class = "form-control width-40p", id = "reorderpoint", @type = "number", placeholder = "Reorder Point" })
                                </div>
                            }
                            else if (item.SelectedColumn == "ReorderPoint (WH)")
                            {
                                <div class="form-group clearfix equipment-entity">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Reorder Point (WH) ")</span>
                                    @Html.TextBoxFor(x => x.whreorderpoint, new { @class = "form-control width-40p", id = "whreorderpoint", @type = "number", placeholder = "Reorder Point (WH)" })
                                </div>
                            }
                            else if (item.SelectedColumn == "Manufacturer")
                            {
                                <div class="form-group clearfix equipment-entity">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Manufacturer")</span>
                                    @Html.DropDownListFor(x => x.ManufacturerId, (List<SelectListItem>)ViewBag.ManufacturerList, new { @class = "form-control width-40p", datarequired = "false" })
                                </div>
                            }
                            else if (item.SelectedColumn == "Point")
                            {
                                <div class="form-group clearfix equipment-entity">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Point")</span>
                                    @Html.TextBoxFor(x => x.Point, new { @class = "form-control width-40p", id = "EquipmentPoint", @type = "number", placeholder = "Point" })
                                </div>
                            }
                            else if (item.SelectedColumn == "Location")
                            {
                                <div class="form-group clearfix equipment-entity EquipmentLocation">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Location")</span>
                                    <input onkeydown="OptionSearchKeyDown(this,event)" onkeyup="OptionsSearchKeyUp(this,event,'Location')" onfocus="OptionsSearchKeyUp(this,event,'Location')" type="text" class="form-control width-40p" value="@Model.Location" id="EquipmentLocation" placeholder="Location " />
                                    <div class='tt-menu'>
                                        <div class='tt-dataset tt-dataset-autocomplete'> </div>
                                    </div>
                                </div>
                            }
                            else if (item.SelectedColumn == "Type")
                            {
                                <div class="form-group clearfix equipment-entity EquipmentType">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Type")</span>
                                    <input onkeydown="OptionSearchKeyDown(this,event)" onkeyup="OptionsSearchKeyUp(this,event,'Type')" onfocus="OptionsSearchKeyUp(this,event,'Type')" type="text" class="form-control width-40p" value="@Model.Type" id="EquipmentType" placeholder="Type " />
                                    <div class='tt-menu'>
                                        <div class='tt-dataset tt-dataset-autocomplete'> </div>
                                    </div>
                                </div>
                            }
                            else if (item.SelectedColumn == "Model")
                            {
                                <div class="form-group clearfix equipment-entity EquipmentModel">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Model")</span>
                                    <input onkeydown="OptionSearchKeyDown(this,event)" onkeyup="OptionsSearchKeyUp(this,event,'Model')" onfocus="OptionsSearchKeyUp(this,event,'Model')" type="text" class="form-control width-40p" value="@Model.Model" id="EquipmentModel" placeholder="Model " />
                                    <div class='tt-menu'>
                                        <div class='tt-dataset tt-dataset-autocomplete'> </div>
                                    </div>
                                </div>
                            }
                            else if (item.SelectedColumn == "Finish")
                            {
                                <div class="form-group clearfix equipment-entity EquipmentFinish">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Finish")</span>
                                    <input onkeydown="OptionSearchKeyDown(this,event)" onkeyup="OptionsSearchKeyUp(this,event,'Finish')" onfocus="OptionsSearchKeyUp(this,event,'Finish')" type="text" class="form-control width-40p" value="@Model.Finish" id="EquipmentFinish" placeholder="Finish " />
                                    <div class='tt-menu'>
                                        <div class='tt-dataset tt-dataset-autocomplete'> </div>
                                    </div>
                                </div>
                            }
                            else if (item.SelectedColumn == "Capacity")
                            {
                                <div class="form-group clearfix equipment-entity EquipmentCapacity">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Capacity")</span>
                                    <input onkeydown="OptionSearchKeyDown(this,event)" onkeyup="OptionsSearchKeyUp(this,event,'Capacity')" onfocus="OptionsSearchKeyUp(this,event,'Capacity')" type="text" class="form-control width-40p" value="@Model.Capacity" id="EquipmentCapacity" placeholder="Capacity " />
                                    <div class='tt-menu'>
                                        <div class='tt-dataset tt-dataset-autocomplete'> </div>
                                    </div>
                                </div>
                            }
                            else if (item.SelectedColumn == "Barcode")
                            {
                                <div class="form-group clearfix equipment-entity EquipmentBarcode">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Barcode")</span>
                                    @Html.TextBoxFor(x => x.Barcode, new { @class = "form-control width-40p", id = "EquipmentBarcode", placeholder = "Barcode" })
                                </div>
                            }
                            else if (item.SelectedColumn == "OverheadRate")
                            {
                                <div class="form-group clearfix equipment-entity">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Overhead/Markup")</span>
                                    @Html.TextBoxFor(x => x.OverheadRate, new { @class = "form-control width-40p", id = "OverheadRate", placeholder = "Overhead Rate" })
                                </div>
                            }
                            else if (item.SelectedColumn == "ProfitRate")
                            {
                                <div class="form-group clearfix equipment-entity">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Profit")</span>
                                    @Html.TextBoxFor(x => x.ProfitRate, new { @class = "form-control width-40p", id = "ProfitRate", placeholder = "Profit Rate" })
                                </div>
                            }
                            else if (item.SelectedColumn == "Unit")
                            {
                                <div class="form-group clearfix equipment-entity">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Unit")</span>
                                    @Html.DropDownListFor(x => x.Unit, (List<SelectListItem>)ViewBag.EquipmentUnitList, new { @class = "form-control", id = "Unit" })
                                </div>
                            }
                            else if (item.SelectedColumn == "Description")
                            {
                                <div class="form-group clearfix equipment-entity">
                                    <span class="span-style">@Localize.T("Description")</span>
                                    @Html.TextAreaFor(x => x.Comments, new { @class = "form-control", id = "Comments", placeholder = "Product description", style = "height:unset;" })
                                    @*<textarea style="height:unset;" class="form-control" id="Comments" name="Comments" placeholder="Product description" rows="2">@Model.Comments</textarea>*@
                                </div>
                            }
                            else if (item.SelectedColumn == "IsTaxable")
                            {
                                if (PermissionChekcer.IsPermitted(Permissions.InventoryPermissions.InventoryIsTaxable))
                                {
                                    <div class="form-group clearfix equipment-entity add_equip_checkbox">
                                        @{
                                            bool checkedData = (Model.IsTaxable.HasValue) ? Model.IsTaxable.Value : false;
                                        }
                                        <label class="label-cbx">
                                            <input id="IsTaxable" type="checkbox" class="form-control invisible" @((checkedData == true) ? "checked" : "") />
                                            <div class="checkbox">
                                                <svg width="20px" height="20px" viewBox="0 0 20 20">
                                                    <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                                    <polyline points="4 11 8 15 16 6"></polyline>
                                                </svg>
                                            </div>
                                        </label>
                                        <label rel="IsTaxable" class="label hidden red position-absolute">*@Localize.T("Is Taxable")</label>
                                        <div class="add_equip_check_text">@Localize.T("Is Taxable")</div>
                                    </div>
                                }

                            }
                            else if (item.SelectedColumn == "TaggedEmail")
                            {
                                <div class="form-group clearfix equipment-entity" style="margin-top:20px;">
                                    <span class="span-style width-50p padding-top-7p">@Localize.T("Tagged Email")</span>
                                    @Html.TextBoxFor(x => x.TaggedEmail, new { @class = "form-control width-40p", id = "TaggedEmail", placeholder = "Tagged Email", dataformat = "email" })
                                    <label rel="TaggedEmail" class="label hidden red position-absolute">*@Localize.T("Please Enter Valid Email")</label>

                                </div>
                            }
                            else if (item.SelectedColumn == "IsIncludeEstimate")
                            {

                                <div class="form-group clearfix equipment-entity add_equip_checkbox">
                                    @{
                                        bool checkData = (Model.IsIncludeEstimate.HasValue) ? Model.IsIncludeEstimate.Value : false;
                                    }
                                    <label class="label-cbx">
                                        <input id="IsEstInclude" type="checkbox" class="form-control invisible" @((checkData == true) ? "checked" : "") />
                                        <div class="checkbox">
                                            <svg width="20px" height="20px" viewBox="0 0 20 20">
                                                <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                                <polyline points="4 11 8 15 16 6"></polyline>
                                            </svg>
                                        </div>
                                    </label>
                                    <label rel="IsEstInclude" class="label hidden red position-absolute">*@Localize.T("Include In Estimate")</label>
                                    <div class="add_equip_check_text">@Localize.T("Include In Estimate")</div>
                                </div>


                            }



                        }


                    </div>
                </div>
                <div class="equipment_info_block">
                    <div class="equipment_info_block_header">@Localize.T("Purchasing information")</div>
                    <div class="equipment_info_block_information purchase_info">
                        @*<div class="form-group clearfix equipment-entity" style="position:relative;">
                    <span class="span-style">@Localize.T("Vendor Price")<span class="span-valid">@Localize.T("*")</span></span>
                    @Html.TextBoxFor(x => x.SupplierCost, new { @class = "form-control required-field", placeholder = "Purchasing Cost", id = "SupplierCost", @type = "number", datarequired = "true" })
                    <label rel="SupplierCost" class="label hidden red position-absolute">@Localize.T("Please enter vendor cost")</label>
                </div>
                <div class="form-group clearfix equipment-entity" style="position:relative;">
                    <span class="span-style">@Localize.T("Vendor")<span class="span-valid">@Localize.T("*")</span></span>
                    @Html.DropDownListFor(x => x.SupplierId, (List<SelectListItem>)ViewBag.SupplierList, new { @class = "form-control", id = "SupplierId", placeholder = "Supplier List", datarequired = "true" })
                    <label rel="SupplierId" class="label hidden red position-absolute">@Localize.T("Please select vendor")</label>
                </div>*@
                        @foreach (var item in UiGridSetting)
                        {
                            if (item.SelectedColumn == "RetailPrice")
                            {
                                <div class="form-group clearfix equipment-entity currency_style">
                                    <span class="span-style">@Localize.T("Retail Price")</span>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">
                                                @HS.Web.UI.Helper.LabelHelper.CurrentTransMakeCurrency.MakeCurrency(null)
                                            </span>
                                        </div>
                                        @Html.TextBoxFor(x => x.Retail, new { @class = "form-control required-field", placeholder = "Retail Price", @type = "number" })
                                    </div>

                                </div>
                            }
                            else if (item.SelectedColumn == "RepCost")
                            {
                                <div class="form-group clearfix equipment-entity currency_style">
                                    <span class="span-style">@Localize.T("Rep Cost")</span>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">
                                                @HS.Web.UI.Helper.LabelHelper.CurrentTransMakeCurrency.MakeCurrency(null)
                                            </span>
                                        </div>
                                        @Html.TextBoxFor(x => x.RepCost, new { @class = "form-control", placeholder = "Rep Cost", @type = "number" })
                                    </div>
                                    <label rel="RepCost" class="label hidden red position-absolute">*@Localize.T("Rep Cost")</label>
                                </div>
                            }
                            else if (item.SelectedColumn == "RackNo")
                            {
                                <div class="form-group clearfix equipment-entity">
                                    <span class="span-style">@Localize.T("Rack No")</span>
                                    @Html.TextBoxFor(x => x.RackNo, new { @class = "form-control", placeholder = "Rack No" })
                                    <label rel="RackNo" class="label hidden red position-absolute">*@Localize.T("Rack No")</label>
                                </div>
                            }
                            else if (item.SelectedColumn == "IsKit")
                            {
                                <div class="form-group clearfix equipment-entity add_equip_checkbox">
                                    @{
                                        bool checkedData = (Model.IsKit.HasValue) ? Model.IsKit.Value : false;
                                    }
                                    <label class="label-cbx">
                                        <input id="IsKit" type="checkbox" class="form-control invisible" @((checkedData == true) ? "checked" : "") />
                                        <div class="checkbox">
                                            <svg width="20px" height="20px" viewBox="0 0 20 20">
                                                <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                                <polyline points="4 11 8 15 16 6"></polyline>
                                            </svg>
                                        </div>
                                    </label>
                                    <label rel="IsKit" class="label hidden red position-absolute">*@Localize.T("Is Kit")</label>
                                    <div class="add_equip_check_text">@Localize.T("Is Kit")</div>
                                </div>
                            }
                            else if (item.SelectedColumn == "IsUpsold")
                            {
                                <div class="form-group clearfix equipment-entity add_equip_checkbox">
                                    @{
                                        bool checkedUpsoldData = (Model.IsUpsold.HasValue) ? Model.IsUpsold.Value : false;
                                    }
                                    <label class="label-cbx">
                                        <input id="IsUpsold" type="checkbox" class="form-control invisible" @((checkedUpsoldData == true) ? "checked" : "") />
                                        <div class="checkbox">
                                            <svg width="20px" height="20px" viewBox="0 0 20 20">
                                                <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                                <polyline points="4 11 8 15 16 6"></polyline>
                                            </svg>
                                        </div>
                                    </label>
                                    <label rel="IsUpsold" class="label hidden red position-absolute">*@Localize.T("Is Upsold")</label>
                                    <div class="add_equip_check_text">@Localize.T("Is Upsold")</div>
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="equipment_info_block" id="manu_details_div">
                    <div class="equipment_info_block_header">@Localize.T("Manufacturer")</div>
                    <div class="equipment_info_block_information add_multi_vendor_info">
                        <div class="Manufacturercost"></div>
                        <br/>
                        <div class="Equipmentmanufacturerlist"></div>
                    </div>
                </div>
                <div class="equipment_info_block">
                    <div class="equipment_info_block_header">@Localize.T("Vendor")</div>
                    <div class="equipment_info_block_information add_multi_vendor_info">
                        <div class="EquipmentCost"></div>
                        <div class="EquipmentVendorList"></div>
                    </div>
                </div>

            </div>
        </div>
        <div class="add_equip_footer_section">
            <div class="footer">
                <div class="save-Inventory-product">
                    <button class="btn-save-Inventory-product" id="saveProduct"><i class="fa fa-floppy-o" aria-hidden="true"></i> @Localize.T("Save")</button>
                </div>
            </div>

        </div>

</div>
</div>