@using Localize = HS.Web.UI.Helper.LanguageHelper
@using PermissionChecker=HS.Web.UI.Helper.PermissionHelper
@using Permission=HS.Framework.UserPermissions
@{
    Layout = null;
    var Currency = @HS.Web.UI.Helper.LabelHelper.CurrentTransMakeCurrency.MakeCurrency(null);
}
@model HS.Entities.Equipment
<link href="~/Content/Bootstrap/MultipleSelect/bootstrap-select.css" rel="stylesheet" />
<script src="~/Content/Bootstrap/MultipleSelect/bootstrap-select.js"></script>

@Styles.Render("~/styles/AddEquipmentServiceBundle")
<style>
    .ischarged-div {
        width: 33% !important;
    }

    .ServiceEqTab {
        width: 100%;
        float: left;
        border: 1px solid #ddd;
    }

    .ServiceEqTab tbody tr input {
        display: none;
    }

    .ServiceEqTab tbody tr span {
        display: block;
    }


    .ServiceEqTab tbody tr.focusedItem span {
        display: none;
    }

    .ServiceEqTab tbody tr td i.fa {
        cursor: pointer;
        font-size: 18px;
        padding-top: 10px;
    }

    .ServiceEqTab tbody tr td {
        padding: 5px;
        border-right: 1px solid #ddd;
        border-bottom: 1px solid #ddd;
        position: relative;
    }

    .ServiceEqTab thead tr th {
        text-align: left;
        line-height: 36px;
        vertical-align: middle;
        /*background-color: #ddd;*/
        border-right: 1px solid #ddd;
        border-bottom: 1px solid #ddd;
        padding-left: 15px;
        text-transform: uppercase;
        font-weight: 600;
    }

    .ServiceEqTab thead tr th:nth-child(4) {
        width: 90px;
    }

    .ServiceEqTab thead tr th:nth-child(3) {
        width: 20%;
    }

    .ServiceEqTab thead tr th:nth-child(1) {
        width: 50px;
    }

    .ServiceEqTab tbody tr.focusedItem input {
        display: block;
        border: 1px solid #2ca01c;
    }

    .ServiceEqTab tbody tr:hover {
        background-color: #f4f5f8;
        border-right: 1px solid #ffffff;
    }

    .ServiceEqTab thead tr:hover {
        background-color: #f4f5f8;
        border-right: 1px solid #ffffff;
    }

    .ServiceEqTab tbody tr td:nth-child(1) {
        text-align: center;
        vertical-align: middle;
    }
     .ServiceEqTab thead tr th:nth-child(3),
     .ServiceEqTab thead tr th:nth-child(4),
     .ServiceEqTab thead tr th:nth-child(5),
     .ServiceEqTab tbody tr td:nth-child(3),
     .ServiceEqTab tbody tr td:nth-child(4),
     .ServiceEqTab tbody tr td:nth-child(5) {
        text-align: center;
        vertical-align: middle;
    }

    .ServiceEqTab tbody tr td:hover {
        cursor: pointer;
    }

    .ServiceEqTab .tt-menu {
        background: white;
        min-width: 320px;
        font-size: 12px;
        max-height: 230px;
        -webkit-box-shadow: 0 5px 20px rgba(0,0,0,0.3);
        box-shadow: 0 5px 20px rgba(0,0,0,0.3);
        margin-top: 0px;
        position: absolute;
        left: 5px;
        z-index: 100;
        display: none;
        width: 450px;
        overflow-y: scroll;
    }

    .ServiceEqTab .tt-dataset-autocomplete {
        margin-top: -5px;
    }

    .ServiceEqTab .tt-suggestion {
        min-height: 36px;
        display: block;
        padding: 10px 10px 9px 15px;
        position: relative;
        cursor: pointer;
        white-space: nowrap;
        border-bottom: 1px solid #ccc;
    }

    .ServiceEqTab .tt-menu p, .search-bar-container .twitter-typeahead > i p {
        margin: 0;
    }

    .ServiceEqTab .tt-sug-text {
        width: 90%;
        font-size: 14px;
        text-overflow: ellipsis;
    }

    .ServiceEqTab .tt-suggestion u {
        text-decoration: none;
        color: #aa2121;
    }

    .ServiceEqTab .tt-suggestion.active {
        background-color: #f2f2f2;
    }

    .ServiceEqTab .tt-sug-desc {
        width: 100%;
        color: #999;
        padding-top: 2px;
        display: block;
        text-overflow: ellipsis;
        overflow: hidden;
    }

    .ServiceEqTab .tt-sug-type {
        position: absolute;
        right: 17px;
        top: 11px;
        color: #999;
        font-style: italic;
    }

    .ServiceEqTab .tt-eq-price {
        float: right;
    }

    .ServiceEqTab .tt-eq-name {
        float: left;
    } 
    .tableActions {
        text-align: center;
    }

    .pAmount {
    position: relative;
    display: -webkit-box;
    display: -ms-flexbox;
        display: flex; 
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
    width: 100%;
}

.pAmount .input-group-prepend { 
    width:30%;
    float:left;
}
    
.pAmount .input-group-text { 
    padding-top:5px;
    height: 32px;
    color: #495057;
    text-align: center; 
    background-color: #e9ecef;
    border: 1px solid #ced4da; 
}
.pAmount > .input-group-prepend > .input-group-text {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}
.pAmount input {
        position: relative;
    -webkit-box-flex: 1;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    width: 70%;
    float: left;
    margin-bottom: 0;
}
.ServiceEqTab tbody tr input, .ServiceEqTab tbody tr .pAmount {
    display: none;
}
.ServiceEqTab tbody tr.focusedItem input{
    border: 1px solid #2ca01c;
}
.ServiceEqTab tbody tr.focusedItem input, .ServiceEqTab tbody tr.focusedItem .pAmount{
    display: block; 
}

.ServiceEqTab tbody tr span {
    display: block;
}


.ServiceEqTab tbody tr.focusedItem span {
    display: none;
}

.ServiceEqTab tbody tr td i.fa {
    cursor: pointer;
    font-size: 18px;
    padding-top: 10px;
}

.tableActions {
    text-align: center;
}

.ServiceEqTab tbody tr td {
    padding: 5px;
    border-right: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    position:relative;
}

.ServiceEqTab thead tr th {
    text-align: left;
    line-height: 36px;
    vertical-align: middle;
    /*background-color: #ddd;*/
    border-right: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    padding-left: 15px;
    text-transform: uppercase;
    font-weight: 600;
}

.ServiceEqTab tbody tr:hover {
    background-color: #f4f5f8;
    border-right: 1px solid #ffffff;
}
.ServiceEqTab thead tr:hover {
    background-color: #f4f5f8;
    border-right: 1px solid #ffffff;
}

.ServiceEqTab tbody tr td:hover {
    cursor: pointer;
}
</style>
@Scripts.Render("~/scripts/AddEquipmentServiceBundle")
<script>
    var equipmentId = '@Model.EquipmentId';
    var TagValue = '@Model.Tag';
    var EquipmentClassId = 2;
    var PropertyUserSuggestiontemplate =
                '<div class="tt-suggestion tt-selectable" data-select="{1}" data-price="{2}" data-type="{5}" data-id="{0}" data-description="{6}">'
                   + "<p class='tt-sug-text'>"
                   + "<em class='tt-sug-type'>{5}</em>{1}" + "<br /><em class='tt_sug_manufac'>{7}</em>"
                       + "<em class='tt-eq-price'>${2}</em>"
                       + "<br />"
                   + "</p> "
                + "</div>";

    var NewEquipmentRow = "<tr>"
                        + "<td valign='top' class='rowindex'></td>"
                        + "<td valign='top'><input type='text'class='ProductName' onkeydown='SearchKeyDown(this,event)' onkeyup='SearchKeyUp(this,event)' />"
                            + "<div class='tt-menu'>"
                                + "<div class='tt-dataset tt-dataset-autocomplete'> </div> "
                            + "</div>"
                            + "<span class='spnProductName'></span>"
                        + "</td>"
                        + "<td valign='top'>"
                            + "<input type='text' onkeydown='OthersKeyDown(this,event)' class='txtProductQuantity' />"
                            + "<span class='spnProductQuantity'></span>"
                        + "</td>"
                        + "<td valign='top'>"
                            +"<div class='pAmount'>"
                              +"<div class='input-group-prepend'>"
                              +"<div class='input-group-text'>$</div></div>"
                                + "<input type='text' onkeydown='OthersKeyDown(this,event)' class='txtProductPrice' /></div>"
                                + "<span class='spnProductPrice'></span>"
                        + "</td>"
                        + "<td valign='top' class='tableActions'>"
                            + "<i class='fa fa-trash-o' aria-hidden='true'></i>"
                        + "</td>"
                    + "</tr>";

    var saveNonInventory = function () {

        var ServiceEquipments = [];
        $(".HasItem").each(function () {
            if ($(this).find('.txtProductQuantity').val() != 0)
            {
                ServiceEquipments.push({
                    EquipmentId: $(this).attr('data-id'),
                    //EquipDetail: $(this).find('.txtProductDesc').val(),
                    Quantity: $(this).find('.txtProductQuantity').val(),
                    RetailPrice: $(this).find('.txtProductPrice').val().trim().replaceAll(',', ''),
                    //TotalPrice: ($(this).find('.txtProductQuantity').val() * parseFloat($(this).find('.txtProductRate').val().trim().replaceAll(',', ''))).toString(),
                    /*EquipmentDescription: $(this).find('.txtProductDesc').val(),*/
                    EquipName: $(this).find('.ProductName').val(),
                    //Taxable: (!$(this).hasClass('NonTaxable')),
                    //InventoryId: '00000000-0000-0000-0000-000000000000',
                    //CreatedDate: '1-1-2017',
                    //InvoiceId: InvoiceId
                });
            }
        });
        var TagValue = "";
        if ($("#Tag").val() != null && $("#Tag").val() != undefined)
        {
            TagValue = $("#Tag").val().join(",");
        }
        var url = domainurl + "/Inventory/AddInventoryEquipment/";
        var param = JSON.stringify({
            id: $("#Id").val(),
            name: $("#Name").val(),
            SKU: $("#SKU").val(),
            EquipmentTypeId: $("#EquipmentTypeId").val(),
            Tag: TagValue,
            StrAsOfDate: $("#AsOfDate").val(),
            reorderpoint: $("#reorderpoint").val(),
            Cost: $("#Cost").val(),
            ManufacturerId: $("#ManufacturerId").val(),
            SupplierCost: $("#SupplierCost").val(),
            SupplierId: $("#SupplierId").val(),
            CreatedDate: $("#CreatedDate").val(),
            CompanyId: $("#CompanyId").val(),
            EquipmentId: $("#EquipmentId").val(),
            EquipmentClassId: EquipmentClassId,
            IsActive: $("#IsActive").val(),
            Retail: $("#Retail").val(),
            QtyOnHand: $("#QtyOnHand").val(),
            Comments: $("#Comments").val(),
            IsKit: $("#IsKit").is(':checked'),
            IsTaxable:$("#IsTaxable").is(":checked"),
            RepCost: $("#RepCost").val(),
            RackNo: $("#RackNo").val(),
            ServiceEquipments: ServiceEquipments,
            EquipmentPrice: $("#EquipmentPrice").val(),
            IsARBEnabled: $("#IsARBEnabled_check").prop("checked"), 
            EquipmentPriceIsCharged: $("#EquipmentPriceIsCharged").prop("checked"),
            IsWarrenty: $("#Warrenty_check").prop('checked')
        });
        $.ajax({
            type: "POST",
            ajaxStart: $(".loader-div").show(),
            url: url,
            data: param,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                //OpenRightToLeftLgModal();
                //parent.LoadEquipmentList();
                window.location.reload();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $(".loader-div").hide();
                console.log(errorThrown);
            }
        });
    }

    var InvoiceEqSuggestionclickbind = function (item) {
        $('.ServiceEqTab .tt-suggestion').click(function () {
            var clickitem = this;
            $('.ServiceEqTab .tt-menu').hide();
            $(item).val($(clickitem).attr('data-select'));
            $(item).attr('data-id', $(clickitem).attr('data-id'));
            var itemName = $(item).parent().find('span');
            $(itemName).text($(item).val());

            $(item).parent().parent().attr('data-id', $(clickitem).attr('data-id'));
            $(item).parent().parent().addClass('HasItem');
            var spnItemRate = $(item).parent().parent().find('.spnProductQuantity');
            $(spnItemRate).text(1);
            var txtItemRate = $(item).parent().parent().find('.txtProductQuantity');
            $(txtItemRate).val(1);
            var spnItemRate = $(item).parent().parent().find('.spnProductPrice');
            $(spnItemRate).text($(this).attr('data-price'));
            var txtItemRate = $(item).parent().parent().find('.txtProductPrice');
            $(txtItemRate).val($(this).attr('data-price'));
        });
        $('.ServiceEqTab .tt-suggestion').hover(function () {
            var clickitem = this;
            $('.tt-suggestion').removeClass("active");
            $(clickitem).addClass('active');
        });
    }
    var SearchKeyUp = function (item, event) {
        if (event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 9)
            return false;
        var ExistEquipment = "";
        var ExistEquipmentInner = "";
        $(".HasItem").each(function () {
            ExistEquipmentInner += "'" + $(this).attr('data-id') + "',";
        });
        if (ExistEquipmentInner.length > 0) {
            ExistEquipmentInner = ExistEquipmentInner.slice(0, -1);
            ExistEquipment = "(" + ExistEquipmentInner + ")";
        }
        $.ajax({
            url: domainurl + "/Invoice/GetEquipmentListByKey",
            data: {
                key: $(item).val(),
                ExistEquipment: ExistEquipment
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                var resultparse = JSON.parse(data.result);

                if (resultparse.length > 0) {
                    var searchresultstring = "<div class='NewProjectSuggestion'>";
                    for (var i = 0; i < resultparse.length; i++) {
                        searchresultstring = searchresultstring + String.format(PropertyUserSuggestiontemplate,
                            /*0*/resultparse[i].EquipmentId,
                            /*1*/ resultparse[i].EquipmentName.replaceAll('"', '\'\''),
                            /*2*/ resultparse[i].RetailPrice,
                            /*3*/resultparse[i].Reorderpoint,
                            /*4*/ resultparse[i].QuantityAvailable,
                            /*5*/ resultparse[i].EquipmentType.replaceAll('"', '\'\''),
                            /*6*/resultparse[i].EquipmentDescription.replaceAll('"', '\'\''),
                            /*7*/resultparse[i].ManufacturerName.replaceAll('"', '\'\'')/* ImageSource*/);
                    }
                    searchresultstring += "</div>";
                    var ttdom = $($(item).parent()).find('.tt-menu');
                    var ttdomComplete = $($(item).parent()).find('.tt-dataset-autocomplete');
                    $(ttdomComplete).html(searchresultstring);
                    $(ttdom).show();

                    InvoiceEqSuggestionclickbind(item);
                    if (resultparse.length > 4) {
                        $(".NewProjectSuggestion").height(352);
                        $(".NewProjectSuggestion").css('position', 'relative');
                        /*$(".NewProjectSuggestion").perfectScrollbar()*/
                    }
                }
                if (resultparse.length == 0)
                    $('.tt-menu').hide();
            }
        });
    }
    var SearchKeyDown = function (item, event) {
        if (event.keyCode == 13) {/*Enter*/
            var selectedTTMenu = $(event.target).parent().find('.tt-suggestion.active');
            $(selectedTTMenu).click();
            $('.tt-menu').hide();
        }
        if (event.keyCode == 40) {/*Down*/
            var ttSugstionDom = $(event.target).parent().find('.tt-suggestion');
            var ttSugActive = $(event.target).parent().find('.tt-suggestion.active');
            if ($(ttSugstionDom).length > 0 && $(ttSugstionDom).is(':visible')) {
                if ($(ttSugActive).length == 0) {
                    $($(ttSugstionDom).get(0)).addClass('active');
                    $(item).val($($(ttSugstionDom).get(0)).attr('data-select'))
                }
                else {
                    var suggestionlist = $(ttSugstionDom);
                    var activesuggestion = $(ttSugActive);
                    var indexactive = -1;
                    for (var id = 0; id < suggestionlist.length; id++) {
                        if ($(suggestionlist[id]).hasClass('active'))
                            indexactive = id;
                    }
                    if (indexactive < suggestionlist.length - 1) {
                        $(ttSugstionDom).removeClass('active');
                        var possibleactive = $(ttSugstionDom).get(indexactive + 1);
                        $($(ttSugstionDom).get(indexactive + 1)).addClass('active');
                        $(possibleactive).addClass('active');
                        $(item).val($(possibleactive).attr('data-select'));
                    }
                }

                event.preventDefault();
            }
            else {

                var trselected = $($(event.target).parent()).parent();
                $(trselected).removeClass('focusedItem');
                $($(trselected).next('tr')).addClass('focusedItem');
                if ($(event.target).hasClass('ProductName')) {
                    $($(trselected).next('tr')).find('input.ProductName').focus();
                }
            }
        }

        if (event.keyCode == 38) {/*UP*/
            var ttSugstionDom = $(event.target).parent().find('.tt-suggestion');
            var ttSugActive = $(event.target).parent().find('.tt-suggestion.active');
            if ($(ttSugstionDom).length > 0 && $(ttSugActive).length > 0 && $(ttSugstionDom).is(':visible')) {
                var suggestionlist = $(ttSugstionDom);
                var activesuggestion = $(ttSugActive);
                var indexactive = -1;
                for (var id = 0; id < suggestionlist.length; id++) {
                    if ($(suggestionlist[id]).hasClass('active'))
                        indexactive = id;
                }
                if (indexactive > 0) {
                    $(ttSugstionDom).removeClass('active');
                    var possibleactive = $(ttSugstionDom).get(indexactive - 1);
                    $(possibleactive).addClass('active');
                    $(item).val($(possibleactive).attr('data-select'))
                }
                event.preventDefault();
            }
            else {
                var trselected = $($(event.target).parent()).parent();
                $(trselected).removeClass('focusedItem');
                $($(trselected).prev('tr')).addClass('focusedItem');
                $($(trselected).prev('tr')).find('input.ProductName').focus();
            }
        }
    }

    $(document).ready(function () {
        $("#Tag").selectpicker();
        if (TagValue != null && TagValue != "" && TagValue != undefined)
        {
            var TagArray = TagValue.split(',');
            $("#Tag").val(TagArray);
            $("#Tag").selectpicker("refresh")
        }
        var windowsHeight = window.innerHeight - 92;
        Asofdatepicker = new Pikaday({ format: 'MM/DD/YYYY', field: $('#AsOfDate')[0] });
        $(".add_equipment_container").height(windowsHeight);
        $("#saveProduct").click(function () {
            if (CommonUiValidation()) {
                saveNonInventory();
            }
        });
        $(".EquipmentCost").load(domainurl + "/Inventory/AddEquipmentVendor");
        $(".EquipmentVendorList").load(domainurl + "/Inventory/VendorList?EquipmentId=" + equipmentId);
        /*focus table row*/
        $(".ServiceEqTab tbody").on('click', 'tr', function (e) {
            if ($(e.target).hasClass('fa') || $(e.target).hasClass('tt-sug-text') || $(e.target).hasClass('tt-suggestion')) {
                return;
            }
            if ($(e.target).hasClass("spnProductName") || $(e.target).hasClass("spnProductDesc")
                || $(e.target).hasClass("spnProductQuantity") || $(e.target).hasClass("spnProductPrice")
                || $(e.target).hasClass("spnProductAmount")) {
                $(".ServiceEqTab tr").removeClass("focusedItem");
                $($(e.target).parent().parent()).addClass("focusedItem");
                $(e.target).parent().find('input').focus();
            }
            else if ($(e.target).hasClass("pAmount")) {
                $(".ServiceEqTab tr").removeClass("focusedItem");
                $($(e.target).parent().parent()).addClass("focusedItem");
                $(e.target).find('input').focus();
            }
            else if (e.target.tagName.toUpperCase() == 'INPUT') {
                return;
            }
            else {
                $(".ServiceEqTab tr").removeClass("focusedItem");
                $($(e.target).parent()).addClass("focusedItem");
                $(e.target).find('input').focus();
            }
        });
        /*Add new row*/
        $(".ServiceEqTab tbody").on('click', 'tr:last', function (e) {
            if ($(e.target).hasClass('fa')) {
                return;
            }
            $(".ServiceEqTab tbody tr:last").after(NewEquipmentRow);
            var i = 1;
            $(".ServiceEqTab tbody tr td:first-child").each(function () {
                $(this).text(i);
                i += 1;
            });
        });
        /*Remove last row*/
        $(".ServiceEqTab tbody").on('click', 'tr td i.fa', function (e) {
            $(this).parent().parent().remove();
            if ($(".ServiceEqTab tbody tr").length < 2) {
                $(".ServiceEqTab tbody tr:last").after(NewEquipmentRow);
            }
            var i = 1;
            $(".ServiceEqTab tbody tr td:first-child").each(function () {
                $(this).text(i);
                i += 1;
            });
        });
        $(".ServiceEqTab tbody").on('change', "tr td .txtProductQuantity", function () {
            var ProductQuantityDom = $(this).parent().find('span.spnProductQuantity');
            $(ProductQuantityDom).text($(this).val());
        });
        $(".ServiceEqTab tbody").on('change', "tr td .txtProductPrice", function () {
            var ProductPriceDom = $(this).parent().parent().find('span.spnProductPrice');
            $(ProductPriceDom).text($(this).val());
        });
    });


</script>

<div class="addequipment_div">
    <div class="hidden">
        @Html.HiddenFor(x => x.Id, new { id = "Id" })
        @Html.HiddenFor(x => x.CreatedDate, new { id = "CreatedDate" })
        @Html.HiddenFor(x => x.CompanyId, new { id = "CompanyId" })
        @Html.HiddenFor(x => x.EquipmentId, new { id = "EquipmentId" })
        @Html.HiddenFor(x => x.IsActive, new { id = "IsActive" })
    </div>
    <div class="add_equipment_contents">
        <div class="add_equip_header">
            <span>@Localize.T("Service information")</span>
            <div onclick="CloseTopToBottomModal()" class="add_equip_close_div">
                <img class="close_btn_size" title="@Localize.T("Close")" src="~/Content/Icons/cross_update.png">
            </div>
        </div>
        <div class="add_equipment_container">
            <div class="equipment_info_block">
                <div class="equipment_info_block_header">@Localize.T("Service information")</div>
                <div class="equipment_info_block_information equi_info">
                    <div class="form-group clearfix equipment-entity" style="position:relative;">
                        <span class="span-style">@Localize.T("Name")<span class="red">*</span></span>
                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control required-field", placeholder = "Name", datarequired = "true" })
                        <label rel="Name" class="label hidden red position-absolute">*@Localize.T("Please enter equipment name")</label>
                    </div>
                    <div class="form-group clearfix equipment-entity" style="position:relative;">
                        <span class="span-style">@Localize.T("Category")<span class="red">*</span></span>
                        @Html.DropDownListFor(x => x.EquipmentTypeId, (List<SelectListItem>)ViewBag.EquipmentTypeList, new { @class = "form-control", datarequired = "true" })
                        <label rel="EquipmentTypeId" class="label hidden red position-absolute">*@Localize.T("Please select category")</label>
                    </div>
                    <div class="form-group clearfix equipment-entity">
                        <span class="span-style">@Localize.T("Monthly Fee")</span>
                        @Html.TextBoxFor(x => x.Retail, new { @class = "form-control required-field", placeholder = "Monthly Fee", @type = "number" })
                    </div>
                    <div class="form-group clearfix equipment-entity">
                        <span class="span-style">@Localize.T("Tag")</span>
                        @Html.DropDownListFor(x => x.Tag, (List<SelectListItem>)ViewBag.TagList, new { @class = "form-control selectpicker", @multiple = "multiple" })
                    </div>
                    <div class="form-group clearfix equipment-entity">
                        <span class="span-style">@Localize.T("Description")</span>
                        @Html.TextAreaFor(x => x.Comments, new { @class = "form-control", id = "Comments", placeholder = "Product description", style = "height:unset;" })
                    </div>
                    <div class="form-group clearfix service_info_check_holder">
                        <div class="service_info_check_left">
                            <label for="Warrenty_check" class="label-cbx">
                                <input id="Warrenty_check" type="checkbox" class="invisible" @(Model.IsWarrenty.Value ? "checked" : "") autocomplete="off">
                                <div class="checkbox">
                                    <svg width="20px" height="20px" viewBox="0 0 20 20">
                                        <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                        <polyline points="4 11 8 15 16 6"></polyline>
                                    </svg>
                                </div>
                                <label for="Warrenty_check" style="cursor:pointer;" class="lbl-CheckBoxText pad_none">@Localize.T("Warranty")</label>
                            </label>
                        </div>

                        <div class="service_info_check_left">
                            <label for="IsARBEnabled_check" class="label-cbx">
                                <input id="IsARBEnabled_check" type="checkbox" class="invisible" @((Model.IsARBEnabled.HasValue && Model.IsARBEnabled.Value) ? "checked" : "") autocomplete="off">
                                <div class="checkbox">
                                    <svg width="20px" height="20px" viewBox="0 0 20 20">
                                        <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                        <polyline points="4 11 8 15 16 6"></polyline>
                                    </svg>
                                </div>
                                <label for="IsARBEnabled_check" style="cursor:pointer;" class="lbl-CheckBoxText pad_none">@Localize.T("Recurring Billing")</label>
                            </label>
                        </div>
                        @if (PermissionChecker.IsPermitted(Permission.InventoryPermissions.InventoryIsTaxable))
                        {
                            <div class="service_info_check_right">
                                <label for="IsTaxable" class="label-cbx">
                                    <input id="IsTaxable" type="checkbox" class="invisible" @((Model.IsTaxable.HasValue && Model.IsTaxable.Value) ? "checked" : "") autocomplete="off">
                                    <div class="checkbox">
                                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                            <polyline points="4 11 8 15 16 6"></polyline>
                                        </svg>
                                    </div>
                                    <label for="IsTaxable" style="cursor:pointer;" class="lbl-CheckBoxText pad_none">@Localize.T("Is Taxable")</label>
                                </label>
                            </div>
                        }

                    </div>
                </div>
            </div>
            <div class="equipment_info_block_for_Addequipment">
                <div class="equipment_info_block_header">@Localize.T("Added Equipment")</div>
                <div class="equipment_info_block_information equi_info">
                    <table class="ServiceEqTab">
                        <thead class="header_text_style">
                            <tr>
                                <th></th>
                                <th class="thead-th-style1 tab-index">@Localize.T("Equipment Name")</th>
                                <th class="thead-th-style1 tab-index">@Localize.T("QTY")</th>
                                <th class="thead-th-style1 tab-index">@Localize.T("Price")</th>
                                <th class="thead-th-style1 tab-index">@Localize.T("Action")</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.ServiceEquipments != null && Model.ServiceEquipments.Count() > 0)
                            {
                                foreach (var item in Model.ServiceEquipments)
                                {
                                    <tr class="HasItem" data-id="@item.EquipmentId">
                                        <td valign="top"></td>
                                        <td valign="top">
                                            <input type="text" class="ProductName" value="@item.EquipmentName" onkeydown="SearchKeyDown(this,event)" onkeyup="SearchKeyUp(this,event)" />
                                            <div class='tt-menu'><div class='tt-dataset tt-dataset-autocomplete'> </div></div>
                                            <span class="spnProductName">@item.EquipmentName</span>
                                        </td>
                                        <td valign="top">
                                            <input type="text" value="@item.Quantity" class="txtProductQuantity" />
                                            <span class="spnProductQuantity">@item.Quantity</span>
                                        </td>
                                        <td valign="top">
                                            <div class="pAmount">
                                                <div class="input-group-prepend">
                                                    <div class="input-group-text">@Currency</div>
                                                </div>
                                                <input type="text" value="@item.RetailPrice" class="txtProductPrice" />
                                            </div> 
                                           
                                            <span class="spnProductPrice">@item.RetailPrice</span>
                                        </td>
                                        <td valign="top" class='tableActions'>
                                            <i class="fa fa-trash-o" aria-hidden="true" title="@Localize.T("Delete")"></i>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td valign="top"></td>
                                    <td valign="top">
                                        <input type="text" class="ProductName" onkeydown="SearchKeyDown(this,event)" onkeyup="SearchKeyUp(this,event)" />
                                        <div class='tt-menu'><div class='tt-dataset tt-dataset-autocomplete'> </div></div>
                                        <span class="spnProductName"></span>
                                    </td>
                                    <td valign="top">
                                        <input type="text" class="txtProductQuantity" />
                                        <span class="spnProductQuantity"></span>
                                    </td>
                                    <td valign="top">
                                        <div class="pAmount">
                                            <div class="input-group-prepend">
                                                <div class="input-group-text">@Currency</div>
                                            </div>
                                            <input type="text" class="txtProductPrice" />
                                        </div> 
                                        
                                        <span class="spnProductPrice"></span>
                                    </td>
                                    <td valign="top" class='tableActions'>
                                        <i class="fa fa-trash-o" aria-hidden="true" title="@Localize.T("Delete")"></i>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="add_equip_footer_section">
            <div class="footer">
                <div class="save-Inventory-product">
                    <button class="btn-save-Inventory-product" id="saveProduct"><i class="fa fa-floppy-o" aria-hidden="true"></i> @Localize.T("Save")</button>
                </div>
            </div>
        </div>
    </div>
</div>