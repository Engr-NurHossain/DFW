@{
    Layout = null;
}
@model HS.Entities.CreateTicketModel
@using HS.Framework
@using AppConfig = HS.Framework.Utils.AppConfig;
@using LabelHelper = HS.Web.UI.Helper.LabelHelper
@using Localize = HS.Web.UI.Helper.LanguageHelper
@using TickType = HS.Web.UI.Helper.LabelHelper.TicketType
@using DateTimeExt = HS.Framework.DateTimeExtension
@using TickStat = HS.Web.UI.Helper.LabelHelper.TicketStatus
@using PermissionChekcer = HS.Web.UI.Helper.PermissionHelper
@using Permissions = HS.Framework.UserPermissions
<link href="~/Content/Css/Ticket/AddTicket.css" rel="stylesheet" />
@{
    if (Model.Ticket != null && Model.Ticket.Status != TickStat.Init)
    {
        if (Model.TicketReplyList.Count > 0)
        {
            <table class="ticketTable @((Model.Ticket.Status == TickStat.Init)?"table_style_for_new":"")" id="ticket_table_note">
                @{
                    foreach (var item in Model.TicketReplyList)
                    {
                        string ticketstyleclass = "ticket_reply_style";
                        if (item.TypeReply == "File")
                        {
                            ticketstyleclass = "ticket_file_style";

                        }
                        else if (item.Message.IndexOf("<span>Attached an") == 0)
                        {
                            ticketstyleclass = "ticket_attached_style";
                        }
                        else if (item.Message.IndexOf("<span data='itemsremoved'>") == 0
                            || item.Message.IndexOf("<span data='servicesremoved'>") == 0)
                        {
                            ticketstyleclass = "ticket_itemremoved_style";
                        }
                        else if (item.Message.IndexOf("<span data='itemsadded'>") == 0
                            || item.Message.IndexOf("<span data='servicesadded'>") == 0)
                        {
                            ticketstyleclass = "ticket_itemsadded_style";
                        }
                        if (ViewBag.UserRole != "Customer")
                        {
                            if (item.TypeReply == "Reply" && item.Message.IndexOf("<p") == 0)
                            {
                                <tr class="Ticket_replies @ticketstyleclass">
                                    <td>
                                        <div class="ticke_info_header">
                                            <i class="fa fa-reply-all"></i> @Localize.T("Reply from")
                                            @if (item.IsPrivate == true)
                                            {
                                                <span><i class="fa fa-expeditedssl"></i></span>
                                            }

                                            @if (PermissionChekcer.IsPermitted(Permissions.CustomerPermissions.CustomerTicketDelete))
                                            {
                                                <a href="javascript:void(0)" class="Ticket-delete-reply" data-id="@item.Id" id="@item.Id" style="float:right;cursor:pointer;" title="@Localize.T("Delete")">
                                                    <i class="fa fa-trash-o" aria-hidden="true"></i>
                                                </a>
                                            }
                                        </div>
                                        <div class="ticket_created_profile_pic_div">
                                            <div class="ticket_created_profile_pic">
                                                <img src="/EmpShow/W50H50X@(item.UserId)Dtrue" alt="~/Content/img/user.png" />
                                            </div>
                                        </div>
                                    </td>
                                    <td valign="top" class="ticket_td_height">
                                        <div class="ticket_add_custom_style ticket_add_info_mobile">
                                            <div class="ticke_info_header tick_info_header_mobile">
                                                <div class="ticket_profile_credit">@item.CreatedByVal</div>
                                                <span class="ticket_profile_time">@item.RepliedDateVal @*on @(string.Format(DateTimeExt.UTCToClientTime(item.RepliedDate).ToString("MM/dd/yy {0} hh:mm:ss tt"), "at"))*@</span>
                                            </div>
                                            <p> @Html.Raw(item.Message) </p>
                                        </div>
                                    </td>
                                </tr>
                                <tr class="blank_row"><td colspan="2">&nbsp;</td></tr>
                            }

                        }
                    }

                    if (!string.IsNullOrWhiteSpace(Model.Ticket.Message))
                    {
                        <tr class="Ticket_replies ticket_reply_style">
                            <td>
                                <div class="ticke_info_header">
                                    <i class="fa fa-reply-all"></i> @Localize.T("Reply from")

                                </div>
                                <div class="ticket_created_profile_pic_div">
                                    <div class="ticket_created_profile_pic">
                                        <img src="/EmpShow/W50H50X@(Model.Ticket.CreatedBy)Dtrue" alt="~/Content/img/user.png" />
                                    </div>
                                </div>
                            </td>
                            <td valign="top" class="ticket_td_height">
                                <div class="ticket_add_custom_style ticket_add_info_mobile">
                                    <div class="ticke_info_header tick_info_header_mobile">
                                        <div class="ticket_profile_credit">@Model.Ticket.CreatedByVal</div>
                                        <span class="ticket_profile_time">@Model.Ticket.CreatedDate @*on @(string.Format(DateTimeExt.UTCToClientTime(item.RepliedDate).ToString("MM/dd/yy {0} hh:mm:ss tt"), "at"))*@</span>
                                    </div>
                                    <p> @Html.Raw(Model.Ticket.Message) </p>
                                </div>
                            </td>
                        </tr>
                        <tr class="blank_row"><td colspan="2">&nbsp;</td></tr>
                    }
                }
            </table>

        }
    }

}
