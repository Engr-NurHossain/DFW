@{
    Layout = null;
}
@model HS.Entities.PackageCustomer
@using Localize = HS.Web.UI.Helper.LanguageHelper
@using PermissionChekcer = HS.Web.UI.Helper.PermissionHelper
@using Permissions = HS.Framework.UserPermissions
<script>
    var LeadId = '@ViewBag.CustomerIDForPackageInstall';
    var PackageId = '@ViewBag.PackageId';
    var HasCreditCheck = '@ViewBag.HasCreditCheck';
    var CustomerId = '@ViewBag.CustomerId';
    var PackageInitVal = $("#PackageId").val();
    var BrinksCreditCheck = '@ViewBag.BrinksCreditCheck';
    var HasDiffrentCreditContact = '@ViewBag.HasDiffrentCreditContact';
</script>
@Styles.Render("~/styles/SmartPackagePartial")
@Scripts.Render("~/scripts/SmartPackagePartial")

<div class="lead_setup_info_container">
    <input id="step" type="hidden" value="1" />
    <div class="row margin_top_row package_option">
        <div class="col-sm-3 spp_top_space">
            <span class="text-custom">@Localize.T("System Type")</span>
            @Html.DropDownListFor(x => x.SmartSystemTypeId, (List<SelectListItem>)ViewBag.SystemTypeList, new { @class = "form-control", datarequired = "true" })
            @*<label class="label hidden red absolute" rel="PackageSystemType">Localize.T("Please enter Package System Type"). </label>*@

        </div>

        <div class="col-sm-3 spp_top_space">
            <span class="text-custom">@Localize.T("Manufacturer")</span>
            @Html.DropDownListFor(x => x.ManufacturerId, (List<SelectListItem>)ViewBag.ManufacturerList, new { @class = "form-control", datarequired = "true" })
            @*<label class="label hidden red absolute" rel="InstallType">Localize.T("Please enter Install Type"). </label>*@
        </div>
        <div class="col-sm-3 spp_top_space">

            <span class="text-custom">@Localize.T("Install Type")</span>

            @Html.DropDownListFor(x => x.SmartInstallTypeId, (List<SelectListItem>)ViewBag.InstallTypeList, new { @class = "form-control", datarequired = "true" })
            @*<label class="label hidden red absolute" rel="InstallType">Localize.T("Please enter Install Type"). </label>*@

        </div>

        <div class="col-sm-3 spp_top_space">
            <span class="text-custom">@Localize.T("Package Option")</span>
            <select class="form-control" data-val="true" data-val-required="The PackageId field is required." datarequired="true" id="PackageId" name="PackageId">
                @{
                    int CreditScore = 0;

                    if (ViewBag.CreditScore > 0)
                    {
                        CreditScore = ViewBag.CreditScore;
                    }
                }
                @foreach (var item in Model.PackageDropdownList)
                {
                    if (item.MinCredit == -1)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                    else if (item.MinCredit == 0)
                    {
                        <option class="UndefinedCredit" value="@item.Value">@item.Text</option>
                    }
                    else if (CreditScore >= item.MinCredit)
                    {
                        <option class="PassCredit" value="@item.Value">@item.Text</option>
                    }
                    else
                    {
                        <option class="FailCredit" value="@item.Value">@item.Text</option>
                    }

                }
            </select>
            @*@Html.DropDownListFor(x => x.PackageId, (List<SelectListItem>)ViewBag.PackageList, new { @class = "form-control", datarequired = "true" })*@
            <label class="label hidden red absolute" rel="PackageType">Localize.T("Please enter Package Type"). </label>

        </div>
    </div>
    <div class="row margin_top_row">
        <div class="col-sm-12">
            <div class="package-additional-features">

            </div>
        </div>
    </div>
</div>
@*<div style="display:none">
    <a href="" class="SecondaryContactMagnific">@Localize.T("Secondary Contact")</a>
</div>
@if (PermissionChekcer.IsPermitted(Permissions.CustomerPermissions.SoftCreditCheckEFX))
{
    <button type="button" class="btn green_button" id="EFXCheckCreditSoft" title="Check Credit">
        <span>@Localize.T("Pull Soft Credit (EFX)")</span>
    </button>
}
@if (PermissionChekcer.IsPermitted(Permissions.CustomerPermissions.HardCreditCheckEFX))
{
    <button type="button" class="btn green_button" id="EFXCheckCreditHard" title="Check Credit">
        <span>@Localize.T("Pull Hard Credit (EFX)")</span>
    </button>
}
@if (PermissionChekcer.IsPermitted(Permissions.CustomerPermissions.SoftCreditCheckTU))
{
    <button type="button" class="btn green_button" id="TUCheckCreditSoft" title="Check Credit">
        <span>@Localize.T("Pull Soft Credit (TU)")</span>
    </button>
}
@if (PermissionChekcer.IsPermitted(Permissions.CustomerPermissions.HardCreditCheckTU))
{
    <button type="button" class="btn green_button" id="TUCheckCreditHard" title="Check Credit">
        <span>@Localize.T("Pull Hard Credit (TU)")</span>
    </button>
}
@if (PermissionChekcer.IsPermitted(Permissions.CustomerPermissions.UseSecondaryContact))
{
    <input type="checkbox" id="UseDiffAddress" style="margin-left:10px;" />
    <label for="UseDiffAddress" style="cursor:pointer;">Use Different Contact</label>
    <div id="SecondaryContactList">

    </div>
}*@
<div>
    @if(!string.IsNullOrEmpty(ViewBag.BounceStatus))
    {
        <label>Bounce Status : </label>
        <span>@ViewBag.BounceStatus</span>
    }
</div>



