@{
    Layout = null;
}
@model HS.Entities.PaymentInfo
@using Localize = HS.Web.UI.Helper.LanguageHelper

<style>
    .alarm_head_text {
        font-size: 2rem;
        font-family: 'Play', sans-serif;
    }

    .alarm_head_container {
        width: 100%;
        background-color: #eceef1;
        padding: 10px 0px 10px 15px;
    }

    .footer-section {
        background: #eceef1;
        height: 50px;
        position: fixed;
        width: 100%;
        bottom: 0%;
    }

    .SaveCancelDiv {
        width: 95%;
        padding-top: 8px;
    }

    #btnsaveACH, #btnsaveACH:hover {
        margin-right: 10px;
        float: right;
        margin-top: 3px !important;
        color: white;
        background-color: #2ca01c;
        border-color: #867e7e;
    }
    #btnsaveCheck {
        float:right;
        background-color:#2ca01c;
        color:#fff;
    }
</style>
<script>
    var customerid = '@ViewBag.customerid';
    var PaymentMethodCheck = '@HS.Web.UI.Helper.LabelHelper.PaymentMethod.Check';
    var CheckMethodFunction = function () {
                console.log("hlw");
        var url = domainurl + "/SmartLeads/SavePaymentMethod";
        var param = JSON.stringify({
            Id: $("#Check_id").val(),
            CheckNo: $("#CheckNo").val(),
            CardType: PaymentMethodCheck,
            AccountName: PaymentMethodCheck,
            MethodType: PaymentMethodCheck,
            CustomerId: customerid
        });
        $.ajax({
            type: "POST",
            url: url,
            data: param,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                if (data.result) {
                    OpenSuccessMessageNew("Success", "Payment Method Saved Successfully", function () {
                        OpenRightToLeftModal(false);
                        OpenFifthTab();
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $(".loader-div").hide();
                console.log(errorThrown);
            }
        });
    }

    function isEmptyOrSpaces(str) {
        return str === null || str.match(/^ *$/) !== null;
    }

    function validate_RoutingNo() {
        var CheckNo = $("#CheckNo").val();
        if (CheckNo == undefined || CheckNo == null || isEmptyOrSpaces(CheckNo)) {
            $("#CheckNo").css("border-color", "red");
            return false;
        } else {
            $("#CheckNo").css("border-color", "#ccc");
            return true;
        }
    }


    $(document).ready(function () {
        $("#btnsaveCheck").click(function () {

            var validate_RoutingNo1 = validate_RoutingNo();

            if (validate_RoutingNo1) {
                CheckMethodFunction();
            }
        })
    })
</script>

@Html.HiddenFor(x => x.Id, new { id = "Check_id" })
<div class="alarm_head_container">
    <span class="alarm_head_text header_txt_style_ERP">@Localize.T("Check")</span>
</div>
<div class="container-fluid">
    <div class="form-group clearfix">
        <span class="text-custom">@Localize.T("Check No")</span>
        @Html.TextBoxFor(x => x.CheckNo, new { @class = "form-control", id = "CheckNo", datarequired = "true", placeholder = "Check No" })
    </div>
</div>
<section class="footer-section">
    <footer class="footer">
        <div class="SaveCancelDiv">
            <button type="button" class="btn" id="btnsaveCheck"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp;@Localize.T("Save")</button>
        </div>
    </footer>
</section>
