@model HS.Entities.CustomerInspection

@{
    Layout = null;
}
@using Localize = HS.Web.UI.Helper.LanguageHelper

@Scripts.Render("~/scripts/CustomerInspection")
@Styles.Render("~/styles/CustomerInspection")
<link href="~/Content/PikDay/css/pikaday.css" rel="stylesheet" />
<script src="~/Content/PikDay/js/pikaday.js"></script>

<script>
    var CurrentOutsideConditions = '@Model.CurrentOutsideConditions';
    var Heat = '@Model.Heat';
    var Air = '@Model.Air';
    var BasementDehumidifier = '@Model.BasementDehumidifier';
    var FoundationType = '@Model.FoundationType';
    var BasementGoDown = '@Model.BasementGoDown';
    var RemoveWater = '@Model.RemoveWater';
    var PlansForBasementOnce = '@Model.PlansForBasementOnce';
    var LosePower = '@Model.LosePower';

    if (typeof (CurrentOutsideConditions) != "undefined" && CurrentOutsideConditions != null && CurrentOutsideConditions != "" && CurrentOutsideConditions != "-1") {
        $("#CurrentOutsideConditions").val(CurrentOutsideConditions);
    }
    if (typeof (Heat) != "undefined" && Heat != null && Heat != "" && Heat != "-1") {
        $("#Heat").val(Heat);
    }
    if (typeof (Air) != "undefined" && Air != null && Air != "" && Air != "-1") {
        $("#Air").val(Air);
    }
    if (typeof (BasementDehumidifier) != "undefined" && BasementDehumidifier != null && BasementDehumidifier != "" && BasementDehumidifier != "-1") {
        $("#BasementDehumidifier").val(BasementDehumidifier);
    }
    if (typeof (FoundationType) != "undefined" && FoundationType != null && FoundationType != "" && FoundationType != "-1") {
        $("#FoundationType").val(FoundationType);
    }
    if (typeof (BasementGoDown) != "undefined" && BasementGoDown != null && BasementGoDown != "" && BasementGoDown != "-1") {

        $("#GoDownBasement").val(BasementGoDown);
    }
    if (typeof (RemoveWater) != "undefined" && RemoveWater != null && RemoveWater != "" && RemoveWater != "-1") {
        $("#RemoveWater").val(RemoveWater);
    }
    if (typeof (PlansForBasementOnce) != "undefined" && PlansForBasementOnce != null && PlansForBasementOnce != "" && PlansForBasementOnce != "-1") {
        $("#PlansForBasement").val(PlansForBasementOnce);
    }
    if (typeof (LosePower) != "undefined" && LosePower != null && LosePower != "" && LosePower != "-1") {
        $("#LosePower").val(LosePower);
    }
</script>

<div class="inspection_container">

    <div class="inpection_header">
        @Localize.T("Basement Inspection Report")
    </div>
    <div class="inspection_container_inner">

        <div class="inspection_top_info">
            <div class="inspection_top_info_left">
                <div class="inspection_top_info_logo">
                    <img src="@Model.companyLogo" alt="@Model.companyName" />
                </div>
                <div class="ins_company_info">
                    <div> @Model.companyStreet</div>
                    <div> @Model.companyCity, @Model.companyState @Model.companyZipCode</div>
                    <div> @Model.companyEmail</div>
                    <div> Tel:@Model.companyPhone</div>
                    <div> Fax:@Model.companyFax</div>
                </div>
            </div>
            <div class="inspection_top_info_right">
                <div class="insp_full">
                    <div class="form-group insp_date">
                        <label>@Localize.T("Date"):</label>
                        @Html.TextBoxFor(x => x.CreatedDate, "{0:MM/dd/yy}", new { @class = "form-control inspection_date_field", id = "CreatedDate", Disabled = "disabled" })
                    </div>
                </div>
                <div class="insp_full">
                    <div class="form-group insp_cust_info_block">
                        <label>@Localize.T("Customer Info"): </label>

                        <div class="insp_customer_info">
                            <div> @Model.customerFirstName @Model.customerLastName</div>
                            <div> @Model.customerStreet .</div>
                            <div> @Model.customerCity , @Model.customerState @Model.customerZipCode</div>
                            <div> @Model.customerPrimaryPhone, @Model.customerSecondaryPhone</div>
                            <div>  @Model.customerEmail</div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="inspection_block">
            <input type="hidden" id="Id" value="@Model.Id" />
            <input type="hidden" id="CustomerId" value="@Model.CustomerId" />
            <input type="hidden" id="CompanyId" value="@Model.CompanyId" />
            <input type="hidden" id="CusId" value="@Model.CusId" />
            <input type="hidden" id="PMSignatureImagePath" value="@Model.PMSignature" />
            <input type="hidden" id="HomeOwnerSignatureImagePath" value="@Model.HomeOwnerSignature" />
            <input type="hidden" id="DrawingImagePath" value="@Model.Drawing" />
            <input type="hidden" id="CreatedBy" value="@Model.CreatedBy" />
            <input type="hidden" id="CreatedDate" value="@Model.CreatedDate" />
            <div class="inspection_sub_header">
                @Localize.T("Relative Humidity / Temperature Readings")
            </div>
            <div class="inspection_block_inner">
                <div class="inspection_temp_left">
                    <div class="form-group">
                        <label>Current Outside Conditions:*</label>
                        @Html.DropDownListFor(x => x.CurrentOutsideConditions, (List<SelectListItem>)ViewBag.CurrentOutsideConditions, new { @class = "form-control", datarequired = "true", id = "CurrentOutsideConditions" })
                    </div>
                    <div class="form-group">
                        <label>Outside Relative Humidity:*</label>
                        <input class="form-control" id="OutsideRelativeHumidity" value="@Model.OutsideRelativeHumidity" datarequired="true" type="text" />
                    </div>
                    <div class="form-group">
                        <label>Outside Temperature:*</label>
                        <input class="form-control" id="OutsideTemperature" datarequired="true" value="@Model.OutsideTemperature" type="text" />
                    </div>

                    <div class="form-group">
                        <label>1st Floor Relative Humidity:</label>
                        <input class="form-control" id="FirstFloorRelativeHumidity" value="@Model.FirstFloorRelativeHumidity" type="text" placeholder="1st Floor Relative Humidity" />
                    </div>
                    <div class="form-group">
                        <label>1st Floor Temperature:</label>
                        <input class="form-control" id="FirstFloorTemperature" value="@Model.FirstFloorTemperature" type="text" placeholder="1st Floor Temperature" />
                    </div>
                </div>
                <div class="inspection_temp_right">
                    <div class="inspection_inner_sub_header">
                        Current Inside Condition
                    </div>
                    <div class="inspection_temp_right_inner">
                        <div class="form-group">
                            <label>Heat:*</label>
                            @Html.DropDownListFor(x => x.Heat, (List<SelectListItem>)ViewBag.Heat, new { @class = "form-control", datarequired = "true", id = "Heat" })
                        </div>
                        <div class="form-group">
                            <label>Air:*</label>
                            @Html.DropDownListFor(x => x.Air, (List<SelectListItem>)ViewBag.Air, new { @class = "form-control", datarequired = "true", id = "Air" })
                        </div>
                        <div class="form-group">
                            <label>Basement Relative Humidity:</label>
                            <input class="form-control" id="BasementRelativeHumidity" value="@Model.BasementRelativeHumidity" type="text" placeholder="Basement Relative Humidity" />
                        </div>
                        <div class="form-group">
                            <label>Basement Temperature:</label>
                            <input class="form-control" id="BasementTemperature" value="@Model.BasementTemperature" type="text" placeholder="Basement Temperature" />
                        </div>
                        <div class="form-group">
                            <label>Basement Dehumidifier:*</label>
                            @Html.DropDownListFor(x => x.BasementDehumidifier, (List<SelectListItem>)ViewBag.BasementDehumidifier, new { @class = "form-control", datarequired = "true", id = "BasementDehumidifier" })
                        </div>
                    </div>
                </div>
                <div class="form-group ins_other">
                    <label>Other:</label>
                    <input class="form-control" id="RelativeOther1" value="@Model.RelativeOther1" type="text" />
                </div>
                <div class="form-group ins_other">
                    <label>Other:</label>
                    <input class="form-control" id="RelativeOther2" value="@Model.RelativeOther2" type="text" />
                </div>
            </div>
        </div>
        <div class="inspection_block">
            <div class="inspection_sub_header">
                @Localize.T("Visual Basement Inspection")
            </div>
            <div class="visual_inspection_block_inner">
                <div class="form-group">
                    <label>Ground Water:*</label>
                    @Html.DropDownListFor(x => x.GroundWater, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "GroundWater" })
                </div>
                <div class="form-group">
                    <label>Ground Water Rating (1-10):</label>
                    @Html.DropDownListFor(x => x.GroundWaterRating, (List<SelectListItem>)ViewBag.Rating, new { @class = "form-control", id = "GroundWaterRating" })
                </div>
                <div class="form-group">
                    <label>Iron Bacteria:*</label>
                    @Html.DropDownListFor(x => x.IronBacteria, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "IronBacteria" })
                </div>
                <div class="form-group">
                    <label>Iron Bacteria Rating (1-10):</label>
                    @Html.DropDownListFor(x => x.IronBacteriaRating, (List<SelectListItem>)ViewBag.Rating, new { @class = "form-control", id = "IronBacteriaRating" })
                </div>
                <div class="form-group">
                    <label>Condensation:*</label>
                    @Html.DropDownListFor(x => x.Condensation, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "Condensation" })
                </div>
                <div class="form-group">
                    <label>Condensation Rating (1-10):</label>
                    @Html.DropDownListFor(x => x.CondensationRating, (List<SelectListItem>)ViewBag.Rating, new { @class = "form-control", id = "CondensationRating" })
                </div>
                <div class="form-group">
                    <label>Wall Cracks:*</label>
                    @Html.DropDownListFor(x => x.WallCracks, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "WallCracks" })
                </div>
                <div class="form-group">
                    <label>Wall Cracks Rating (1-10):</label>
                    @Html.DropDownListFor(x => x.WallCracksRating, (List<SelectListItem>)ViewBag.Rating, new { @class = "form-control", id = "WallCracksRating" })
                </div>
                <div class="form-group">
                    <label>Floor Cracks:*</label>
                    @Html.DropDownListFor(x => x.FloorCracks, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "FloorCracks" })
                </div>
                <div class="form-group">
                    <label>Floor Cracks Rating (1-10):</label>
                    @Html.DropDownListFor(x => x.FloorCracksRating, (List<SelectListItem>)ViewBag.Rating, new { @class = "form-control", id = "FloorCracksRating" })
                </div>
                <div class="form-group">
                    <label>Existing Sump Pump:*</label>
                    @Html.DropDownListFor(x => x.ExistingSumpPump, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "ExistingSumpPump" })
                </div>
                <div class="form-group">
                    <label>Existing Drainage System:*</label>
                    @Html.DropDownListFor(x => x.ExistingDrainageSystem, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "ExistingDrainageSystem" })
                </div>
                <div class="form-group">
                    <label>Radon System(existing):*</label>
                    @Html.DropDownListFor(x => x.ExistingRadonSystem, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "ExistingRadonSystem" })
                </div>
                <div class="form-group">
                    <label>Dryer vent to code?:*</label>
                    @Html.DropDownListFor(x => x.DryerVentToCode, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "DryerVentCode" })
                </div>
                <div class="form-group">
                    <label>Foundation Type:*</label>
                    @Html.DropDownListFor(x => x.FoundationType, (List<SelectListItem>)ViewBag.FoundationType, new { @class = "form-control", datarequired = "true", id = "FoundationType" })
                </div>
                <div class="form-group">
                    <label>Bulkhead:*</label>
                    @Html.DropDownListFor(x => x.Bulkhead, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "Bulkhead" })
                </div>
                <div class="form-group visual_other">
                    <label>Other:</label>
                    <input class="form-control" id="VisualBasementOther" value="@Model.VisualBasementOther" type="text" />
                </div>

            </div>
        </div>
        <div class="inspection_block">
            <div class="inspection_sub_header">
                @Localize.T("Customer Basement Evaluation")
            </div>
            <div class="base_eval_block_inner">
                <div class="base_eval_info">
                    <label>1. Have you ever noticed smells/odors coming from the basement?*</label>
                    @Html.DropDownListFor(x => x.NoticedSmellsOrOdors, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "NoticedSmellsOrOdors" })
                    <input class="form-control" id="NoticedSmellsOrOdorsComment" type="text" value="@Model.NoticedSmellsOrOdorsComment" />
                </div>
                <div class="base_eval_info">
                    <label>2. Have you ever noticed mold/mildew on any item in the basement?*</label>
                    @Html.DropDownListFor(x => x.NoticedMoldOrMildew, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "NoticedMoldOrMildew" })
                    <input class="form-control" id="NoticedMoldOrMildewComment" type="text" value="@Model.NoticedMoldOrMildewComment" />
                </div>
                <div class="base_eval_info base_eval_full">
                    <label>3. How often do you go down in the basement?*</label>
                    @Html.DropDownListFor(x => x.BasementGoDown, (List<SelectListItem>)ViewBag.GoDownBasement, new { @class = "form-control", datarequired = "true", id = "GoDownBasement" })
                </div>
                <div class="base_eval_info">
                    <label>4. Does anyone in the home suffer from respiratory problems?*</label>
                    @Html.DropDownListFor(x => x.HomeSufferForRespiratory, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "HomeSufferForRespiratoryProblems" })
                    <input class="form-control" id="HomeSufferForRespiratoryProblemsComment" type="text" value="@Model.HomeSufferForrespiratoryComment" />
                </div>
                <div class="base_eval_info">
                    <label>5. Do your children play in the basement?*</label>
                    @Html.DropDownListFor(x => x.ChildrenPlayInBasement, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "ChildrenPlay" })
                    <input class="form-control" id="ChildrenPlayComment" type="text" value="@Model.ChildrenPlayInBasementComment" />
                </div>
                <div class="base_eval_info">
                    <label>6. Do you have pets that go in the basement?*</label>
                    @Html.DropDownListFor(x => x.PetsGoInBasement, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "PetsGoInBasement" })
                    <input class="form-control" id="PetsGoInBasementComment" type="text" value="@Model.PetsGoInBasementComment" />
                </div>
                <div class="base_eval_info">
                    <label>7. Have you ever noticed bugs/rodents in the basement?*</label>
                    @Html.DropDownListFor(x => x.NoticedBugsOrRodents, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "NoticedBugsOrRodents" })
                    <input class="form-control" id="NoticedBugsOrRodentsComment" type="text" value="@Model.NoticedBugsOrRodentsComment" />
                </div>
                <div class="base_eval_info">
                    <label>8. Do you get water?* How high does the water level get?</label>
                    @Html.DropDownListFor(x => x.GetWater, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "GetWater" })
                    <input class="form-control" id="GetWaterComment" type="text" value="@Model.GetWaterComment" />
                </div>
                <div class="base_eval_info base_eval_full">
                    <label>9. How do you normally remove the water from basement?</label>
                    @Html.DropDownListFor(x => x.RemoveWater, (List<SelectListItem>)ViewBag.RemoveWater, new { @class = "form-control", id = "RemoveWater" })
                </div>
                <div class="base_eval_info">
                    <label>10. Do you ever see pipes dripping (condensation)?*</label>
                    @Html.DropDownListFor(x => x.SeeCondensationPipesDripping, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "SeePipesDripping" })
                    <input class="form-control" id="SeePipesDrippingComment" type="text" value="@Model.SeeCondensationPipesDrippingComment" />
                </div>
                <div class="base_eval_info">
                    <label>11. Have you done any repairs to try and fix these problems?*</label>
                    @Html.DropDownListFor(x => x.RepairsProblems, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "RepairsTryAndFix" })
                    <input class="form-control" id="RepairsTryAndFixComment" type="text" value="@Model.RepairsProblemsComment" />
                </div>
                <div class="base_eval_info base_eval_half">
                    <label>12. How long do you plan on living here?* Are you planning to sell*</label>
                    @Html.DropDownListFor(x => x.LivingPlan, (List<SelectListItem>)ViewBag.Rating, new { @class = "form-control", datarequired = "true", id = "LivingPlan" })

                    @Html.DropDownListFor(x => x.SellPlaning, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "PlaningSell" })
                </div>
                <div class="base_eval_info base_eval_full">
                    <label>13. What are your plans for the basement once it is dry?</label>
                    @Html.DropDownListFor(x => x.PlansForBasementOnce, (List<SelectListItem>)ViewBag.BasementPlans, new { @class = "form-control", id = "PlansForBasement" })
                </div>
                <div class="base_eval_info">
                    <label>14. Has your home been tested for radon in the past 2 years?*</label>
                    @Html.DropDownListFor(x => x.HomeTestForPastRadon, (List<SelectListItem>)ViewBag.YesNo, new { @class = "form-control", datarequired = "true", id = "HomeTestedForRadon" })
                    <input class="form-control" id="HomeTestedForRadonComment" type="text" value="@Model.HomeTestForPastRadonComment" />
                </div>
                <div class="base_eval_info base_eval_half">
                    <label>15. Do you lose power?* If so how often?*</label>
                    @Html.DropDownListFor(x => x.LosePower, (List<SelectListItem>)ViewBag.LosePower, new { @class = "form-control", datarequired = "true", id = "LosePower" })

                    @Html.DropDownListFor(x => x.LosePowerHowOften, (List<SelectListItem>)ViewBag.LosePower, new { @class = "form-control", datarequired = "true", id = "LosePowerHowOften" })
                </div>
                <div class="base_eval_others">
                    <label>16. Other:</label>
                    <input class="form-control" id="CustomerBasementOther" type="text" value="@Model.CustomerBasementOther" />
                </div>
                <div class="base_eval_text_block">
                    Free basement inspection report identifies conditions that may create a health hazard and/or suggest foundation problems. For further evaluation, contact us about a certified inspection and consultation.
                </div>
            </div>
        </div>
        <div class="inspection_block">
            <div class="inspection_sub_header">
                @Localize.T("Basement Drawing")
            </div>
            <div class="base_draw_block_inner">
                <div class="form-group ins_draw_block_half_center">
                    @if (Model.Drawing != null)
                    {
                        <img src="@Model.Drawing" />
                    }
                    <div class="sign-document">
                        <div class="wrapper">
                            <canvas id="drawing-pad" class="drawing-pad form-control" style="width:300px;height:195px;"></canvas>
                        </div>
                        <button class="btn all_button" title="Clear" id="clear-dr"><i class="fa fa-trash-o" aria-hidden="true"></i></button>
                    </div>
                </div>
            </div>
        </div>
        <div class="inspection_block">
            <div class="ins_footer_block_inner">
                <div class="form-group">
                    <label>Notes:</label>
                    <textarea class="form-control" id="Notes">@Model.Notes</textarea>
                </div>

                <div class="form-group ins_footer_block_half_left">
                    @if (Model.PMSignature != null)
                    {
                        <img src="@Model.PMSignature" />
                    }
                    <label>PM Signature</label>
                    <div class="sign-document">
                        <div class="wrapper">
                            <canvas id="signature-pad-pm" class="signature-pad-pm form-control"></canvas>
                        </div>
                        <button class="btn all_button" title="Clear" id="clear-pm"><i class="fa fa-trash-o" aria-hidden="true"></i></button>
                    </div>
                    <label>Date</label>
                    @Html.TextBoxFor(x => x.PMSignatureDate, "{0:MM/dd/yy}", new { @class = "form-control", id = "PMSignatureDate" })
                </div>
                <div class="form-group ins_footer_block_half_right">
                    @if (Model.HomeOwnerSignature != null)
                    {
                        <img src="@Model.HomeOwnerSignature" />
                    }
                    <label>Homeowner's Signature</label>
                    <div class="sign-document">
                        <div class="wrapper">
                            <canvas id="signature-pad-homeowner" class="signature-pad-homeowner form-control"></canvas>
                        </div>
                        <button class="btn all_button" title="Clear" id="clear-homeowner"><i class="fa fa-trash-o" aria-hidden="true"></i></button>
                    </div>
                    <label>Date</label>
                    @Html.TextBoxFor(x => x.HomeOwnerSignatureDate, "{0:MM/dd/yy}", new { @class = "form-control", id = "HomeOwnerSignatureDate" })
                </div>
            </div>
        </div>
    </div>
    <div class="inpection_footer">
        <button class="btn" id="SaveInspection">
            @Localize.T("Save")
        </button>
    </div>

</div>
