@{
    Layout = null;
}
@using HS.Framework;
@model HS.Entities.Custom.EContractModel
<script>
    var EcontractId = '@Model.EcontractId';
        var DefaultDate = '@DateTime.Now.ToString("MM/dd/yyyy")';
        var DefaultPayEffectiveDate = '@DateTime.Now.AddMonths(1).ToString("MM/dd/yyyy")';
        var CalculateDate = function () {
            var PromoMonth = $("#Promomonth").val();
            var PrepaidMonth = $("#Prepaidmonth").val();
            var TotalMonth = parseInt(PromoMonth) + parseInt(PrepaidMonth);
            //var DateTime = new Date(DefaultDate);
            //var CalculatedDate = DateTime.addMonth(TotalMonth);
            //var DateString = CalculatedDate.getMonth()+1 + "/" + CalculatedDate.getDate() + "/" + CalculatedDate.getFullYear();
            //$("#StartDate").val(DateString);
            //$("#FinishDate").val(DateString);
            DateTime = new Date(DefaultPayEffectiveDate);
            var PayDate = DateTime.addMonth(TotalMonth);
            var PayDateString = PayDate.getMonth() + "/" + PayDate.getDate() + "/" + PayDate.getFullYear();
            $("#PaymentDate").val(PayDateString);
        }
    var SendEcontractSurvey = function () {
        if (EcontractId != '') {
            OpenConfirmationMessageNew("", "A contract is already sent for this customer.Do you want to send again?", function () {
                OpenTopToBottomModal("/API/SendEcontractWithSurvey?CustomerId=" + CustomerLoadGuid + "&from=customer");
            });
        }
        else {
             OpenTopToBottomModal("/API/SendEcontractWithSurvey?CustomerId=" + CustomerLoadGuid + "&from=customer");
        }

        }


    $(document).ready(function () {

        PaymentDatepicker = new Pikaday({
        format: 'MM/DD/YYYY',
        field: $('#PaymentDate')[0],
        trigger: $('#PaymentDateCustom')[0],
        firstDay: 1

    });
    InstallStartDatepicker = new Pikaday({
        format: 'MM/DD/YYYY',
        field: $('#StartDate')[0],
        trigger: $('#InstallStartDateCustom')[0],
        firstDay: 1,
        StartDate: new Date()
    });
    InstallFinishDatepicker = new Pikaday({
        format: 'MM/DD/YYYY',
        field: $('#FinishDate')[0],
        trigger: $('#InstallFinishDateCustom')[0],
        firstDay: 1,
        StartDate: new Date()
    });


    })
        $(document).ready(function () {

            //$("#StartDate").val(DefaultDate);
            //$("#FinishDate").val(DefaultDate);
            //$("#PaymentDate").val(DefaultPayEffectiveDate);
            $("#Promomonth").change(function () {
                CalculateDate();
            })
            $("#Prepaidmonth").change(function () {
                CalculateDate();
            })
        })
</script>
@using Localize = HS.Web.UI.Helper.LanguageHelper
<div class="additional_cont_inner_info">
    <div class="form-group clearfix item_margin">
        <span class="reminder-form">@Localize.T("Promotion Month")</span>
        <div class="input_group_for_date add-on">
            <input type="number" value="@Model.PromotionMonth" class="form-control" id="Promomonth" />
        </div>
    </div>

    <div class="form-group clearfix item_margin">
        <span class="reminder-form">@Localize.T("Prepaid Month")</span>
        <div class="input_group_for_date add-on">
            <input type="number" value="@Model.PrepaidMonth" class="form-control" id="Prepaidmonth" />
        </div>
    </div>


    <div class="form-group clearfix item_margin">
        <span class="reminder-form">@Localize.T("Activition Fee")</span>
        <div class="input_group_for_date add-on">
            <input type="number" value="@Model.ActivationFee" class="form-control" id="activitionfee" />
        </div>
    </div>

    <div class="form-group clearfix item_margin">
        <span class="reminder-form">@Localize.T("Installation Start Date")</span>
        <div class="input_group_for_date add-on" id="InstallStartDateCustom">
            @Html.TextBoxFor(x => Model.InstallStartDate, "", new { @class = "form-control close-datepicker", Placeholder = "Date", id = "StartDate" })
            <div class="input-group-btn">
                <btn class="btn">
                    <i class="fa fa-calendar" aria-hidden="true" style="cursor:pointer;"></i>
                </btn>
            </div>
        </div>
    </div>
    <div class="form-group clearfix item_margin">
        <span class="reminder-form">@Localize.T("Installation Finish Date")</span>
        <div class="input_group_for_date add-on" id="InstallFinishDateCustom">
            @Html.TextBoxFor(x => Model.InstallFinishDate, "", new { @class = "form-control close-datepicker", Placeholder = "Date", id = "FinishDate" })
            <div class="input-group-btn">
                <btn class="btn">
                    <i class="fa fa-calendar" aria-hidden="true" style="cursor:pointer;"></i>
                </btn>
            </div>
        </div>
    </div>

    <div class="form-group clearfix item_margin">
        <span class="reminder-form">@Localize.T("Payment Effective Date")</span>
        <div class="input_group_for_date add-on" id="PaymentDateCustom">
            @Html.TextBoxFor(x => Model.PaymentEffectiveDate, "", new { @class = "form-control close-datepicker", Placeholder = "Date", id = "PaymentDate" })
            <div class="input-group-btn">
                <btn class="btn">
                    <i class="fa fa-calendar" aria-hidden="true" style="cursor:pointer;"></i>
                </btn>
            </div>
        </div>
    </div>


</div>
@if (!string.IsNullOrEmpty(Model.EcontractId))
{
    <label>Econtract Id : </label>
    <span>@Model.EcontractId</span>
}

<button onclick="SendEcontractSurvey()" type="button" class="btn green_button" id="btnsendEcontract">
    <span>@Localize.T("Send Econtract")</span>
</button>