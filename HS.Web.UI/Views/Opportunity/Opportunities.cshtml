@{
    Layout = null;
}
@using AppConfig = HS.Framework.Utils.AppConfig;
<script src="~/Content/Js/Opportunity/Opportunity.js"></script>
<link href="~/Content/Css/Opportunity/Opportunities.css" rel="stylesheet" />
@using Localize = HS.Web.UI.Helper.LanguageHelper
<script>
    var opportunityAdd = '@ViewBag.opportunityAdd';
    var addId = '@ViewBag.ADDid';
    var my_date_format = function (input) {
        var d = new Date(Date.parse(input.replace(/-/g, "/")));
        var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        var date = d.getDate() + " " + month[d.getMonth()] + ", " + d.getFullYear();

        return (date);
    };
    var OpportunityImportFile = function () {
        OpenRightToLeftModal("@(AppConfig.DomainSitePath)/File/AddOpportunityImportFile");
    }
    var openAddopportunity = function () {
        OpenTopToBottomModal("/Opportunity/AddOpportunity?id=" + addId);

    }
    $(document).ready(function () {
        var pagenumber = 1;
        if (opportunityAdd == "True")
        {
            openAddopportunity();
        }
        $(".opportunity_filter_list").hide();
        if (window.innerWidth < 421) {
            $(".opportunities_fixed_header").width(window.innerWidth - 30);
        }
        else {
            $(".opportunities_fixed_header").width(window.innerWidth - $(".sidebar").width() - 49);
        };

        $("#DatabaseImport").click(function () {
            window.location.href = "/Reports/NewReport/?ReportFor=OpportunityDatabase";
        })

        $(".btn_customerlist_filter").click(function () {
            if ($(".opportunity_filter_list").is(":visible")) {
                $(".opportunity_filter_list").hide();

            } else {
                $(".opportunity_filter_list").show();

            }
        });
        $("#ExcelImport").click(function ()
        {
            window.location.href = domainurl + "/Reports/NewReport/?ReportFor=Opportunity";
        })
        $("#opportunity_search").keyup(function (e) {
            e.preventDefault();
            if (e.keyCode == 13) {
                if (typeof (pagenumber) == "undefined") {
                    return;
                }
                var Type = $("#OpportunityType").val();
                var status = $("#OpportunityStatus").val();
                var OpportunityProbability = $("#OpportunityProbability").val();
                var OpportunityDealReason = $("#OpportunityDealReason").val();
                var OpportunityYesNo = $("#OpportunityYesNo").val();

                var OpportunityDeliveryDays = $("#OpportunityDeliveryDays").val();
                var OpportunityCampaignSource = $("#OpportunityCampaignSource").val();
                var AccountOwner = $("#EmployeeList").val();
                var RevenueFrom = $(".RevenueFrom").val();
                var RevenueTo = $(".RevenueTo").val();
                var ProjectedGpFrom = $(".ProjectedGpFrom").val();
                var ProjectedGpTo = $(".ProjectedGpTo").val();
                var PointFrom = $(".PointFrom").val();
                var PointTo = $(".PointTo").val();
                var searchText = $(".srch-term").val();
                var DateFrom = $(".min-date").val();
                var DateTo = $(".max-date").val();
                $('.ListContents').load(domainurl + "/Opportunity/LoadOpportunityList/?Type=" + Type
                  + "&status=" + status
                  + "&OpportunityProbability=" + OpportunityProbability
                  + "&OpportunityDealReason=" + OpportunityDealReason
                  + "&OpportunityYesNo=" + OpportunityYesNo
                  + "&OpportunityCampaignSource=" + OpportunityCampaignSource
                  + "&OpportunityDeliveryDays=" + OpportunityDeliveryDays
                  + "&AccountOwner=" + AccountOwner
                  + "&RevenueFrom=" + RevenueFrom
                  + "&RevenueTo=" + RevenueTo
                  + "&ProjectedGpFrom=" + ProjectedGpFrom
                  + "&ProjectedGpTo=" + ProjectedGpTo
                  + "&PointFrom=" + PointFrom
                  + "&PointTo=" + PointTo
                  + "&SearchText=" + searchText
                + "&CreatedDateFrom=" + DateFrom
                + "&CreatedDateTo=" + DateTo
                 );
            }
        })
    });
    $(window).resize(function () {
        if (window.innerWidth < 421) {
            $(".opportunities_fixed_header").width(window.innerWidth - 30);
        }
        else {
            $(".opportunities_fixed_header").width(window.innerWidth - $(".sidebar").width() - 29);
        };
    })
</script>
<div class="container-fluid opportunities_container">
    <div class="opportunities_fixed_header">
        <div class="main_header"><h2>@Localize.T("Opportunities")</h2></div>
       
            <div class="btn-group opportunities_right_allign">
                <button class="btn" id="AddNewOpportunity" type="button" title="@Localize.T("Add opportunity")">
                    <i class="fa fa-plus-circle" aria-hidden="true"></i>@Localize.T(" New")
                </button>
                <button data-toggle="dropdown" class="btn dropdown-toggle customer-btn-dropdown" type="button" aria-expanded="false" title="@Localize.T("Import Opportunity")">
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu customer-dropdown-ul-style opportunities_import_drop">
                    <li><a href="javascript:void(0)" onclick="OpportunityImportFile()">@Localize.T("Import Opportunity")</a></li>
                </ul>
            </div>
            
            <div class="dateviewed">
                @{Html.RenderAction("DateViewPartial", "Customer");}
            </div>
       
    </div>
    <div class="opportunities_container_iiner">
            <div id="searchbardiv">
               
                <div class="input-group add-on">
                    <input class="form-control srch-term" placeholder="Find Opportunity" type="text" id="opportunity_search">

                    <div class="input-group-btn"><button class="btn btn-default custom-btn SearchOpportunity green_button" type="submit" title="@Localize.T("Search")"><i class="glyphicon glyphicon-search"></i></button></div>
                </div>
              
                <button title="Filter" class="btn btn-filter btn_customerlist_filter">
                    <span class="glyphicon glyphicon-filter"></span>
                </button>
                <div class="dropdown opportunities_export">
                    <button class="btn addView_button dropdown-toggle" data-toggle="dropdown" title="@Localize.T("Download")"><i class="glyphicon glyphicon-download-alt"></i></button>

                    <ul class="dropdown-menu ImportPanel">
                        <li>
                            <button class="btn" id="DatabaseImport"><i class="fa fa-file-excel-o"></i> @Localize.T("All Database Record")</button>
                        </li>
                        <li>
                            <button class="btn" id="ExcelImport"><i class="fa fa-file-excel-o"></i> @Localize.T("Excel")</button>
                        </li>
                        <li>
                            <button class="btn" onclick="PrintOpportunity()"><i class="fa fa-file-pdf-o"></i> @Localize.T("Pdf") </button>
                        </li>

                    </ul>
                </div>
            </div>
            <div class="opportunity_filter_list customer-fliter-list_Toggle">
                <div class="filter-by-type box_category">
                    @*<span>@Localize.T("Sales")</span>*@
                    @*@Html.DropDownList("UserList", (List<SelectListItem>)ViewBag.LeadUserList, new { @class = "form-control select_leaduser UserList", id = "UserList" })*@
                    @Html.DropDownList("OpportunityType", (List<SelectListItem>)ViewBag.OpportunityType, new { @class = "form-control  opportunitytype", id = "OpportunityType" })
                </div>
                <div class="filter-by-status box_category ">
                    @*<span>@Localize.T("Sales")</span>*@
                    @Html.DropDownList("OpportunityStatus", (List<SelectListItem>)ViewBag.OpportunityStatus, new { @class = "form-control  UserList", id = "OpportunityStatus" })
                </div>
                <div class="filter-by-equipmentClass box_category">
                    @*<span>@Localize.T("Payment Method")</span>*@
                    @Html.DropDownList("OpportunityProbability", (List<SelectListItem>)ViewBag.OpportunityProbability, new { @class = "form-control  PaymentMethodLsit", id = "OpportunityProbability" })
                </div>
                @*<div class="filter-by-equipmentClass sub-list">
                        <span>@Localize.T("Lead Source")</span
                        @Html.DropDownList("SourceList", (List<SelectListItem>)ViewBag.LeadSourceList, new { @class = "form-control select_leadsource SourceList", id = "SourceList" })
                    </div>*@
                @*<div class="filter-by-equipmentClass sub-list">
                        <input type="text" id="SalesDateFilter" class="form-control date-range-filter SalesDate" data-date-format="yyyy-mm-dd" placeholder="Sales Date">
                    </div>
                    <div class="filter-by-equipmentClass sub-list">
                        <input type="text" id="InstallationDate" class="form-control date-range-filter InstallationDate" data-date-format="yyyy-mm-dd" placeholder="Installation Date">
                    </div>*@
                <div class="filter-by-equipmentClass box_category">
                    @Html.DropDownList("OpportunityDealReason", (List<SelectListItem>)ViewBag.OpportunityDealReason, new { @class = "form-control  OpportunityDealReason", id = "OpportunityDealReason" })
                </div>
              
                    
                 
                <div class="filter-by-equipmentClass box_category">
                    @Html.DropDownList("OpportunityYesNo", (List<SelectListItem>)ViewBag.OpportunityYesNo, new { @class = "form-control OpportunityYesNo", id = "OpportunityYesNo" })
                </div>
                <div class="filter-by-equipmentClass box_category">
                    @Html.DropDownList("OpportunityDeliveryDays", (List<SelectListItem>)ViewBag.OpportunityDeliveryDays, new { @class = "form-control OpportunityDeliveryDays", id = "OpportunityDeliveryDays" })
                </div>
                <div class="filter-by-equipmentClass box_category">
                    @Html.DropDownList("OpportunityCampaignSource", (List<SelectListItem>)ViewBag.OpportunityCampaignSource, new { @class = "form-control OpportunityCampaignSource", id = "OpportunityCampaignSource" })
                </div>
                <div class="filter-by-equipmentClass box_category">
                    @Html.DropDownList("EmployeeList", (List<SelectListItem>)ViewBag.EmployeeList, new { @class = "form-control EmployeeList", id = "EmployeeList" })
                </div>
             
                
                <div class="input-group group_category">
                    <input type="number" class="form-control RevenueFrom" placeholder="Revenue From:">
                <div class="middle_box_category">to</div>
                    <input type="number" class="form-control RevenueTo" placeholder="Revenue To:">
                </div>
                <div class="input-group group_category">
                    <input type="number" class="form-control ProjectedGpFrom" placeholder="ProjectedGP From:">
               <div class="middle_box_category">to</div>
                    <input type="number" class="form-control ProjectedGpTo" placeholder="ProjectedGP To:">
                </div>
                <div class="input-group group_category opportunity_manual_padding">
                    <input type="number" class="form-control PointFrom" placeholder="Point From:">
                <div class="middle_box_category">to</div>
                    <input type="number" class="form-control PointTo" placeholder="Point To:">
                </div>

                <div class="btn_category">
                    <button class="btn btn-apply-filter">
                        <i class="fa fa-check" aria-hidden="true"></i> @Localize.T("Apply")
                    </button>
                    <button class="btn btn-reset-filter">
                        <i class="fa fa-refresh" aria-hidden="true"></i>
                    </button>
                </div>
                @*<div class="sub-list-btn">

                    </div>*@
            </div>
        
        <div class="ListContents">

        </div>
    </div>
</div>

