@using Localize = HS.Web.UI.Helper.LanguageHelper
@model HS.Entities.Custom.UccResultList
<script src="~/Content/Js/CityStateZipAutoFill.js"></script>
<link href="~/Content/Css/CityStateZipAutoFill.css" rel="stylesheet" />
<link href="~/Content/Css/API/AddAlarmCustomer.css" rel="stylesheet" />
<link href="~/Content/Bootstrap/MultipleSelect/bootstrap-select.css" rel="stylesheet" />
<script src="~/Content/Select2/Select2.min.js"></script>
<script src="~/Content/Bootstrap/MultipleSelect/bootstrap-select.js"></script>
<script>

    var UccDispatchType = '@Html.Raw(Json.Encode(@ViewBag.typedispatch))';
    var UccDeviceType = '@Html.Raw(Json.Encode(@ViewBag.typedevice))';
    var UccZoneList = '@Html.Raw(Json.Encode(@ViewBag.ZoneList))';
    var Platform = "'UCC'";
    var UccAgencyList = '@Html.Raw(Json.Encode(@ViewBag.AgencyList))';
    var ReceiverNumber = '@Model.ReceiverPhone';
    var PreferedReceiver = '@ViewBag.PreferedReceiver';
    UccDispatchType = JSON.parse(UccDispatchType);
    UccDeviceType = JSON.parse(UccDeviceType);
    UccZoneList = JSON.parse(UccZoneList);
    UccAgencyList = JSON.parse(UccAgencyList);
    var CustomerId = '@ViewBag.CustomerId';


    function FormatePhoneNumber1(Value) {
        var ValueClean = "";
        if (Value != undefined && Value != "" && Value != null) {
            Value = Value.replace(/[-()  ]/g, '');
            if (Value.length == 10) {
                ValueClean = Value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, "$1-$2-$3");
                $("#Phone1").css({ "border": "1px solid #babec5" });
       
            }
            else if (Value.length > 10) {
                ValueClean = Value;
                $("#Phone1").css({ "border": "1px solid red" });
             
            }
            else {
                $("#Phone1").css({ "border": "1px solid red" });
        
                ValueClean = Value;
            }
        }
        return ValueClean;
    }
    function FormatePanelPhoneNumber1(Value) {
        var ValueClean = "";
        if (Value != undefined && Value != "" && Value != null) {
            Value = Value.replace(/[-()  ]/g, '');
            if (Value.length == 10) {
                ValueClean = Value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, "$1-$2-$3");
      
                $("#panelphone").css({ "border": "1px solid #babec5" });
            }
            else if (Value.length > 10) {
                ValueClean = Value;
         
                $("#panelphone").css({ "border": "1px solid red" });
            }
            else {
               
                $("#panelphone").css({ "border": "1px solid red" });
                ValueClean = Value;
            }
        }
        return ValueClean;
    }
    //   function FormateReceiverPhoneNumber1(Value) {
    //    var ValueClean = "";
    //    if (Value != undefined && Value != "" && Value != null) {
    //        Value = Value.replace(/[-  ]/g, '');
    //        if (Value.length == 10) {
    //            ValueClean = Value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, "$1-$2-$3");
      
    //            $("#receiverphone").css({ "border": "1px solid #babec5" });
    //        }
    //        else if (Value.length > 10) {
    //            ValueClean = Value;
         
    //            $("#receiverphone").css({ "border": "1px solid red" });
    //        }
    //        else {
               
    //            $("#receiverphone").css({ "border": "1px solid red" });
    //            ValueClean = Value;
    //        }
    //    }
    //    return ValueClean;
    //}
    function FormatePhoneNumber2(Value) {
        var ValueClean = "";
        if (Value != undefined && Value != "" && Value != null) {
            Value = Value.replace(/[-()  ]/g, '');
            if (Value.length == 10) {
                ValueClean = Value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, "$1-$2-$3");
                $("#Phone2").css({ "border": "1px solid #babec5" });
            }
            else if (Value.length > 10) {
                ValueClean = Value;
                $("#Phone2").css({ "border": "1px solid red" });
            }
            else {
                $("#Phone2").css({ "border": "1px solid red" });
                ValueClean = Value;
            }
        }
        return ValueClean;
    }
    function FormatePhoneNumber3(Value) {
        var ValueClean = "";
        if (Value != undefined && Value != "" && Value != null) {
            Value = Value.replace(/[-()  ]/g, '');
            if (Value.length == 10) {
                ValueClean = Value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, "$1-$2-$3");
                $("#Phone3").css({ "border": "1px solid #babec5" });
            }
            else if (Value.length > 10) {
                ValueClean = Value;
                $("#Phone3").css({ "border": "1px solid red" });
            }
            else {
                $("#Phone3").css({ "border": "1px solid red" });
                ValueClean = Value;
            }
        }
        return ValueClean;
    }
    function FormatePhoneNumber4(Value) {
        var ValueClean = "";
        if (Value != undefined && Value != "" && Value != null) {
            Value = Value.replace(/[-()  ]/g, '');
            if (Value.length == 10) {
                ValueClean = Value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, "$1-$2-$3");
                $("#Phone4").css({ "border": "1px solid #babec5" });
            }
            else if (Value.length > 10) {
                ValueClean = Value;
                $("#Phone4").css({ "border": "1px solid red" });
            }
            else {
                $("#Phone4").css({ "border": "1px solid red" });
                ValueClean = Value;
            }
        }
        return ValueClean;
    }
    function FormatePhoneNumber5(Value) {
        var ValueClean = "";
        if (Value != undefined && Value != "" && Value != null) {
            Value = Value.replace(/[-()  ]/g, '');
            if (Value.length == 10) {
                ValueClean = Value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, "$1-$2-$3");
                $("#Phone5").css({ "border": "1px solid #babec5" });
            }
            else if (Value.length > 10) {
                ValueClean = Value;
                $("#Phone5").css({ "border": "1px solid red" });
            }
            else {
                $("#Phone5").css({ "border": "1px solid red" });
                ValueClean = Value;
            }
        }
        return ValueClean;
    }

    var SubscribeToUCC = function () {
        var selectedEvents = [];
        $('#Events_To_Forward input:checked').each(function () {
            selectedEvents.push($(this).attr('name'));
        });

        UccEmergencyContact = {
            FirstName1: $("#FirstName1").val(),
            LastName1: $("#LastName1").val(),
            Phone1: $("#Phone1").val(),
            PhoneType1: $("#PhoneType1").val(),

            FirstName2: $("#FirstName2").val(),
            LastName2: $("#LastName2").val(),
            Phone2: $("#Phone2").val(),
            PhoneType2: $("#PhoneType2").val(),

            FirstName3: $("#FirstName3").val(),
            LastName3: $("#LastName3").val(),
            Phone3: $("#Phone3").val(),
            PhoneType3: $("#PhoneType3").val(),

            FirstName4: $("#FirstName4").val(),
            LastName4: $("#LastName4").val(),
            Phone4: $("#Phone4").val(),
            PhoneType4: $("#PhoneType4").val(),
        };



        Agencies = {
            AgencyNumber1: $(".agencyNumber1").val(),
            AgencyType1: $("#agencyType1").val(),
            AgencyName1: $(".agencyName1").val(),
            AgencyPhone1: $(".agencyPhone1").val(),

            AgencyNumber2: $(".agencyNumber2").val(),
            AgencyType2: $("#agencyType2").val(),
            AgencyName2: $(".agencyName2").val(),
            AgencyPhone2: $(".agencyPhone2").val(),

            AgencyNumber3: $(".agencyNumber3").val(),
            AgencyType3: $("#agencyType3").val(),
            AgencyName3: $(".agencyName3").val(),
            AgencyPhone3: $(".agencyPhone3").val(),

            AgencyNumber4: $(".agencyNumber4").val(),
            AgencyType4: $("#agencyType4").val(),
            AgencyName4: $(".agencyName4").val(),
            AgencyPhone4: $(".agencyPhone4").val(),

            AgencyNumber5: $(".agencyNumber5").val(),
            AgencyType5: $("#agencyType5").val(),
            AgencyName5: $(".agencyName5").val(),
            AgencyPhone5: $(".agencyPhone5").val(),


        };
        var url = "/API/AddUCCCustomer/";
        var param = {
            CustomerId: '@ViewBag.CustomerId',
            "SiteName": $("#SiteName").val(),
            "SiteAddress": $("#SiteAddress").val(),
            "City": $("#City").val(),
            "State": $("#State").val(),
            "ZipCode": $("#ZipCode").val(),
            "County": $("#County").val(),
            "CodeWord": $("#AbortCode").val(),
            "ReceiverPhone": $("#receiverphone").val(),
            "PanelPhone":$("#panelphone").val(),
            "TransmitterCode": $("#TransmitterCode").val(),
            "DispatchTypesList": $("#UccDispatchType").val(),
            "DeviceTypeList": $("#UccDeviceType").val(),
            UccemgContact: UccEmergencyContact,


            UccAgencies: Agencies,
            UccAgencyList: UccAgencyList
        };
        console.log(param);
        $(".LoaderWorkingDiv").show();
        $.ajax({
            type: "POST",
            ajaxStart: $(".loader-div").show(),
            url: url,
            data: JSON.stringify(param),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                $(".LoaderWorkingDiv").hide();
                if (typeof (data) != 'undefined') {
                    if (data) {
                        if (data.result) {
                            OpenSuccessMessageNew("Success!", data.message, function () {
                                CloseTopToBottomModal();
                                //OpenThirdPartyApiTab();
                                OpenUccDetails();
                            });
                        } else {
                            OpenErrorMessageNew("Error!", data.message, function () {
                             
                                //OpenThirdPartyApiTab();
                                OpenUccDetails();
                            });
                        }
                    } else {
                        OpenErrorMessageNew("Error!", data.message, function () {

                        });
                    }
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $(".loader-div").hide();
                console.log(errorThrown);
            }
        });
    }
    var UCCZoneValidation = function () {
        if ($("#UccZoneNumber1").val() == "-1" || $("#UccEventCode1").val() == "-1") {
            return false;
        }
        return true;
    }

    $(document).ready(function () {


        $(".LoaderWorkingDiv").hide();
        $(".add_ucc_cust_inner").height(window.innerHeight - 50);
        $("#Zonelist").load("/API/CustomerZoneList?CustomerId="+CustomerId+"&&Platform='UCC'");
        $("#Phone1").keyup(function () {
            var PhoneNumber = $(this).val();
            if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
                var cleanPhoneNumber = FormatePhoneNumber1(PhoneNumber);
                $(this).val(cleanPhoneNumber);
            }
        });
         $("#panelphone").keyup(function () {
            var PhoneNumber = $(this).val();
            if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
                var cleanPhoneNumber = FormatePanelPhoneNumber1(PhoneNumber);
                $(this).val(cleanPhoneNumber);
                console.log(cleanPhoneNumber);
            }
         });

        if (PreferedReceiver != '') {
            $("#receiverphone").val(PreferedReceiver);
        }
        else {
                $("#receiverphone").val("-1");
        }
   
        // $("#receiverphone").keyup(function () {
        //    var PhoneNumber = $(this).val();
        //    if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
        //        var cleanPhoneNumber = FormateReceiverPhoneNumber1(PhoneNumber);
        //        $(this).val(cleanPhoneNumber);
        //        console.log(cleanPhoneNumber);
        //    }
        //});
        $("#Phone2").keyup(function () {
            var PhoneNumber = $(this).val();
            if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
                var cleanPhoneNumber = FormatePhoneNumber2(PhoneNumber);
                $(this).val(cleanPhoneNumber);
            }
        });
        $("#Phone3").keyup(function () {
            var PhoneNumber = $(this).val();
            if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
                var cleanPhoneNumber = FormatePhoneNumber3(PhoneNumber);
                $(this).val(cleanPhoneNumber);
            }
        });
        $("#Phone4").keyup(function () {
            var PhoneNumber = $(this).val();
            if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
                var cleanPhoneNumber = FormatePhoneNumber4(PhoneNumber);
                $(this).val(cleanPhoneNumber);
            }
        });
        $("#Phone5").keyup(function () {
            var PhoneNumber = $(this).val();
            if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
                var cleanPhoneNumber = FormatePhoneNumber5(PhoneNumber);
                $(this).val(cleanPhoneNumber);
            }
        });
        if (ReceiverNumber != '') {
            $("#receiverphone").val(ReceiverNumber);
        }
        else {
            $("#receiverphone").val("-1");
        }
     
        $("#SubscribeToUCC").click(function () {
            SubscribeToUCC();
        });

        $(".emgContactPhone").each(function () {
            var Value = $(this).val();
            Value = FormatePhoneNumber1(Value);;
            $(this).val(Value);
        })

        $("#Zode_Addition").click(function () {

            if ($("#UccZoneNumber1").val() == "-1") {
                $("#errorZoneNumber").removeClass("hidden");
            }
            else {
                $("#errorZoneNumber").addClass("hidden");
            }
            if ($("#UccEventCode1").val() == "-1") {
                $("#errorEventCode").removeClass("hidden");
            }
            else {
                $("#errorEventCode").addClass("hidden");
            }

            var param = {
                "CustomerId": CustomerId,
                "ID": $("#ZoneId").val(),
                "ZoneNumber": $("#UccZoneNumber1").val(),
                "EventCode": $("#UccEventCode1").val(),
                "Location": $("#UccLocation1").val(),
                "Platform": "UCC"

            };
            if (UCCZoneValidation() == true)
            {
                console.log(param);
                $.ajax({
                    type: "POST",
                    ajaxStart: $(".loader-div").show(),
                    url: "/Customer/AddUccZone",
                    data: JSON.stringify(param),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: false,
                    success: function (data) {
                        $(".LoaderWorkingDiv").hide();
                        if (typeof (data) != 'undefined') {
                            $("#Zonelist").load("/API/CustomerZoneList?CustomerId=" + CustomerId + "&&Platform='UCC'");

                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $(".loader-div").hide();
                        console.log(errorThrown);
                    }
                });

            }
            else {

            }

        })
        //$("#UccDispatchType").selectpicker("val", UccDispatchType);
        if (UccDispatchType != null)
        {
            if (UccDispatchType.length != 0) {
                $("#UccDispatchType").selectpicker('val', UccDispatchType);
            }
            else {
                $("#UccDispatchType").selectpicker('val', '');
            }
        }
        else
        {
            $("#UccDispatchType").selectpicker();
        }

        if (UccDeviceType != null)
        {
            if (UccDeviceType.length != 0) {
                $("#UccDeviceType").selectpicker('val', UccDeviceType);
            }
            else {
                $("#UccDeviceType").selectpicker('val', '');
            }
        }
        else
        {
            $("#UccDeviceType").selectpicker();
        }

        //$('.selectpicker').selectpicker();
    });
    $(window).resize(function () {
        $(".add_ucc_cust_inner").height(window.innerHeight - 140);
    })
</script>

@if (!string.IsNullOrEmpty(ViewBag.WorningMessage))
{
    <span>@ViewBag.WorningMessage</span>
}
else
{
    <div class="LoaderWorkingDiv" style="margin-top:0px">
        @*<div class='uil-ring-css' style='transform:scale(1);'>
                <div></div>
            </div>*@

        @*<div><div class='lds-css ng-scope'><div style='margin:auto; z-index:99;' class='lds-double-ring'><div></div><div></div></div></div></div>*@
        <div style='position: fixed;left: 0px;top: 0px;width: 100%;height: 100%;'>
            <div class="lds-css ng-scope">
                <div style="margin:auto; z-index:99;" class="lds-double-ring"><div></div><div></div></div>
            </div>
        </div>

        @*<div>
                <h3>@Localize.T("Please wait")</h3>
                <h4>@Localize.T("We are fetching your data")</h4>
            </div>*@
    </div>
    <div id="alarmdotcom">
        <div class="width-100p create_customer_header_alarm">
            @if (string.IsNullOrEmpty(Model.TransmitterCode))
            {
                <span>@Localize.T("Create Customer")</span>
            }
            else
            {
                <span>@Localize.T("Customer Details")</span>
            }

            <div onclick="CloseTopToBottomModal()" class="close_div_custom">
                <img title="@Localize.T("Close")" class="close_btn_size" src="~/Content/Icons/cross_update.png">
            </div>
        </div>
        <div class="add_ucc_cust_inner">
            <div class="width-100p sub-header">
                @Localize.T("General Information")
            </div>
            <div class="add_ucc_cust_inner_info_top row">
                <div class="form-group clearfix">
                    <span class="add_alarm_customer_content_label">@Localize.T("CS Account Number:")</span>
                    @if (!string.IsNullOrEmpty(Model.TransmitterCode))
                    {
                        <input type="text" value="@Model.TransmitterCode" class="form-control" id="TransmitterCode" name="TransmitterCode" placeholder="CS Account Number" readonly />
                    }
                    else
                    {
                        <input type="text" value="@Model.TransmitterCode" class="form-control" id="TransmitterCode" name="TransmitterCode" placeholder="CS Account Number" />
                    }

                    @*<div class="input-group-btn"> <button class="btn green_button" id="getCode">Get Transmitter Code</button></div>*@

                </div>
                <div class="form-group clearfix">
                    <span class="add_alarm_customer_content_label">@Localize.T("Site Name:")</span>
                    @Html.TextBoxFor(x => x.SiteName, new { @class = "form-control", Placeholder = "Site Name",@readonly="readonly" })
                </div>
            </div>
            <div class="add_ucc_cust_inner_info row">
                <div class="form-group clearfix">
                    <span class="add_alarm_customer_content_label">@Localize.T("Street:")</span>
                    @Html.TextBoxFor(x => x.SiteAddress, new { @class = "form-control", Placeholder = "Street",@readonly="readonly" })
                </div>
                <div class="form-group clearfix">
                    <span class="add_alarm_customer_content_label">@Localize.T("City:")</span>
                    @Html.TextBoxFor(x => x.City, new { @class = "form-control", Placeholder = "City",@readonly="readonly" })
                </div>
                <div class="form-group clearfix">
                    <span class="add_alarm_customer_content_label">@Localize.T("State:")</span>
                    @Html.TextBoxFor(x => x.State, new { @class = "form-control", Placeholder = "State",@readonly="readonly" })
                </div>

                <div class="form-group clearfix CityState_insert_div">
                    <span class="add_alarm_customer_content_label">@Localize.T("Zip Code:")<span class="red">*</span></span>

                    <input type="text" class="" onkeydown="CityStateSearchKeyDown(this,event)" onkeyup="CityStateSearchKeyUp(this,event)" value="@Model.ZipCode" id="ZipCode" placeholder="Zip Code" readonly/>
                    <div class='tt-menu'>
                        <div class='tt-dataset tt-dataset-autocomplete'> </div>
                    </div>
                </div>
                <div class="form-group clearfix">
                    <span class="add_alarm_customer_content_label">@Localize.T("County:")</span>
                    @Html.TextBoxFor(x => x.County, new { @class = "form-control", Placeholder = "County",@readonly="readonly" })
                </div>

                <div class="form-group clearfix">
                    <span class="add_alarm_customer_content_label">@Localize.T("Dispatch Type:")</span>
                    @Html.DropDownList("UccDispatchType", ViewBag.UccDispatchType as List<SelectListItem>, new { @class = "form-control selectpicker", @multiple = "multiple" })

                </div>
                <div class="form-group clearfix">
                    <span class="add_alarm_customer_content_label">@Localize.T("Device Type:")</span>
                    @Html.DropDownList("UccDeviceType", ViewBag.UccDeviceType as List<SelectListItem>, new { @class = "form-control selectpicker", @multiple = "multiple" })

                </div>
                <div class="form-group clearfix">
                    <span class="add_alarm_customer_content_label">@Localize.T("Verbal Password:")</span>
                    @if (Model.Codewords != null && Model.Codewords.Count > 0)
                    {
                        var codeword = Model.Codewords[0].Codeword;
                        <input class="form-control" value="@codeword" type="text" id="AbortCode" name="AbortCode" placeholder="Verbal Password" />

                    }
                    else
                    {
                        <input class="form-control" value="" type="text" id="AbortCode" name="AbortCode" placeholder="Verbal Password" />
                    }

                </div>
                <div class="form-group clearfix">
                    <span class="add_alarm_customer_content_label">@Localize.T("Receiver Phone:")</span>
                    @if (Model.Devices != null && Model.Devices.Count > 0)
                    {
                        @Html.DropDownListFor(x => x.Devices[0].ReceiverPhone, (List<SelectListItem>)ViewBag.CentralStationRecieverNumber, new { @class = "form-control", id = "receiverphone" })

                    }
                    else
                    {
                        @Html.DropDownList("receiverphone", (List<SelectListItem>)ViewBag.CentralStationRecieverNumber, new { @class = "form-control", id = "receiverphone" })
                    }

                </div>

                <div class="form-group clearfix">
                    <span class="add_alarm_customer_content_label">Panel Phone:</span>
                  
                     <input type="text" value="@Model.PanelPhone" id="panelphone" />
                    

                </div>
            </div>
            <div class="width-100p sub-header">
                @Localize.T("Emergency Contacts")
            </div>
            <div class="add_ucc_cust_inner_info row">
                @{
                    string firstname1 = "";
                    string firstname2 = "";
                    string firstname3 = "";
                    string firstname4 = "";
                    string lastname1 = "";
                    string lastname2 = "";
                    string lastname3 = "";
                    string lastname4 = "";
                    string Phone1 = "";
                    string Phone2 = "";
                    string Phone3 = "";
                    string Phone4 = "";
                    int count = 1;
                    if (Model.Contacts != null && Model.Contacts.Count > 0)
                    {
                        foreach (var item in Model.Contacts)
                        {
                            if (count == 1)
                            {
                                firstname1 = item.FirstName;
                                lastname1 = item.LastName;
                                string phone = "";
                                if (item.Phones != null && item.Phones.Count > 0)
                                {
                                    Phone1 = item.Phones[0].PhoneNumber;
                                }

                            }

                            if (count == 2)
                            {
                                firstname2 = item.FirstName;
                                lastname2 = item.LastName;
                                string phone = "";
                                if (item.Phones != null)
                                {
                                    Phone2 = item.Phones[0].PhoneNumber;
                                }

                            }
                            if (count == 3)
                            {
                                firstname3 = item.FirstName;
                                lastname3 = item.LastName;
                                string phone = "";
                                if (item.Phones != null)
                                {
                                    Phone3 = item.Phones[0].PhoneNumber;
                                }

                            }
                            if (count == 4)
                            {
                                firstname4 = item.FirstName;
                                lastname4 = item.LastName;
                                string phone = "";
                                if (item.Phones != null)
                                {
                                    Phone4 = item.Phones[0].PhoneNumber;
                                }

                            }
                            count++;

                        }
                    }

                }

                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC1 First Name")</span>
                    <input type="text" class="form-control" value="@firstname1" placeholder="@Localize.T("EC1 First Name")" id="FirstName1" />
                </div>
                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC1 Last Name")</span>
                    <input type="text" class="form-control" value="@lastname1" placeholder="@Localize.T("EC1 Last Name")" id="LastName1" />
                </div>
                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC1 Phone")</span>
                    <input type="text" class="form-control emgContactPhone" value="@Phone1" placeholder="@Localize.T("EC1 Phone No")" id="Phone1" />
                </div>
                @*<div class="form-group clearfix item_margin">
                        <span class="text-custom">@Localize.T("EC1 Phone Type")</span>
                        @Html.DropDownList("PhoneType1", (List<SelectListItem>)ViewBag.PhoneType, new { @class = "form-control", id = "PhoneType1" })
                    </div>*@
                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC2 First Name")</span>
                    <input type="text" class="form-control" value="@firstname2" placeholder="@Localize.T("EC2 First Name")" id="FirstName2" />
                </div>
                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC2 Last Name")</span>
                    <input type="text" class="form-control" value="@lastname2" placeholder="@Localize.T("EC2 Last Name")" id="LastName2" />
                </div>
                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC2 Phone")</span>
                    <input type="text" class="form-control emgContactPhone" value="@Phone2" placeholder="@Localize.T("EC2 Phone")" id="Phone2" />
                </div>
                @*<div class="form-group clearfix item_margin">
                        <span class="text-custom">@Localize.T("EC2 Phone Type")</span>
                        @Html.DropDownList("PhoneType2", (List<SelectListItem>)ViewBag.PhoneType, new { @class = "form-control", id = "PhoneType2" })
                    </div>*@
                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC3 First Name")</span>
                    <input type="text" class="form-control" value="@firstname3" placeholder="@Localize.T("EC3 First Name")" id="FirstName3" />
                </div>
                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC3 Last Name")</span>
                    <input type="text" class="form-control" value="@lastname3" placeholder="@Localize.T("EC3 Last Name")" id="LastName3" />
                </div>
                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC3 Phone")</span>
                    <input type="text" class="form-control emgContactPhone" value="@Phone3" placeholder="@Localize.T("EC3 Phone")" id="Phone3" />
                </div>
                @*<div class="form-group clearfix item_margin">
                        <span class="text-custom">@Localize.T("EC3 Phone Type")</span>
                        @Html.DropDownList("PhoneType3", (List<SelectListItem>)ViewBag.PhoneType, new { @class = "form-control", id = "PhoneType3" })
                    </div>*@

                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC4 First Name")</span>
                    <input type="text" class="form-control" value="@firstname4" placeholder="@Localize.T("EC4 First Name")" id="FirstName4" />
                </div>
                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC4 Last Name")</span>
                    <input type="text" class="form-control" value="@lastname4" placeholder="@Localize.T("EC4 Last Name")" id="LastName4" />
                </div>
                <div class="form-group clearfix item_margin">
                    <span class="text-custom">@Localize.T("EC4 Phone")</span>
                    <input type="text" class="form-control emgContactPhone" value="@Phone4" placeholder="@Localize.T("EC4 Phone")" id="Phone4" />
                </div>
                @*<div class="form-group clearfix item_margin">
                        <span class="text-custom">@Localize.T("EC4 Phone Type")</span>
                        @Html.DropDownList("PhoneType4", (List<SelectListItem>)ViewBag.PhoneType, new { @class = "form-control", id = "PhoneType4" })
                    </div>*@

            </div>

            <div class="width-100p sub-header">
                @Localize.T("Add Agencies")
            </div>
            <div class="add_ucc_cust_inner_info row">
                @{
                    string AgencyName1 = "";
                    string AgencyName2 = "";
                    string AgencyName3 = "";
                    string AgencyName4 = "";
                    string AgencyName5 = "";
                    string AgencyType1 = "";
                    string AgencyType2 = "";
                    string AgencyType3 = "";
                    string AgencyType4 = "";
                    string AgencyType5 = "";
                    string AgencyPhone1 = "";
                    string AgencyPhone2 = "";
                    string AgencyPhone3 = "";
                    string AgencyPhone4 = "";
                    string AgencyPhone5 = "";
                    string AgencyNum1 = "";
                    string AgencyNum2 = "";
                    string AgencyNum3 = "";
                    string AgencyNum4 = "";
                    string AgencyNum5 = "";

                    int AgencyCount = 1;
                    if (Model.SiteAgencies != null && Model.SiteAgencies.Count > 0)
                    {
                        foreach (var item in Model.SiteAgencies)
                        {
                            if (AgencyCount == 1)
                            {
                                AgencyName1 = item.AgencyName;
                                AgencyType1 = item.AgencyType;
                                AgencyPhone1 = item.AgencyPhone;
                                AgencyNum1 = item.AgencyNum.ToString();
                            }

                            if (AgencyCount == 2)
                            {
                                  AgencyName2 = item.AgencyName;
                                AgencyType2 = item.AgencyType;
                                AgencyPhone2 = item.AgencyPhone;
                                AgencyNum2 = item.AgencyNum.ToString();

                            }
                            if (AgencyCount == 3)
                            {
                                AgencyName3 = item.AgencyName;
                                AgencyType3 = item.AgencyType;
                                AgencyPhone3 = item.AgencyPhone;
                                AgencyNum3 = item.AgencyNum.ToString();

                            }
                            if (AgencyCount == 4)
                            {
                                AgencyName4 = item.AgencyName;
                                AgencyType4 = item.AgencyType;
                                AgencyPhone4 = item.AgencyPhone;
                                AgencyNum4 = item.AgencyNum.ToString();

                            }
                             if (AgencyCount == 5)
                            {
                                AgencyName5 = item.AgencyName;
                                AgencyType5 = item.AgencyType;
                                AgencyPhone5 = item.AgencyPhone;
                                AgencyNum5 = item.AgencyNum.ToString();

                            }
                            AgencyCount++;

                        }
                    }

                }
                <div class="add_ucc_sec_zone_table">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    @Localize.T("Agency Number")
                                </th>
                              
                                <th>
                                    @Localize.T("Agency Name")
                                </th>
                                <th>
                                    @Localize.T("Agency Phone")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <input type="number" placeholder="Agency Number" class="form-control agencyNumber1" value="@AgencyNum1" />
                                </td>
                                @*<td>
                                    @Html.DropDownList("agencyType1", (List<SelectListItem>)ViewBag.agencyType, new { @class = "form-control", id = "agencyType1" })
                                </td>*@
                                <td>
                                    <input type="text" placeholder="Agency Name" class="form-control agencyName1" value="@AgencyName1" />
                                </td>
                                <td>
                                    <input type="text" placeholder="Agency Phone" class="form-control agencyPhone1" value="@AgencyPhone1" />
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <input type="number" placeholder="Agency Number" class="form-control agencyNumber2" value="@AgencyNum2"/>
                                </td>
                                @*<td>
                                    @Html.DropDownList("agencyType2", (List<SelectListItem>)ViewBag.agencyType, new { @class = "form-control", id = "agencyType2" })
                                </td>*@
                                <td>
                                    <input type="text" placeholder="Agency Name" class="form-control agencyName2" value="@AgencyName2" />
                                </td>
                                <td>
                                    <input type="text" placeholder="Agency Phone" class="form-control agencyPhone2" value="@AgencyPhone2" />
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <input type="number" placeholder="Agency Number" class="form-control agencyNumber3" value="@AgencyNum3" />
                                </td>
                                @*<td>
                                    @Html.DropDownList("agencyNumber3", (List<SelectListItem>)ViewBag.agencyType, new { @class = "form-control", id = "agencyNumber3" })
                                </td>*@
                                <td>
                                    <input type="text" placeholder="Agency Name" class="form-control agencyName3" value="@AgencyName3" />
                                </td>
                                <td>
                                    <input type="text" placeholder="Agency Phone" class="form-control agencyPhone3" value="@AgencyPhone3" />
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <input type="number" placeholder="Agency Number" class="form-control agencyNumber4" value="@AgencyNum4" />
                                </td>
                                @*<td>
                                    @Html.DropDownList("agencyType4", (List<SelectListItem>)ViewBag.agencyType, new { @class = "form-control", id = "agencyType4" })
                                </td>*@
                                <td>
                                    <input type="text" placeholder="Agency Name" class="form-control agencyName4" value="@AgencyName4" />
                                </td>
                                <td>
                                    <input type="text" placeholder="Agency Phone" class="form-control agencyPhone4" value="@AgencyPhone4"/>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <input type="number" placeholder="Agency Number" class="form-control agencyNumber5" value="@AgencyNum5" />
                                </td>
                                @*<td>
                                    @Html.DropDownList("agencyType5", (List<SelectListItem>)ViewBag.agencyType, new { @class = "form-control", id = "agencyType5" })
                                </td>*@
                                <td>
                                    <input type="text" placeholder="Agency Name" class="form-control agencyName5" value="@AgencyName5" />
                                </td>
                                <td>
                                    <input type="text" placeholder="Agency Phone" class="form-control agencyPhone5" value="@AgencyPhone5" />
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <div class="width-100p sub-header">
                        @Localize.T("Add Security Zones")
                    </div>
                    <div class="add_ucc_cust_inner_info row">
                        <button id="Zode_Addition" class="btn green_button" title="@Localize.T("Add zone")">
                            <i class="fa fa-plus-circle" aria-hidden="true"></i> @Localize.T(" Zone")
                        </button>
                        <div class="add_ucc_sec_zone_table">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>

                                        </th>
                                        <th>

                                        </th>
                                        <th>

                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>

                                        <td>
                                            <input type="hidden" id="ZoneId" value="" />
                                            <input type="text" id="UccZoneNumber1" class="form-control" placeholder="Zone Number" />
                                            <label class="label hidden red" id="errorZoneNumber" rel="UccZoneNumber1">*@Localize.T("Select zone number"). </label>
                                        </td>
                                        <td>
                                            @Html.DropDownList("UccEventCode1", (List<SelectListItem>)ViewBag.UccEventCode, new { @class = "form-control", id = "UccEventCode1" })
                                            <label class="label hidden red" rel="UccEventCode1" id="errorEventCode">*@Localize.T("Select event code"). </label>
                                        </td>
                                        <td>

                                            <input type="text" placeholder="Location" class="form-control" , id="UccLocation1" />
                                        </td>
                                    </tr>

                                </tbody>
                            </table>
                            <div id="Zonelist">

                            </div>

                        </div>

                    </div>

                </div>
                <div class="setup_customer_alarm">
                    @if (string.IsNullOrEmpty(Model.TransmitterCode))
                    {

                        <button class="btn btnAddToAlarm" id="SubscribeToUCC">Add To UCC</button>
                    }
                    else
                    {
                        <button class="btn btnAddToAlarm" id="SubscribeToUCC">Update To UCC</button>
                    }


                </div>
            </div>


        </div>
    </div>
}
