@{
    Layout = null;
}
@model HS.Entities.CustomerIsPcCreditApplication

<link href="~/Content/Css/API/SenEcontractWithSurvey.css" rel="stylesheet" />

<script>
      
        var CustomerGuidId = '@ViewBag.CustomerId';

        function FormateHomePhoneNumber(Value) {
        var ValueClean = "";
        if (Value != undefined && Value != "" && Value != null) {
            Value = Value.replace(/[-()  ]/g, '');
            if (Value.length == 10) {
                ValueClean = Value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, "$1-$2-$3");
                $("#ApplicantHomePhone").css({ "border": "1px solid #babec5" });
       
            }
            else if (Value.length > 10) {
                ValueClean = Value;
                $("#ApplicantHomePhone").css({ "border": "1px solid red" });
             
            }
            else {
                $("#ApplicantHomePhone").css({ "border": "1px solid red" });
        
                ValueClean = Value;
            }
        }
        return ValueClean;
    }
        function FormateContactPhoneNumber(Value) {
            var ValueClean = "";
            if (Value != undefined && Value != "" && Value != null) {
                Value = Value.replace(/[-()  ]/g, '');
                if (Value.length == 10) {
                    ValueClean = Value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, "$1-$2-$3");
      
                    $("#ApplicantCellPhone").css({ "border": "1px solid #babec5" });
                }
                else if (Value.length > 10) {
                    ValueClean = Value;
         
                    $("#ApplicantCellPhone").css({ "border": "1px solid red" });
                }
                else {
               
                    $("#ApplicantCellPhone").css({ "border": "1px solid red" });
                    ValueClean = Value;
                }
            }
            return ValueClean;
        }
        function FormateCoContactPhoneNumber(Value) {
        var ValueClean = "";
        if (Value != undefined && Value != "" && Value != null) {
        Value = Value.replace(/[-()  ]/g, '');
        if (Value.length == 10) {
            ValueClean = Value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, "$1-$2-$3");
      
            $("#CoApplicantCellPhone").css({ "border": "1px solid #babec5" });
        }
        else if (Value.length > 10) {
            ValueClean = Value;
         
            $("#CoApplicantCellPhone").css({ "border": "1px solid red" });
        }
        else {
               
            $("#CoApplicantCellPhone").css({ "border": "1px solid red" });
            ValueClean = Value;
        }
        }
        return ValueClean;
        }
        function FormateCoHomePhoneNumber(Value) {
            var ValueClean = "";
            if (Value != undefined && Value != "" && Value != null) {
            Value = Value.replace(/[-()  ]/g, '');
            if (Value.length == 10) {
                ValueClean = Value.replace(/(\d{3})\-?(\d{3})\-?(\d{4})/, "$1-$2-$3");
                $("#CoApplicantHomePhone").css({ "border": "1px solid #babec5" });
       
            }
            else if (Value.length > 10) {
                ValueClean = Value;
                $("#CoApplicantHomePhone").css({ "border": "1px solid red" });
             
            }
            else {
                $("#CoApplicantHomePhone").css({ "border": "1px solid red" });
        
                ValueClean = Value;
            }
            }
            return ValueClean;
            }
        var SendIsPcEcontract = function (ContactId) {
           accInfo = {
            StateOfInstallation: $("#StateOfInstallation").val(),
            ApplicantEmailAddress: $("#ApplicantEmailAddress").val(),
            ApplicantDriversLicense: $("#ApplicantDriversLicense").val(),
            ApplicantEmployer: $("#ApplicantEmployer").val(),
            ApplicantHomePhone:  $("#ApplicantHomePhone").val(),
            ApplicantCellPhone: $("#ApplicantCellPhone").val(),

            CoApplicantEmailAddress: $("#CoApplicantEmailAddress").val(),
            CoApplicantDriversLicense: $("#CoApplicantDriversLicense").val(),
            CoApplicantEmployer: $("#CoApplicantEmployer").val(),
            CoApplicantHomePhone:  $("#CoApplicantHomePhone").val(),
            CoApplicantCellPhone: $("#CoApplicantCellPhone").val(),

            PaymentAmount: $("#PaymentAmount").val(),
            AccountNumber: $("#AccountNumber").val(),
            RoutingNumber: $("#RoutingNumber").val(),
            BillingMethod:  $("#BillingMethod").val(),
            DayToBill: $("#DayToBill").val(),
            SigningApplicant: $("#SigningApplicant").val(),
  
        };
        var url = domainurl + "/SmartLeads/SendEcontractForISPC";
        var Param = JSON.stringify({
            CustomerId: CustomerGuidId,
            accInfo:accInfo

        });
        $.ajax({
            type: "POST",
            ajaxStart: $(".sewsLoader").removeClass("hidden"),
            url: url,
            data: Param,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                $(".sewsLoader").addClass("hidden");
                if (data.result == true) {
                    OpenSuccessMessageNew("", data.Message, function () {
                        CloseTopToBottomModal();
                        //if (From == "lead") {
                        //     window.location.href = "/Customer/Customerdetail/?id=" + CurrentCustomerIntId;
                        //}
                    });
                }
                else {
                    OpenErrorMessageNew("", data.Message, function () {

                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);

            }
        });
        }

        var CommonUiValidationForContract = function () {
            var result = true;
            var inputlist = $("input");

            for (var i = 0; i < inputlist.length; i++) {

                if (($(inputlist[i]).attr('datarequired') == 'true' || $(inputlist[i]).attr('daterequired') == 'true') && $(inputlist[i]).is(":visible")) {
                    var check = Validation.ForTextbox($(inputlist[i]));
                    if (!check)
                        result = check;
                }
            }

            return result;
        }
        $(document).ready(function () {
            $(".sews_inner_height").height(window.innerHeight - 98);

            $("#SendContract").click(function () {
                if (CommonUiValidationForContract()) {
                      SendIsPcEcontract();
                } 
            });



          $("#BillingMethod").change(function () {

              if ($("#BillingMethod").val() == "1") {
                  $("#PaymentAmount").prop("disabled", true);
              }
              else {
                    $("#PaymentAmount").prop("disabled", false);
              }
          })

        $("#ApplicantHomePhone").keyup(function () {
        var PhoneNumber = $(this).val();
        if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
            var cleanPhoneNumber = FormateHomePhoneNumber(PhoneNumber);
            $(this).val(cleanPhoneNumber);
        }
        });
        $("#CoApplicantHomePhone").keyup(function () {
        var PhoneNumber = $(this).val();
        if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
            var cleanPhoneNumber = FormateCoHomePhoneNumber(PhoneNumber);
            $(this).val(cleanPhoneNumber);
        }
        });
        $("#ApplicantCellPhone").keyup(function () {
        var PhoneNumber = $(this).val();
        if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
            var cleanPhoneNumber = FormateContactPhoneNumber(PhoneNumber);
            $(this).val(cleanPhoneNumber);
        }
        });
        $("#CoApplicantCellPhone").keyup(function () {
        var PhoneNumber = $(this).val();
        if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
            var cleanPhoneNumber = FormateCoContactPhoneNumber(PhoneNumber);
            $(this).val(cleanPhoneNumber);
        }
        });

        });
</script>

<div class="sewsLoader hidden">
    <div class="loader-background"></div>
    <div class='invoice-loader'><div><div class='lds-css ng-scope'><div style='margin:auto; z-index:99;' class='lds-double-ring'><div></div><div></div></div></div></div></div>
</div>
<div class="sews_container">
    <div class="sews_header">
        ISPC E-Signing
    </div>
    <div class="sews_inner_height">
        <div class="sews_inner">

            <div class="PGDetails">
                <div class="PGDetails_header">
                    Account Info
                </div>
                <div class="form-group">
                    <div class="aba_header">State Of Installation</div>
                    <input type="text" id="StateOfInstallation" value="" class="form-control" placeholder="State Of Installation" name="StateOfInstallation" />

                </div>
                <div class="form-group">
                    <div class="aba_header">Applicant Email Address</div>
                    <input type="text" id="ApplicantEmailAddress" value="@Model.ApplicantEmailAddress" class="form-control" datarequired="true" name="ApplicantEmailAddress" placeholder="Applicant Email Address" />
                    <label rel="ApplicantEmailAddress" class="label hidden red">Applicant Email Address required.</label>
                </div>

                <div class="form-group">
                    <div class="aba_header">Applicant Drivers License<span>*</span></div>
                    <input type="text" class="form-control" id="ApplicantDriversLicense" name="ApplicantDriversLicense" value="@Model.ApplicantDriversLicense" datarequired="true" placeholder="Applicant Drivers License" />
                    <label rel="ApplicantDriversLicense" class="label hidden red">Applicant Drivers License required.</label>
                </div>
                <div class="form-group">
                    <div class="aba_header">Applicant Employer<span>*</span></div>
                    <input type="text" class="form-control" id="ApplicantEmployer" name="ApplicantEmployer" value="@Model.ApplicantEmployer" datarequired="true" placeholder="Applicant Employer" />
                    <label rel="ApplicantEmployer" class="label hidden red">Applicant Employer required.</label>
                </div>
                <div class="form-group">
                    <div class="aba_header">Applicant Home Phone</div>
                    <input type="text" class="form-control" id="ApplicantHomePhone" name="ApplicantHomePhone" value="@Model.ApplicantHomePhone" placeholder="Applicant Home Phone" />

                </div>
                <div class="form-group">
                    <div class="aba_header">Applicant Cell Phone</div>
                    <input type="text" class="form-control" id="ApplicantCellPhone" name="ApplicantCellPhone" value="@Model.ApplicantCellPhone" placeholder="Applicant Cell Phone" />

                </div>

                <div class="form-group">
                    <div class="aba_header">Co Applicant Email Address</div>
                    <input type="text" id="CoApplicantEmailAddress" value="@Model.CoapplicantEmailAddress" class="form-control" name="CoApplicantEmailAddress" placeholder="Co Applicant Email Address" />

                </div>

                <div class="form-group">
                    <div class="aba_header">Co Applicant Drivers License<span>*</span></div>
                    <input type="text" class="form-control" id="CoApplicantDriversLicense" name="CoApplicantDriversLicense" value="@Model.CoapplicantDriversLicense" placeholder="Co Applicant Drivers License" />

                </div>
                <div class="form-group">
                    <div class="aba_header">Co Applicant Employer<span>*</span></div>
                    <input type="text" class="form-control" id="CoApplicantEmployer" name="ApplicantEmployer" value="@Model.CoapplicantEmployer" placeholder="Co Applicant Employer" />

                </div>
                <div class="form-group">
                    <div class="aba_header">Co Applicant Home Phone</div>
                    <input type="text" class="form-control" id="CoApplicantHomePhone" name="CoApplicantHomePhone" value="@Model.CoapplicantHomePhone" placeholder="Co Applicant Home Phone" />

                </div>
                <div class="form-group">
                    <div class="aba_header">Co Applicant Cell Phone</div>
                    <input type="text" class="form-control" id="CoApplicantCellPhone" name="CoApplicantCellPhone" value="@Model.CpapplicantCellPhone" placeholder="Co Applicant Cell Phone" />

                </div>
                <div class="form-group">
                    <div class="aba_header">Billing Method</div>
                    @Html.DropDownList("BillingMethod", (List<SelectListItem>)ViewBag.BillingMethod, new { @class = "form-control", id = "BillingMethod" })

                </div>
                <div class="form-group">
                    <div class="aba_header">Payment Amount <span style="color:red">(Limit : 1 to 1000)</span></div>
                    <input type="number" class="form-control" id="PaymentAmount" name="PaymentAmount" value="" placeholder="Payment Amount" />

                </div>
                <div class="form-group">
                    <div class="aba_header">Account Number</div>
                    <input type="text" class="form-control" id="AccountNumber" name="AccountNumber" value="" placeholder="Account Number" />

                </div>
                <div class="form-group">
                    <div class="aba_header">Routing Number</div>
                    <input type="text" class="form-control" id="RoutingNumber" name="RoutingNumber" value="" placeholder="Routing Number" />

                </div>


                <div class="form-group">
                    <div class="aba_header">Day To Bill</div>
                    @Html.DropDownList("DayToBill", (List<SelectListItem>)ViewBag.DayToBill, new { @class = "form-control", id = "DayToBill" })

                </div>
                <div class="form-group">
                    <div class="aba_header">Signing Applicant</div>
                    @Html.DropDownList("SigningApplicant", (List<SelectListItem>)ViewBag.SigningApplicant, new { @class = "form-control", id = "SigningApplicant" })

                </div>


            </div>

        </div>
    </div>


    <div class="sews_footer">
        <button type="button" id="SendContract" class="btn green_button">
            Send
        </button>
    </div>

</div>
