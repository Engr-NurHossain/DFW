@model HS.Entities.PanelType
@{
    Layout = null;
}
@using Localize = HS.Web.UI.Helper.LanguageHelper
<script>
    var itemval;
</script>
<style>
    .PanelTypeSuggestion .tt-menu {
    background: white;
    min-width: 320px;
    font-size: 12px;
    max-height: 230px;
   -webkit-box-shadow: 0 5px 20px rgba(0,0,0,0.3);
    box-shadow: 0 5px 20px rgba(0,0,0,0.3);
    margin-top: 0px;
    position: absolute;
    left: 15px;
    z-index: 100;
    display: none;
    width: 320px;
    overflow-y:scroll;
}

.PanelTypeSuggestion .tt-dataset-autocomplete {
    margin-top: -5px;
}

.PanelTypeSuggestion .tt-suggestion {
    min-height: 36px;
    display: block;
    padding: 10px 10px 9px 15px;
    position: relative;
    cursor: pointer;
    white-space: nowrap;
    border-bottom: 1px solid #ccc;
}

.PanelTypeSuggestion .tt-menu p, .search-bar-container .twitter-typeahead > i p {
    margin: 0;
}

.PanelTypeSuggestion .tt-sug-text {
    width: 90%;
    font-size: 14px;
    text-overflow: ellipsis;
}

.PanelTypeSuggestion .tt-suggestion u {
    text-decoration: none;
    color: #aa2121;
}

.PanelTypeSuggestion .tt-suggestion.active {
    background-color: #f2f2f2;
}

.PanelTypeSuggestion .tt-sug-desc {
    width: 100%;
    color: #999;
    padding-top: 2px;
    display: block;
    text-overflow: ellipsis;
    overflow: hidden;
}

.PanelTypeSuggestion .tt-sug-type {
    position: absolute;
    right: 17px;
    top: 11px;
    color: #999;
    font-style: italic;
}

.PanelTypeSuggestion .tt-eq-price {
    float: right;
}
.PanelTypeSuggestion .tt-eq-name {
    float: left;
}
</style>
<script src="~/Content/Js/Popups/AddPanel.js"></script>
<link href="~/Content/Css/PanelType/AddPanelType.css" rel="stylesheet" />
<script>
    var PropertyUserSuggestiontemplate =
                '<div class="tt-suggestion tt-selectable" data-select="{1}" data-price="{2}" data-type="{5}" data-equipid="{0}" data-description="{6}" data-id="{7}">'
                   + "<p class='tt-sug-text'>"
                   + "{1}" 
                   + "</p> {8}"
                + "</div>";
    var SearchKeyUp = function (item, event) {
        if (event.keyCode == 40 || event.keyCode == 38 || event.keyCode == 13 || event.keyCode == 9)
            return false;
        var ExistEquipment = "";
        var ExistEquipmentInner = "";
        $(".HasItem").each(function () {
            ExistEquipmentInner += "'" + $(this).attr('data-id') + "',";
        });
        if (ExistEquipmentInner.length > 0) {
            ExistEquipmentInner = ExistEquipmentInner.slice(0, -1);
            ExistEquipment = "(" + ExistEquipmentInner + ")";
        }
        $.ajax({
            url: domainurl + "/Invoice/GetEquipmentListByKey",
            data: {
                key: $(item).val(),
                ExistEquipment: ExistEquipment
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                var resultparse = JSON.parse(data.result);

                if (resultparse.length > 0) {
                    var searchresultstring = "<div class='NewProjectSuggestion'>";
                    for (var i = 0; i < resultparse.length; i++) {
                        searchresultstring = searchresultstring + String.format(PropertyUserSuggestiontemplate,
                            /*0*/resultparse[i].EquipmentId,
                            /*1*/ resultparse[i].EquipmentName.replaceAll('"', '\'\''),
                            /*2*/ resultparse[i].RetailPrice,
                            /*3*/resultparse[i].Reorderpoint,
                            /*4*/ resultparse[i].QuantityAvailable,
                            /*5*/ resultparse[i].EquipmentType.replaceAll('"', '\'\''),
                            /*6*/resultparse[i].EquipmentDescription.replaceAll('"', '\'\'')/* ImageSource*/,
                            /*7*/ resultparse[i].Id,
                            resultparse[i].ManufacturerName);
                    }
                    searchresultstring += "</div>";
                    var ttdom = $($(item).parent()).find('.tt-menu');
                    var ttdomComplete = $($(item).parent()).find('.tt-dataset-autocomplete');
                    $(ttdomComplete).html(searchresultstring);
                    $(ttdom).show();

                    InvoiceEqSuggestionclickbind(item);
                    if (resultparse.length > 4) {
                        $(".NewProjectSuggestion").height(352);
                        $(".NewProjectSuggestion").css('position', 'relative');
                        /*$(".NewProjectSuggestion").perfectScrollbar()*/
                    }
                }
                if (resultparse.length == 0)
                    $('.tt-menu').hide();
            }
        });
    }
    var SearchKeyDown = function (item, event) {

        if (event.keyCode == 13) {/*Enter*/
            var selectedTTMenu = $(event.target).parent().find('.tt-suggestion.active');
            $(selectedTTMenu).click();
            $('.tt-menu').hide();
        }
        if (event.keyCode == 40) {/*Down*/
            var ttSugstionDom = $(event.target).parent().find('.tt-suggestion');
            var ttSugActive = $(event.target).parent().find('.tt-suggestion.active');
            if ($(ttSugstionDom).length > 0 && $(ttSugstionDom).is(':visible')) {
                if ($(ttSugActive).length == 0) {
                    $($(ttSugstionDom).get(0)).addClass('active');
                    $(item).val($($(ttSugstionDom).get(0)).attr('data-select'))
                }
                else {
                    var suggestionlist = $(ttSugstionDom);
                    var activesuggestion = $(ttSugActive);
                    var indexactive = -1;
                    for (var id = 0; id < suggestionlist.length; id++) {
                        if ($(suggestionlist[id]).hasClass('active'))
                            indexactive = id;
                    }
                    if (indexactive < suggestionlist.length - 1) {
                        $(ttSugstionDom).removeClass('active');
                        var possibleactive = $(ttSugstionDom).get(indexactive + 1);
                        $($(ttSugstionDom).get(indexactive + 1)).addClass('active');
                        $(possibleactive).addClass('active');
                        $(item).val($(possibleactive).attr('data-select'));
                    }
                }

                event.preventDefault();
            }
            else {

                var trselected = $($(event.target).parent()).parent();
                $(trselected).removeClass('focusedItem');
                $($(trselected).next('tr')).addClass('focusedItem');
                if ($(event.target).hasClass('ProductName')) {
                    $($(trselected).next('tr')).find('input.ProductName').focus();
                }
            }
        }
        if (event.keyCode == 38) {/*UP*/
            var ttSugstionDom = $(event.target).parent().find('.tt-suggestion');
            var ttSugActive = $(event.target).parent().find('.tt-suggestion.active');
            if ($(ttSugstionDom).length > 0 && $(ttSugActive).length > 0 && $(ttSugstionDom).is(':visible')) {
                var suggestionlist = $(ttSugstionDom);
                var activesuggestion = $(ttSugActive);
                var indexactive = -1;
                for (var id = 0; id < suggestionlist.length; id++) {
                    if ($(suggestionlist[id]).hasClass('active'))
                        indexactive = id;
                }
                if (indexactive > 0) {
                    $(ttSugstionDom).removeClass('active');
                    var possibleactive = $(ttSugstionDom).get(indexactive - 1);
                    $(possibleactive).addClass('active');
                    $(item).val($(possibleactive).attr('data-select'))
                }
                event.preventDefault();
            }
            else {
                var trselected = $($(event.target).parent()).parent();
                $(trselected).removeClass('focusedItem');
                $($(trselected).prev('tr')).addClass('focusedItem');
                $($(trselected).prev('tr')).find('input.ProductName').focus();
            }
        }

    }
    var InvoiceEqSuggestionclickbind = function (item) {
        $('.PanelTypeSuggestion .tt-suggestion').click(function () {
            var clickitem = this;
            $('.PanelTypeSuggestion .tt-menu').hide();
            $(item).val($(clickitem).attr('data-select'));
            $(item).attr('data-id', $(clickitem).attr('data-id'));
            itemval = $(clickitem).attr('data-id');
            //$("#Value").val($(clickitem).attr('data-select'));
        });
        $('.PanelTypeSuggestion .tt-suggestion').hover(function () {
            var clickitem = this;
            $('.tt-suggestion').removeClass("active");
            $(clickitem).addClass('active');
        });
    }
</script>
<div class="add_panel_type_header">
    @Localize.T("Panel Type Information")
</div>
<div class="container-fluid">

    @Html.HiddenFor(x => x.Id)
    

   
    <div class="form-group clearfix">
        <span class="content-type">@Localize.T("Panel Name")<span class="red">*</span></span>
        <div class="txt-form">
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control", id = "Name" ,placeholder = "Panel Name"})
        </div>
        <span class="content-type">@Localize.T("Product")</span>
        @if (Model.Equipment != null && !string.IsNullOrWhiteSpace(Model.Equipment.Name))
        {
            <div class="txt-form PanelTypeSuggestion">
                <input type="text" class="ProductName" value="@Model.Equipment.Name" onkeydown="SearchKeyDown(this,event)" onkeyup="SearchKeyUp(this,event)" id="Value" placeholder = "Product" />
                <div class='tt-menu'><div class='tt-dataset tt-dataset-autocomplete'> </div> </div>
            </div>
        }
        else
        {
            <div class="txt-form PanelTypeSuggestion">
                <input type="text" class="ProductName" value="" onkeydown="SearchKeyDown(this,event)" onkeyup="SearchKeyUp(this,event)" id="Value" placeholder = "Product"/>
                <div class='tt-menu'><div class='tt-dataset tt-dataset-autocomplete'> </div> </div>
            </div>
        }
    </div>

</div>

<section class="footer-section">
    <footer class="footer">
        <div class="SaveCancelDiv">
            <button class="btn" id="SavePanel"><i class="fa fa-floppy-o" aria-hidden="true"></i>@Localize.T(" Save")</button>

        </div>
    </footer>
</section>
