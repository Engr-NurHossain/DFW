@model HS.Entities.DocumentLibrary
@{
    Layout = null;
}
@using Localize = HS.Web.UI.Helper.LanguageHelper
@using AppConfig = HS.Framework.Utils.AppConfig;
<script>
    var SearchText = '@ViewBag.SearchText';
    var RemovedFlag ='@ViewBag.RemovedFlag';
</script>
<script src="~/Content/Js/Login/domainurl.js"></script>
<script src="~/Content/Jquery-ui/jquery.js"></script>
@Styles.Render("~/styles/GetInvoice")
<link href="~/Content/FontAwesome/css/font-awesome.min.css" rel="stylesheet" />
<script src="~/Content/Js/KnowledgeBase/ShowDocumentLibraryMessage.js"></script>
<link href="~/Content/Css/SupportTicket/AddSupportTicket.css" rel="stylesheet" />
<div class="pop_header" style="padding-right:40px;">
    @Model.Title
    <div class="CloseButtonDiv" onclick="parent.ClosePopup()">
        <img title="@Localize.T("Close")" src="~/Content/Icons/cross_update.png">
    </div>
</div>
<div class="pop_height" id="KnMessageBody">
    <div class="pop_inner skbm_block">
        <div class="hidden">
            @Html.HiddenFor(x => x.Id)
        </div>
        @if (!string.IsNullOrWhiteSpace(Model.Answer))
        {
            <div class="as_block">
                <div class="as_info" id="answerid">
                    @Html.Raw(Model.Answer)
                </div>
            </div>
        }
        @if (Model.DocumentLibraryWeblinkList != null && Model.DocumentLibraryWeblinkList.Count > 0)
        {
            <br />
            <div class="as_block">
                <div class="as_header">
                    Hyperlinks
                </div>
                <div class="as_info">

                    @foreach (var data in Model.DocumentLibraryWeblinkList)
                    {
                        <a class="rect_block_green" href="@data.Link" target="_blank"><span>@data.Title</span></a>
                    }

                </div>
            </div>
        }
        @if (Model.SavedImages != null && Model.SavedImages.Count > 0)
        {
            <div class="as_block">
                <div class="as_header">
                    Attachments
                </div>
                <div class="as_info">
                    <div class="AddImageDiv">
                        <div class="upload-gallary">

                            @foreach (var item in Model.SavedImages)
                            {
                                <div id="NewFileUp_@item.Id" class="dv-preview-pic  preview_@item.Id">
                                    @if (item.ImageLoc.Contains(".pdf"))
                                    {
                                        <div class="dv-preview-pic-inner">
                                            <img class="preview-pic project-photo" data-link="@item.ImageLoc" src="/Content/Icons/pdf.png">
                                        </div>
                                    }
                                    else if (item.ImageLoc.Contains(".doc") || item.ImageLoc.Contains(".docx"))
                                    {
                                        <div class="dv-preview-pic-inner">
                                            <img class="preview-pic project-photo" data-link="@item.ImageLoc" src="/Content/Icons/docx.png">
                                        </div>
                                    }
                                    else if (item.ImageLoc.Contains(".xlsx") || item.ImageLoc.Contains(".xls"))
                                    {
                                        <div class="dv-preview-pic-inner">
                                            <img class="preview-pic project-photo" data-link="@item.ImageLoc" src="/Content/Icons/xlsx.png">
                                        </div>
                                    }
                                    else if (item.ImageLoc.Contains(".mp4") || item.ImageLoc.Contains(".mov"))
                                    {
                                        <div class="dv-preview-pic-inner">
                                            <img class="preview-pic project-photo" data-link="@item.ImageLoc" src="/Content/Icons/mp4.png">
                                        </div>
                                    }
                                    else if (item.ImageLoc.Contains(".txt"))
                                    {
                                        <div class="dv-preview-pic-inner">
                                            <img class="preview-pic project-photo" data-link="@item.ImageLoc" src="/Content/Icons/text.png">
                                        </div>
                                    }
                                    else if (item.ImageLoc.Contains(".msg"))
                                    {
                                        <div class="dv-preview-pic-inner">
                                            <img class="preview-pic project-photo" data-link="@item.ImageLoc" src="/Content/Icons/msg.png">
                                        </div>
                                    }
                                    else if (item.ImageLoc.Contains(".pptx"))
                                    {
                                        <div class="dv-preview-pic-inner">
                                            <img class="preview-pic project-photo" data-link="@item.ImageLoc" src="/Content/Icons/pptx.png">
                                        </div>
                                    }
                                    else if (item.ImageLoc.Contains(".ppt"))
                                    {
                                        <div class="dv-preview-pic-inner">
                                            <img class="preview-pic project-photo" data-link="@item.ImageLoc" src="/Content/Icons/ppt.png">
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="dv-preview-pic-inner">
                                            <img class="preview-pic project-photo" data-link="@item.ImageLoc" src="@item.ImageLoc">
                                        </div>
                                    }
                                    <input type="text" disabled value="@item.ImageType" class="image-caption">
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
        }

        <div class="as_block">
            <div class="as_header" style="text-align:center;">
                @if (Model.IsFlag)
                {
                    <span style="float:left;">@Model.FlagByName</span>
                    <span>@HS.Framework.DateTimeExtension.UTCToClientTime(Model.FlagDate.Value).ToString("M/d/yyyy h:m tt")</span>
                }
                <span class="flag_chk_block"> <input type='checkbox' title="@(Model.IsFlag == true ? "Flagged" : "Flag")" class='Flag' @(Model.IsFlag == true ? "checked" : "") /></span>
            </div>
        </div>
    </div>
</div>




