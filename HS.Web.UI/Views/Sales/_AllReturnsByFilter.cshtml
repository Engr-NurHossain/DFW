@{
    Layout = null;
    string Currency = HS.Web.UI.Helper.LabelHelper.CurrentTransMakeCurrency.MakeCurrency(null);
}
@model HS.Entities.DeclinedTransactionView
@using Localize = HS.Web.UI.Helper.LanguageHelper
<script>
    var ModelCount = '@Model.TotalCount';
    var pageno = '@ViewBag.PageNumber'
    var ArrayItemInvoiceId = [];

    var OpenCustomerInvoice = function (CustomerId) {
        var url = "/Customer/Customerdetail/?id=" + CustomerId
        window.open(url, '_blank');
    }

    var SendEmailToSelectedInvoice = function () {
        OpenConfirmationMessageNew("", "Do You Want To Send Email.", function () {
            $(".CheckItems1").each(function () {
                if ($(this).is(':checked')) {
                    var InvoiceId = $(this).attr("data-invoice-id");
                    ArrayItemInvoiceId.push(InvoiceId);
                }
            });
            console.log(ArrayItemInvoiceId);
            var url = "/Invoice/SendInvoiceInEmail";
            var param = JSON.stringify({
                ArrayItemInvoiceId: ArrayItemInvoiceId
            })

            $.ajax({
                type: "POST",
                ajaxStart: $(".loader-div").show(),
                url: url,
                data: param,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                cache: false,
                success: function (data) {
                    window.location.reload();
                },

                error: function (jqXHR, textStatus, errorThrown) {
                    $(".loader-div").hide();
                    console.log(errorThrown);
                }
            })
        }, function () {
            $(".CheckItems1").prop("checked", false)

        });
    }


    $(document).ready(function () {
        $(".icon_sort_timeclock").click(function () {
            var orderval = $(this).attr('data-val');
            LoadAllReturns(pageno, orderval);
        })




        $(".SendMailSelectedInvoice").click(function () {

            if ($(".CheckItems1").is(':checked')) {
                SendEmailToSelectedInvoice();
            }
            else {
                OpenErrorMessageNew("Error!", "You Have To Select Customer First.");
            }

        });
              $(".InvPrintforallreturns").click(function () {
                console.log("test run");
                var ids = "";
                var idsAll = "";
                var flag = 0;
                $(".CheckItems1").each(function () {
                    idsAll += $(this).attr("data-invId") + ",";
                    if ($(this).is(':checked')) {
                        flag = 1;
                        ids += $(this).attr("data-invId") + ","
                    }

                });

                if (flag == 0) {
                    if (idsAll != "") {
                        $(".InvPrintforallachcc").attr("href", domainurl + "/Invoice/PrintInvoiceList/?idlist=" + idsAll);
                        $(".InvPrintforallachcc").click();
                    }
                    else {

                        OpenErrorMessageNew("", "Invoice List are empty.", function () {
                           location.reload();
                        });
                    }
                }
                else {
                    if (ids != "") {
                        $(".InvPrintforallachcc").attr("href", domainurl + "/Invoice/PrintInvoiceList/?idlist=" + ids);
                        $(".InvPrintforallachcc").click();
                    }
                    else {
                        OpenErrorMessageNew("", "Invoice List are empty.");
                         location.reload();
                    }
                }


             });
            $("#IsCheckValforreturns").change(function () {
        console.log("hlw");
        if ($(this).is(':checked')) {
            $(".CheckItems1").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".CheckItems1").each(function () {
                $(this).prop('checked', false);
            });
        }
    })
               $(".CheckItems1").change(function () {
        console.log("oi");
             if ($(this).is(':checked')) {

                 $(".CheckItems1").each(function () {
              if ($('.CheckItems1:checked').length == $('.CheckItems1').length) {
             $("#IsCheckValforreturns").prop('checked', true);
        }
               
            });
        }
      
        else {
            $(".CheckItems1").each(function () {
                $("#IsCheckValforreturns").prop('checked', false);
            });
        }
    })
    })
</script>

<div class="invoice-table all_invoices_Table all_returns_by_filter_table">
    <table class="display">
        <thead class="table-head-border">
            <tr>

                <th class="thead-th-style">

                    <div title="@Localize.T("Transaction Id")">
                        <label for="IsCheckValforreturns" class="label-cbx">
                            <input id="IsCheckValforreturns" type="checkbox" style="position:relative;" class="cus-checkBox invisible " autocomplete="off">
                            <div class="checkbox">
                                <svg width="20px" height="20px" viewBox="0 0 20 20">
                                    <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                    <polyline points="4 11 8 15 16 6"></polyline>
                                </svg>
                            </div>
                        </label>
                        @Localize.T("Transaction Id")
                    </div>
                    <div><i class="fa fa-angle-up icon_sort_timeclock" data-val="ascending/transactionid"></i> <i class="fa fa-angle-down icon_sort_timeclock" data-val="descending/transactionid"></i></div>
                </th>
                <th class="thead-th-style">
                    <div>@Localize.T("Invoice NO")</div>
                    <div><i class="fa fa-angle-up icon_sort_timeclock" data-val="ascending/invoiceno"></i> <i class="fa fa-angle-down icon_sort_timeclock" data-val="descending/invoiceno"></i></div>
                </th>
                <th class="thead-th-style">
                    <div>@Localize.T("Customer Name")</div>
                    <div><i class="fa fa-angle-up icon_sort_timeclock" data-val="ascending/customername"></i> <i class="fa fa-angle-down icon_sort_timeclock" data-val="descending/customername"></i></div>
                </th>
                <th class="thead-th-style">
                    <div>@Localize.T("Return Amount")</div>
                    <div><i class="fa fa-angle-up icon_sort_timeclock" data-val="ascending/returnamount"></i> <i class="fa fa-angle-down icon_sort_timeclock" data-val="descending/returnamount"></i></div>
                </th>
                <th class="thead-th-style">
                    <div>@Localize.T("Date")</div>
                    <div><i class="fa fa-angle-up icon_sort_timeclock" data-val="ascending/date"></i> <i class="fa fa-angle-down icon_sort_timeclock" data-val="descending/date"></i></div>
                </th>
                <th class="thead-th-style">
                    <div>@Localize.T("Reason")</div>
                    <div><i class="fa fa-angle-up icon_sort_timeclock" data-val="ascending/reason"></i> <i class="fa fa-angle-down icon_sort_timeclock" data-val="descending/reason"></i></div>
                </th>
                <th class="thead-th-style">
                    <div>@Localize.T("Comments")</div>
                    <div><i class="fa fa-angle-up icon_sort_timeclock" data-val="ascending/comments"></i> <i class="fa fa-angle-down icon_sort_timeclock" data-val="descending/comments"></i></div>


                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.DeclinedTransaction)
            {
                <tr class="tr-style">

                    <td class="table-body-td-style" valign="top">

                     
                        <div>
                            <label for="IsCheckVal1_@item.InvoiceId" class="label-cbx">
                                <input id="IsCheckVal1_@item.InvoiceId" type="checkbox" data-invoice-id="@item.InvoiceId" data-invId="@item.InvId" style="position:relative;" class="cus-checkBox CheckItems1" />

                            </label>
                            @item.TransactionId
                        </div>
                    </td>
                    <td class="table-body-td-style" valign="top">
                        <div>
                            @if (string.IsNullOrWhiteSpace(item.InvoiceId))
                            {
                                <span>-</span>
                            }
                            else
                            {
                                <span class="cus-anchor" onclick="OpenInvByInvId('@item.InvoiceId')">@item.InvoiceId</span>
                            }
                        </div>
                    </td>
                    <td class="table-body-td-style" valign="top">
                        <div class="cus-anchor" onclick="OpenCustomerInvoice('@item.CustomerIdValue')"> @(string.IsNullOrWhiteSpace(item.CustomerBusinessName) ? (string.IsNullOrWhiteSpace(item.CustomerName) ? "-" : item.CustomerName) : item.CustomerBusinessName)</div>
                    </td>
                    <td class="table-body-td-style" valign="top">
                        <div>@HS.Web.UI.Helper.LabelHelper.FormatAmount(item.ReturnAmount.Value)</div>
                    </td>
                    <td class="table-body-td-style" valign="top">
                        <div> @(item.ReturnedDate.HasValue ? item.ReturnedDate.Value.ToString("M/d/yy") : "")</div>
                    </td>
                    <td class="table-body-td-style" valign="top">
                        <div>@item.Reason</div>
                    </td>
                    <td class="table-body-td-style" valign="top">
                        <div> @item.Comment</div>
                    </td>
                </tr>

            }
            <tr class="tr-style table_total_bg">



                <td class="table-body-td-style" colspan="3">
                    <b class="float_right">
                        @Localize.T("Total:")
                    </b>
                </td>
                <td class="table-body-td-style" colspan="4">
                    <b title="@Localize.T("Total Return Amount:")">$@Model.TotalAmountByPage.ToString("#,##0.00")</b>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div class="AgentListPagination inv1">
    <div class="paginationContainer">
        @if (ViewBag.PageCount > 0)
        {
            <div class="paginationtextdv"><span>@HS.Web.UI.Helper.LabelHelper.NumberFormat(ViewBag.CurrentNumber) of @HS.Web.UI.Helper.LabelHelper.NumberFormat(ViewBag.OutOfNumber)</span></div>
        }
        @if (ViewBag.PageCount == 1)
        {
            <div class="paginationMiddleButtondv">
                <button class="PaginationButtons disabledBtn">Previous</button>
            </div>
            <div class="NavigatonButtonsDiv">
                <button class="NavigationButton activeBtn" onclick="LoadAllReturns(@(ViewBag.PageNumber),'@ViewBag.order')">1</button>
            </div>
            <div class="paginationRightButtondv">
                <button class="PaginationButtons disabledBtn">Next</button>
            </div>
        }
        else if (ViewBag.PageCount == 2)
        {
            <div class="paginationMiddleButtondv">
                <button class="PaginationButtons @(ViewBag.PageNumber==1?"disabledBtn":"")" onclick="LoadAllReturns(@(ViewBag.PageNumber!=1?ViewBag.PageNumber-1:""),'@ViewBag.order')">Previous</button>
            </div>
            <div class="NavigatonButtonsDiv">
                <button class="NavigationButton @(ViewBag.PageNumber==1?"activeBtn":"")" onclick="LoadAllReturns(1, '@ViewBag.order')">1</button>
            </div>
            <div class="NavigatonButtonsDiv">
                <button class="NavigationButton @(ViewBag.PageNumber==2?"activeBtn":"")" onclick="LoadAllReturns(2,'@ViewBag.order')">2</button>
            </div>
            <div class="paginationRightButtondv">
                <button class="PaginationButtons @(ViewBag.PageNumber==2? "disabledBtn" : "")" onclick="LoadAllReturns(@(ViewBag.PageNumber!=2?ViewBag.PageNumber+1:""),'@ViewBag.order')">Next</button>
            </div>
        }
        else if (ViewBag.PageCount == 3 || (ViewBag.PageNumber == 1 && ViewBag.PageCount == 3))
        {
            <div class="paginationMiddleButtondv">
                <button class="PaginationButtons @(ViewBag.PageNumber==1?"disabledBtn":"")" onclick="LoadAllReturns(@(ViewBag.PageNumber!=1?ViewBag.PageNumber-1:""),'@ViewBag.order')">Previous</button>
            </div>
            <div class="NavigatonButtonsDiv">
                <button class="NavigationButton @(ViewBag.PageNumber==1?"activeBtn":"")" onclick="LoadAllReturns(1,'@ViewBag.order')">1</button>
            </div>
            <div class="NavigatonButtonsDiv">
                <button class="NavigationButton @(ViewBag.PageNumber==2?"activeBtn":"")" onclick="LoadAllReturns(2,'@ViewBag.order')">2</button>
            </div>
            <div class="NavigatonButtonsDiv">
                <button class="NavigationButton @(ViewBag.PageNumber==3?"activeBtn":"")" onclick="LoadAllReturns(3,'@ViewBag.order')">3</button>
            </div>
            <div class="paginationRightButtondv">
                <button class="PaginationButtons @(ViewBag.PageNumber==3?"disabledBtn":"")" onclick="LoadAllReturns(@(ViewBag.PageNumber!=3?ViewBag.PageNumber+1:""),'@ViewBag.order')">Next</button>
            </div>
        }
        else if (ViewBag.PageCount > 3)
        {
            if (ViewBag.PageNumber == ViewBag.PageCount)
            {
                <div class="paginationMiddleButtondv">
                    <button class="PaginationButtons" onclick="LoadAllReturns(@(ViewBag.PageNumber-1),'@ViewBag.order')">Previous</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton" onclick="LoadAllReturns(@(ViewBag.PageNumber-2),'@ViewBag.order')">@(ViewBag.PageNumber - 2)</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton" onclick="LoadAllReturns(@(ViewBag.PageNumber-1),'@ViewBag.order')">@(ViewBag.PageNumber - 1)</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton activeBtn" onclick="LoadAllReturns(@(ViewBag.PageNumber),'@ViewBag.order')">@(ViewBag.PageNumber)</button>
                </div>
                <div class="paginationRightButtondv">
                    <button class="PaginationButtons disabledBtn" onclick="LoadAllReturns()">Next</button>
                </div>
            }
            else if (ViewBag.PageNumber == 1)
            {
                <div class="paginationMiddleButtondv">
                    <button class="PaginationButtons" onclick="LoadAllReturns(@(ViewBag.PageNumber-1),'@ViewBag.order')">Previous</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton activeBtn">@(ViewBag.PageNumber)</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton" onclick="LoadAllReturns(@(ViewBag.PageNumber+1),'@ViewBag.order')">@(ViewBag.PageNumber + 1)</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton" onclick="LoadAllReturns(@(ViewBag.PageNumber + 2),'@ViewBag.order')">@(ViewBag.PageNumber + 2)</button>
                </div>
                <div class="paginationRightButtondv">
                    <button class="PaginationButtons" onclick="LoadAllReturns(@(ViewBag.PageNumber+1),'@ViewBag.order')">Next</button>
                </div>
            }
            else if (ViewBag.PageNumber == 2)
            {
                <div class="paginationMiddleButtondv">
                    <button class="PaginationButtons" onclick="LoadAllReturns(@(ViewBag.PageNumber-1),'@ViewBag.order')">Previous</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton" onclick="LoadAllReturns(@(ViewBag.PageNumber-1),'@ViewBag.order')">@(ViewBag.PageNumber - 1)</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton activeBtn">@(ViewBag.PageNumber)</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton" onclick="LoadAllReturns(@(ViewBag.PageNumber + 1),'@ViewBag.order')">@(ViewBag.PageNumber + 1)</button>
                </div>
                <div class="paginationRightButtondv">
                    <button class="PaginationButtons" onclick="LoadAllReturns(@(ViewBag.PageNumber+1),'@ViewBag.order')">Next</button>
                </div>
            }
            else
            {
                <div class="paginationMiddleButtondv">
                    <button class="PaginationButtons" onclick="LoadAllReturns(@(ViewBag.PageNumber-1),'@ViewBag.order')">Previous</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton" onclick="LoadAllReturns(@(ViewBag.PageNumber - 1),'@ViewBag.order')">@(ViewBag.PageNumber - 1)</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton activeBtn" onclick="LoadAllReturns(@(ViewBag.PageNumber),'@ViewBag.order')">@(ViewBag.PageNumber)</button>
                </div>
                <div class="NavigatonButtonsDiv">
                    <button class="NavigationButton" onclick="LoadAllReturns(@(ViewBag.PageNumber + 1),'@ViewBag.order')">@(ViewBag.PageNumber + 1)</button>
                </div>
                <div class="paginationRightButtondv">
                    <button class="PaginationButtons" onclick="LoadAllReturns(@(ViewBag.PageNumber+1),'@ViewBag.order')">Next</button>
                </div>
            }
        }
    </div>
</div>