@{
    Layout = null;
}
@model HS.Entities.ContractAgreementTemplate
@using Localize = HS.Web.UI.Helper.LanguageHelper
@Styles.Render("~/styles/AddFile")

<style>
    .addFileTemplateHeader {
        width: 100%;
        background-color: #f4f5f8;
        font-size: 2rem;
        font-weight: 400;
        color: #393a3d;
    }

        .addFileTemplateHeader div {
            padding: 15px 15px 10px 15px;
        }

    div.show-image {
        position: relative;
        float: left;
    }

    .add_file_template_inner {
        width: 100%;
        float: left;
        overflow-x: hidden;
        overflow-y: auto;
    }

    div.show-image input {
        position: absolute;
        display: block;
    }

        div.show-image input.deleteDoc {
            top: 0;
            left: 91%;
            background-color: #d0d0d0;
            border-radius: 27px;
        }

    .EditEmailTemplate .row {
        margin-bottom: 15px;
    }

    .EmailTemplateDescription {
        width: 100%;
    }

    .TemplateEditorMainDiv {
        height: 100vh;
        overflow-y: scroll;
        background-color: #f4f5f8;
    }

    .margin-bottom-5 {
        margin-bottom: 5px;
    }

    .SaveChangesDiv {
        width: 100%;
        float: left;
        background-color: #393a3d;
        text-align: right;
    }

        .SaveChangesDiv div {
            width: 100%;
            float: left;
            padding: 8px 15px;
        }

        .SaveChangesDiv button {
            float: right;
            margin-left: 10px;
        }
</style>

<script src="~/Content/Tiny/jquery.tinymce.min.js"></script>
<script src="~/Content/Tiny/tinymce.min.js"></script>
<script src="~/Content/Tiny/tiny.js"></script>
<script>
    var UserFileUploadjqXHRData;

    var SaveChanges = function (IsDefault) {
        var Param = {
            Id: $("#TemplateId").val(),
            RestoreDefault: IsDefault,
            Name: $("#TemplateName").val(),
            Description: $("#Description").val(),
            BodyContent: tinyMCE.get('BodyContent').getContent(),
            IsDrawDiagram: $("#IsDrawDiagram").prop('checked')
        };
        var url = domainurl + "/File/AddAgreementTemplate/";
        $.ajax({
            type: "POST",
            ajaxStart: function () { },
            url: url,
            data: JSON.stringify(Param),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                if (data.result) {
                    OpenSuccessMessageNew("Success!", data.message, function () {
                        CloseTopToBottomModal();
                    });
                    OpenFileTemplateTab();
                }
                else {
                    OpenErrorMessageNew("Error!", data.message);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    }


    $(document).ready(function () {
        $(".add_file_template_inner").height(window.innerHeight - ($(".addFileTemplateHeader").height() + $(".SaveChangesDiv").height() + 41));
        $("#SaveChanges").click(function () {
            SaveChanges(false);
        });
        $("#RestoreDefault").click(function () {
            SaveChanges(true);
        });
        $(".deleteDoc").click(function () {
            OpenConfirmationMessageNew("Confirm?", "Are you sure you want to delete this file?", function () {
                $(".Upload_Doc").removeClass('hidden');
                $("#UploadCustomerFileBtn").attr('src', '/Content/Icons/blank_thumb_file.png');
                $(".chooseFilebtn").removeClass("hidden");
                $(".changeFilebtn").addClass("hidden");
                $(".deleteDoc").addClass("hidden");
                $("#Preview_Doc").attr('src', "");
                $("#Frame_Doc").attr('src', "");
                $("#UploadSuccessMessage").hide();
                $("#BodyContent").val("");
                $("#UploadedPath").val('');
                $(".fileborder").addClass('border_none');
                $("#UploadCustomerFileBtn").removeClass('otherfileposition');
            });
        });

        $("#UploadCustomerFileBtn").click(function () {
            console.log("sdfdsf");
            $("#UploadedFile").click();
            $("#UploadSuccessMessage").addClass('hidden');
        });
        $("#SaveAndReview").click(function () {
            console.log("test");
            if ($("#TemplateId").val() > 0) {
                console.log($("#customerId").val());

                var Param = {
                    Id: $("#TemplateId").val(),
                    RestoreDefault: false,
                    BodyContent: tinyMCE.get('BodyContent').getContent(),
                };
                var url = domainurl + "/File/AddFileTemplate/";
                $.ajax({
                    type: "POST",
                    ajaxStart: function () { },
                    url: url,
                    data: JSON.stringify(Param),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    cache: false,
                    success: function (data) {
                        //if (data.result) {
                        //    OpenTopToBottomModal(domainurl + "/File/GetFileTemplateForPopUp/?fileTemplateId=" + $("#TemplateId").val() + "&customerId=" + CustomerLoadId);
                        //}
                        //else {
                        //    OpenErrorMessageNew("Error!", data.message);
                        //}
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(errorThrown);
                    }
                });

            }
        });
        $(".change-picture-logo").click(function () {
            $("#UploadedFile").click();
            $("#UploadSuccessMessage").addClass('hidden');
        });
        $('#UploadedFile').fileupload({
            pasteZone: null,
            url: domainurl + '/File/UploadAgreementTemplate',
            dataType: 'json',
            add: function (e, data) {
                var ext = data.files[0].name.split(".");
                if (ext[1] == 'html') {
                    if (data.files[0].size <= 50000000) {
                        UserFileUploadjqXHRData = data;
                    }
                    else {
                        OpenErrorMessageNew("Error!", "File size is more then 50 mb.", function () {
                            $(".close").click();
                        })
                    }

                }
                else {
                    OpenErrorMessageNew("Error!", "File format not valid.", function () {
                        $(".close").click();
                    })
                }

            },
            progress: function (e, data) {
                var percentVal = parseInt(data.loaded / data.total * 100, 10);
                $(".file-progress").show();
                $(".file-progress .progress-bar").animate({
                    width: percentVal + "%"
                }, 40);
                $(".file-progress .progress-bar span").text(percentVal + '%');
            },
            done: function (event, data) {
                console.log("dfdf");
                if ($("#BodyContent").val() == "") {
                    var filename = data.result.FullFilePath;
                    tinymce.get("BodyContent").setContent(filename);
                }

                setTimeout(function () {
                    $(".file-progress").hide();
                    $(".file-progress .progress-bar").animate({
                        width: 0 + "%"
                    }, 0);
                    $(".file-progress .progress-bar span").text(0 + '%');
                }, 500);

                if ((typeof (data.result.isUploaded) != "undefined") && data.result.isUploaded == true) {
                    $("#UploadSuccessMessage").removeClass('hidden');
                    $("#UploadedPath").val(data.result.filePath);
                    var spfile = data.result.FullFilePath.split('.');
                    $(".fileborder").removeClass('red-border');
                    $("#uploadfileerror").addClass("hidden");

                    var index = spfile.length - 1;
                    if (spfile[index] == "png" || spfile[index] == "PNG" || spfile[index] == "jpg" || spfile[index] == "JPG" || spfile[index] == "jpeg" || spfile[index] == "JPEG") {
                        $("#UploadCustomerFileBtn").attr('src', data.result.FullFilePath)
                        $(".chooseFilebtn").addClass("hidden");
                        $(".changeFilebtn").removeClass("hidden");
                        $(".deleteDoc").removeClass("hidden");
                        $("#UploadCustomerFileBtn").addClass('custom-file');
                        $("#UploadCustomerFileBtn").removeClass('otherfileposition');
                        $(".fileborder").addClass('border_none');
                    }
                    else if (spfile[index] == "pdf") {
                        $(".chooseFilebtn").addClass("hidden");
                        $(".changeFilebtn").removeClass("hidden");
                        $(".deleteDoc").removeClass("hidden");
                        $("#UploadCustomerFileBtn").attr('src', domainurl + '/Content/Icons/pdf.png');
                        $("#UploadCustomerFileBtn").addClass('otherfileposition');
                        $("#UploadCustomerFileBtn").removeClass('custom-file');
                        $(".fileborder").removeClass('border_none');
                    }
                    else if (spfile[index] == "doc" || spfile[index] == "docx") {
                        $(".chooseFilebtn").addClass("hidden");
                        $(".changeFilebtn").removeClass("hidden");
                        $(".deleteDoc").removeClass("hidden");
                        $("#UploadCustomerFileBtn").attr('src', '/Content/Icons/docx.png');
                        $("#UploadCustomerFileBtn").addClass('otherfileposition');
                        $("#UploadCustomerFileBtn").removeClass('custom-file');
                        $(".fileborder").removeClass('border_none');
                    }
                    else if (spfile[index] == "mp4" || spfile[index] == "mov") {
                        $(".chooseFilebtn").addClass("hidden");
                        $(".changeFilebtn").removeClass("hidden");
                        $(".deleteDoc").removeClass("hidden");
                        $("#UploadCustomerFileBtn").attr('src', '/Content/Icons/mp4.png');
                        $(".fileborder").removeClass('border_none');
                    }
                    else {
                        $(".chooseFilebtn").addClass("hidden");
                        $(".changeFilebtn").removeClass("hidden");
                        $(".deleteDoc").removeClass("hidden");
                        $("#UploadCustomerFileBtn").attr('src', '/Content/Icons/docx.png');
                        $("#UploadCustomerFileBtn").addClass('otherfileposition');
                        $("#UploadCustomerFileBtn").removeClass('custom-file');
                        $(".fileborder").removeClass('border_none');
                    }
                }
            },
            fail: function (event, data) {
                //if (data.files[0].error) {
                //    //alert(data.files[0].error);
                //}
            }
        });
        $("#UploadedFile").on("change", function () {
            if (UserFileUploadjqXHRData) {
                UserFileUploadjqXHRData.submit();
            }
            return false;
        });

    });

    $("#BodyContent").blur(function () {
        if ($("#BodyContent").val() == "") {
            $("#DescriptionError").removeClass("hidden");
        }
        if ($("#BodyContent").val() != "") {
            $("#DescriptionError").addClass("hidden");
        }
    })
    $("#UploadedPath").blur(function () {
        if ($("#UploadedPath").val() == "") {
            $("#uploadfileerror").removeClass("hidden");
            $(".fileborder").addClass('red-border');
        }
        if ($("#UploadedPath").val() != "") {
            $("#uploadfileerror").addClass("hidden");
            $(".fileborder").removeClass('red-border');
        }
    })
</script>
<div class="hidden">
    <input type="hidden" value="@Model.Id" id="TemplateId" />
</div>

<div class="addFileTemplateHeader"><div>@Localize.T("Upload File")</div></div>
<div class="add_file_template_inner">
    <div class="container-fluid">
        @if (Model.Id == 0)
        {
            <div class="form-group clearfix">
                <span class="">@Localize.T("Only html file allowed") </span><br />
                <span class="">@Localize.T("(max file size: 20 mb)")</span>
            </div>
            <div>
                <br />
            </div>
            <div class="txt-form Upload_Doc">
                <div class="col-md-12 padding-left-0">
                    <div class="fileborder border_none">
                        <img id="UploadCustomerFileBtn" class="cursor-pointer custom-file" src="~/Content/Icons/blank_thumb_file.png" />
                    </div>
                    <div class="deleteDoc cursor-pointer hidden">
                        <img src="~/Content/Icons/cross-image-delete.png" />
                    </div>
                    <div class="change-picture-logo white-color cursor-pointer text-align-center">
                        <span class="chooseFilebtn"><img src="~/Content/Icons/edit-icon.png" /> @Localize.T("Choose File to Upload")</span>
                        <span class="changeFilebtn hidden"><img src="~/Content/Icons/edit-icon.png" /> @Localize.T("Change File")</span>
                    </div>
                    <div class="LoadPreviewDocument hidden">
                        <div class="show-image PropertyLogoPreviewPic">
                            <div class="image-delete" data-id="">
                                <img src="~/Content/Icons/cross-image-delete.png" />
                            </div>
                            <img class="Preview_Doc T360image-photo T360image" src="" />
                        </div>
                        <div class="change-picture-logo white-color cursor-pointer text-align-center T360image">
                            <span><img src="~/Content/Icons/edit-icon.png" /> @Localize.T("Change File")</span>
                        </div>
                    </div>
                </div>

                <div class="col-md-12 progress-container file-progress" style="display:none; padding-left:0; padding-right:0; margin-top: 15px;">
                    <div class="progress progress-striped active">
                        <div class="progress-bar progress-bar-success" style="width:0%">
                            <span> 0%</span>
                        </div>
                    </div>
                </div>
                <label class="label red position-relative hidden" id="uploadfileerror">*@Localize.T("File required")</label>
            </div>
            <div class="LoadPreviewDocument hidden">
                <div class="show-image">
                    <img id="Preview_Doc" src="" />
                    <input class="deleteDoc" type="image" title="@Localize.T("Close")" src="~/Content/Icons/cross_update.png" />
                </div>
                <div class="change-picture-logo white-color cursor-pointer text-align-center T360image">
                    <span><img src="~/Content/Icons/edit-icon.png" /></span>
                </div>
            </div>
            <div class="LoadPreviewDocument1 hidden">
                <div class="show-image">
                    <iframe id="Frame_Doc" src="" width="319" height="455"></iframe>
                    <input class="deleteDoc" type="image" title="@Localize.T("Close")" src="~/Content/Icons/cross_update.png" />
                </div>
            </div>
            <div class="UploadedVideo hidden">
                <div class="show-image">
                    <span>Click save button for add this video</span>
                </div>
            </div>
        }
        <div class="txt-form">
            <div class="container-fluid TemplateEditorMainDiv">
                <div class="EditEmailTemplate">

                    <div class="row">
                        <div class="col-md-12">
                            <h3>@Localize.T("File Template")</h3>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-8">
                            <div>
                                @if (Model.Name != null)
                                {
                                    <input type="hidden" id="TemplateName" name="TemplateName" value="@Model.Name" placeholder="File Name" />
                                }
                                else
                                {
                                    <label>@Localize.T("File Name")</label>
                                    <input type="text" id="TemplateName" name="TemplateName" value="@Model.Name" placeholder="File Name" />
                                }
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="BodyContentDiv col-md-12">
                            <label>@Localize.T("Body")</label>
                            <textarea id="BodyContent" name="BodyContent" class="tinymce">@Html.Raw(Model.BodyContent)</textarea>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div>
                                <label>@Localize.T("Description")</label>
                                <textarea type="text" rows="3" class="EmailTemplateDescription" id="Description" name="Description" placeholder="Description">@Model.Description</textarea>
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div>
                                @if (Model != null && !string.IsNullOrWhiteSpace(Model.Name))
                                {
                                    <label><input type="checkbox" id="IsDrawDiagram" @(Model.IsDrawDiagram ? "checked" : "") /> @Localize.T("Is Draw Diagram")</label>
                                }
                                else
                                {
                                    <label><input type="checkbox" id="IsDrawDiagram" checked /> @Localize.T("Is Draw Diagram")</label>
                                }

                            </div>

                        </div>
                    </div>
                    <div class="row">

                    </div>
                </div>
            </div>
        </div>



    </div>
</div>
<div class="SaveChangesDiv">
    <div>
        <button class="btn btn-default" id="SaveChanges">Save Changes</button>
        <button class="btn btn-default" id="RestoreDefault">Restore Default</button>
    </div>
</div>

<div class="">
    <input type="hidden" id="UploadedPath" value="" />
    <input type="file" name="CustomerFile" class="hidden" id="UploadedFile" />
    <input type="hidden" name="Size" class="hidden" id="FSize" />
    <input type="hidden" name="FullPath" class="hidden" id="FullPath" />

</div>
    