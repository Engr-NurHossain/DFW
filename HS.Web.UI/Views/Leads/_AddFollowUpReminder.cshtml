@model HS.Entities.CustomerNote
@using Localize = HS.Web.UI.Helper.LanguageHelper
@using PermissionList = HS.Framework.UserPermissions;
@using PermissionChecker = HS.Web.UI.Helper.PermissionHelper;

<script>
    var Emparr = [];
    @if(@Model.AssignEmpList != null){
        @: Emparr = [
    foreach(var item in Model.AssignEmpList)
        {
        @: '@item.AssignedEmpId',
        }
    @:];
    }
    var cusid = '@Model.CustomerId';
    var timeval = '@Model.RemainderTime';
    var complete = '@ViewBag.complete';
    var completeddatePermit = '@PermissionChecker.IsPermitted(PermissionList.CustomerPermissions.ShowReminderCompletedDateOnAddReminder)';
    var remindertime = '@Model.RemainderTime';
</script>
@Styles.Render("~/styles/AddFollowUpReminder")
@Scripts.Render("~/scripts/AddFollowUpReminder")

<div class="add_customer_follow_up_header">
    @{
        if (Model.Id > 0)
        {
            @Localize.T("Edit Reminder")
        }
        else
        {
            @Localize.T("Add Reminder")
        }
    }
</div>

<div class="add_followup_reminder_container">
    <div class="row">
        <div class="col-md-12">
            @Html.HiddenFor(x => x.CustomerId)
            @Html.HiddenFor(x => x.Id)

            <div class="form-group clearfix">
                <div class="note_text">@Localize.T("Note ")<span class="red">@Localize.T("*")</span></div>
                @Html.TextAreaFor(x => x.Notes, new { @class = "form-control", placeholder = "Please add something to your note", id = "CustomerNoteNewNote" })
            </div>
            @if (PermissionChecker.IsPermitted(PermissionList.CustomerPermissions.ShowCreatedDateOnAddReminder))
            {
                <div class="form-group clearfix" style="pointer-events:none;">
                    <span class="note_text">@Localize.T("Created On")</span>
                    <div class="input_group_for_date add-on" id="CustomerNoteCreatedDate_custom">
                        @Html.TextBoxFor(x => x.CreatedDate, "{0:MM/dd/yy}", new { @class = "form-control datepicker date_pick_bg", id = "CustomerNoteCreatedDate" })
                        <div class="input-group-btn">
                            <btn class="btn">
                                <i class="fa fa-calendar" aria-hidden="true" style="cursor:pointer;"></i>
                            </btn>
                        </div>
                    </div>

                </div>
            }
            <div class="form-group clearfix">
                <div class="note_text">@Localize.T("Reminder Date ")<span class="red">@Localize.T("*")</span></div>
                <div class="input_group_for_date add-on" id="CustomerNoteReminderDate_custom">
                    @Html.TextBoxFor(x => x.ReminderDate, "{0:MM/dd/yy}", new { @class = "form-control datepicker date_pick_bg", id = "CustomerNoteReminderDate" })
                    <div class="input-group-btn">
                        <btn class="btn">
                            <i class="fa fa-calendar" aria-hidden="true" style="cursor:pointer;"></i>
                        </btn>
                    </div>
                </div>

            </div>
            <div class="form-group clearfix">
                <div class="note_text">@Localize.T("Reminder Time")<span class="red">@Localize.T("*")</span></div>
                @Html.DropDownListFor(x => x.RemainderTime, ViewBag.ReminderTime as List<SelectListItem>, new { @class = "form-control" })
            </div>
            @if (PermissionChecker.IsPermitted(PermissionList.CustomerPermissions.ShowReminderCompletedDateOnAddReminder))
            {
                <div class="form-group clearfix">
                    <span class="note_text">@Localize.T("Completed By")</span>
                    <div class="input_group_for_date add-on" id="CustomerNoteReminderEndDate_custom">
                        @Html.TextBoxFor(x => x.ReminderEndDate, "{0:MM/dd/yy}", new { @class = "form-control datepicker  date_pick_bg", id = "CustomerNoteReminderEndDate" })
                        <div class="input-group-btn">
                            <btn class="btn">
                                <i class="fa fa-calendar" aria-hidden="true" style="cursor:pointer;"></i>
                            </btn>
                        </div>
                    </div>

                </div>
            }
            @if (PermissionChecker.IsPermitted(PermissionList.CustomerPermissions.ShowNoteAndReminderTeam))
            {
                <div class="form-group clearfix reminder_for">
                    <span class="note_text">@Localize.T("Reminder Team")</span>
                    <select class="form-control" id="TeamSettingId" datarequred="true" style="width:100%">
                        <option value="-1">Select One</option>
                        @if (ViewBag.TeamList != null)
                        {
                            foreach (var teamItem in (List<HS.Entities.TeamSetting>)ViewBag.TeamList)
                            {
                                <option @(Model.TeamSettingId == teamItem.Id ? "selected" : "") value="@teamItem.Id" userid="@teamItem.UserId">@teamItem.Name</option>
                            }
                        }
                    </select>
                </div>
            }
            <div class="form-group clearfix reminder_for">
                <span class="note_text">@Localize.T("Reminder For")<span class="red">@Localize.T("*")</span></span>
                @Html.DropDownListFor(x => x.EmpId, (List<SelectListItem>)ViewBag.SalesPersonList, new { @class = "form-control selectpicker", id = "AssignName", @multiple = "multiple" })
            </div>
            <div>
                <label for="IsEmailReminder" class="label-cbx">
                    <input id="IsEmailReminder" type="checkbox" class="invisible" @(Model.IsEmail.Value ? "checked" : "") autocomplete="off">
                    <div class="checkbox">
                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                            <polyline points="4 11 8 15 16 6"></polyline>
                        </svg>
                    </div>
                    <label for="IsEmailReminder" style="cursor:pointer;" class="lbl-CheckBoxText pad_none">@Localize.T("Email Reminder")</label>
                </label>
            </div>

            <div>
                <label for="IsTextReminder" class="label-cbx">
                    <input id="IsTextReminder" type="checkbox" class="invisible" @(Model.IsText.Value ? "checked" : "") autocomplete="off">
                    <div class="checkbox">
                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                            <polyline points="4 11 8 15 16 6"></polyline>
                        </svg>
                    </div>
                    <label for="IsTextReminder" style="cursor:pointer;" class="lbl-CheckBoxText pad_none">@Localize.T("Text Reminder")</label>
                </label>

            </div>
            <div class="instantNotificationDiv hidden">
                <label for="IsInstantNotification" class="label-cbx">
                    <input id="IsInstantNotification" type="checkbox" class="invisible" autocomplete="off">
                    <div class="checkbox">
                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                            <polyline points="4 11 8 15 16 6"></polyline>
                        </svg>
                    </div>
                    <label for="IsInstantNotification" style="cursor:pointer;" class="lbl-CheckBoxText pad_none">@Localize.T("Instant Notification")</label>
                </label>

            </div>
        </div>
    </div>
</div>

<section class="footer-section">
    <footer class="footer">
        @if (Model.IsClose == false)
        {
            <button id="btn-AddFollowUpReminder" id-val="@Model.CustomerId" type="button" class="btn" title="@Localize.T("Save")"><i class="fa fa-floppy-o" aria-hidden="true"></i>@Localize.T(" Save")</button>
            <button id="btn-IsComplete" id-val="@Model.CustomerId" idval1="@Model.EmployeeID" type="button" class="btn btn-IsComplete">@Localize.T(" Complete")</button>
        }
        else 
        {
            <button id="btn-AddFollowUpReminder" id-val="@Model.CustomerId" type="button" class="btn" title="@Localize.T("Save")"><i class="fa fa-floppy-o" aria-hidden="true"></i>@Localize.T(" Save")</button>
        }
    </footer>
</section>