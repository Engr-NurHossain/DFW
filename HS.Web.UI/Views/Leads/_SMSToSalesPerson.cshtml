@{
    Layout = null;
}
@model HS.Entities.Customer
@using Localize = HS.Web.UI.Helper.LanguageHelper
<script>
    var id = '@Model.Id';
    var CustomerGuid = '@Model.CustomerId';
    var PrimaryPhone = '@Model.SecondaryPhone';
    var SmsToSupplier = function () {
        var customerId = $("#SmsToSupplier").attr('idval2');
        var mailBody = $('.txtAreaMailBody1').val();
        var contact = $(".customerCellNO").val();
        var url = domainurl + "/SMS/SMSToSalesPerson";
        //if (mailBody == "" || contact == "") {
        //    OpenErrorMessageNew("Error!", "Please fill text message body and contact number", "");
        //}
        if (mailBody == "") {
            OpenErrorMessageNew("Error!", "Please fill text message body", "");
        }
        else {

            if (CommonUiValidation())

            {
            if ($("#CC_Numbers").val() != "") {
                contact += ";" + $("#CC_Numbers").val();
            }
            $.ajax({
                url: url,
                data: { customerId, mailBody, contact },
                type: "Post",
                dataType: "Json"
            }).done(function (data) {
                if (data.result == true) {
                    $('.close').trigger('click');
                    setTimeout(function () {
                        OpenSuccessMessageNew("Success!", "Text Msg send successfully.");
                        if (typeof (OpenCorrespondenceTab) != "undefined") {
                            OpenCorrespondenceTab();
                        } else {
                            $(".Lead_Send_Email_Tab").load(domainurl + "/Leads/CorrespondenceList/?CustomerId=" + CustomerGuid);
                            parent.$("#CorrespondenceTab").load(domainurl + "/Leads/CorrespondenceList?CustomerId=" + CustomerGuid);
                            LeadDetailTabCount();
                        }
                    }, 600);
                    //setTimeout(function () {
                    //    OpenSuccessMessageNew("Success!", "Text Msg send successfully.", "");
                    //    $(".Lead_Send_Email_Tab").load(domainurl + "/Leads/CorrespondenceList/?CustomerId=" + CustomerGuid);
                    //    parent.$("#CorrespondenceTab").load(domainurl + "/Leads/CorrespondenceList?CustomerId=" + CustomerGuid);
                    //}, 600);
                }
                //[Shariful-24-9-19]
                else if (data.result == false) {
                    $('.close').trigger('click');
                    setTimeout(function () {
                        OpenErrorMessageNew("Error!", data.message);
                    }, 600);
                }
                //[~Shariful-24-9-19]
                else {
                    $('.close').trigger('click');
                    setTimeout(function () {
                        OpenSuccessMessageNew("Success!", data.message, "");
                    }, 600);
                }
                //parent.LoadLeads(true);
            });
        }
      }
    }
    function FormatCellNumber(cvalue) {
        var ValueCleanCell = "";
        if (cvalue != undefined && cvalue != "" && cvalue != null) {
            cvalue = cvalue.replace(/[-  ]/g, '');
            if (cvalue.length == 10 && isNumeric(cvalue) == true) {
                ValueCleanCell = cvalue.replace(/(\d{3})(\d{3})(\d{4})/, "($1) $2-$3");
                $("#CellNo").css({ "border": "1px solid #babec5" });
            }
            else if (cvalue.length > 10) {
                ValueCleanCell = cvalue;
                $("#CellNo").css({ "border": "1px solid red" });
            }
            else {
                $("#CellNo").css({ "border": "1px solid red" });
                ValueCleanCell = cvalue;
            }
        }
        return ValueCleanCell;
    }
    function Formatempty(emptyvalue) {
         //alert("4");
        var ValueCleanempty = "";
        if (emptyvalue != undefined && emptyvalue != "" && emptyvalue != null) {
            emptyvalue = emptyvalue.replace(/[-  ]/g, '');
            if (emptyvalue.length == 10 && isNumeric(emptyvalue) == true) {
                ValueCleanempty = emptyvalue.replace(/(\d{3})(\d{3})(\d{4})/, "($1) $2-$3");
                $("#empty").css({ "border": "1px solid #babec5" });
            }
            else if (emptyvalue.length > 10) {
                ValueCleanempty = emptyvalue;
                $("#empty").css({ "border": "1px solid red" });
            }
            else {
                $("#CellNo").css({ "border": "1px solid red" });
                ValueCleanempty = emptyvalue;
            }
        }
        return ValueCleanempty;
    }
    function FormatePhoneNumber(Value) {
         //alert("3");
        var ValueClean = "";
        if (Value != undefined && Value != "" && Value != null) {
            Value = Value.replace(/[-  ]/g, '');
            if (Value.length == 10 && isNumeric(Value) == true) {
                ValueClean = Value.replace(/(\d{3})(\d{3})(\d{4})/, "($1) $2-$3");
                $("#PrimaryPhone").css({ "border": "1px solid #babec5" });
            }
            else if (Value.length > 10) {
                ValueClean = Value;
                $("#PrimaryPhone").css({ "border": "1px solid red" });
            }
            else {
                $("#PrimaryPhone").css({ "border": "1px solid red" });
                ValueClean = Value;
            }
        }
        return ValueClean;
    }
    function FormatSecondaryNumber(svalue) {
         //alert("2");
        var ValueCleanSecondary = "";
        if (svalue != undefined && svalue != "" && svalue != null) {
            svalue = svalue.replace(/[-  ]/g, '');
            if (svalue.length == 10) {
                ValueCleanSecondary = svalue.replace(/(\d{3})(\d{3})(\d{4})/, "($1) $2-$3");
                $("#SecondaryPhone").css({ "border": "1px solid #babec5" });
            }
            else if (svalue.length > 10) {
                ValueCleanSecondary = svalue;
                $("#SecondaryPhone").css({ "border": "1px solid red" });
            }
            else {
                $("#SecondaryPhone").css({ "border": "1px solid red" });
                ValueCleanSecondary = svalue;
            }
        }
        return ValueCleanSecondary;
    }

    function FormatMobileNo(mvalue) {
        //alert("1");
        var ValueCleanMobileNo = "";
        if (mvalue != undefined && mvalue != "" && mvalue != null) {
            mvalue = mvalue.replace(/[-  ]/g, '');
            if (mvalue.length == 10) {
                ValueCleanMobileNo = mvalue.replace(/(\d{3})(\d{3})(\d{4})/, "($1) $2-$3");
                $(".MobileNo").css({ "border": "1px solid #babec5" });
            }
            else if (mvalue.length > 10) {
                ValueCleanMobileNo = mvalue;
                $(".MobileNo").css({ "border": "1px solid red" });
            }
            else {
                $(".MobileNo").css({ "border": "1px solid red" });
                ValueCleanMobileNo = mvalue;
            }
        }
        return ValueCleanSecondary;
    }
    function FormatCCNumber(CCvalue) {
        var ValueCleanCC = "";
        if (CCvalue != undefined && CCvalue != "" && CCvalue != null) {
            CCvalue = CCvalue.replace(/[-  ]/g, '');
            if (CCvalue.length == 10) {
                ValueCleanCC = CCvalue.replace(/(\d{3})(\d{3})(\d{4})/, "($1) $2-$3");
                $("#CC_Numbers").css({ "border": "1px solid #babec5" });
            }
            else if (CCvalue.length > 10) {
                ValueCleanCC = CCvalue;
                $("#CC_Numbers").css({ "border": "1px solid red" });
            }
            else {
                $("#CC_Numbers").css({ "border": "1px solid red" });
                ValueCleanCC = CCvalue;
            }
        }
        return ValueCleanCC;
    }
    $(document).ready(function () {
        var height = window.innerHeight - 120;
        $(".slaesPersonContainer_outer").height(height);
        //$('.selectpicker').selectpicker();
        $("#SmsToSupplier").click(function () {
            SmsToSupplier();
        })
              $("#CellNo").keyup(function () {
            var cPhoneNumber = $(this).val();
            if (cPhoneNumber != undefined && cPhoneNumber != null && cPhoneNumber != "") {
                var ccleanPhoneNumber = FormatCellNumber(cPhoneNumber);
                $(this).val(ccleanPhoneNumber);
            }
           if ($("#CellNo").val() == "") {
                $("#CellNo").addClass("required")
            } else {
                $("#CellNo").removeClass("required")
            }
        });
        $("#empty").keyup(function () {
            var emptyPhoneNumber = $(this).val();
            if (emptyPhoneNumber != undefined && emptyPhoneNumber != null && emptyPhoneNumber != "") {
                var emptycleanPhoneNumber = Formatempty(emptyPhoneNumber);
                $(this).val(emptycleanPhoneNumber);
            }

            if ($("#empty").val() == "") {
                $("#empty").addClass("required")
            } else {
                $("#empty").removeClass("required")
            }
        });
        $("#PrimaryPhone").keyup(function () {
            var PhoneNumber = $(this).val();
            if (PhoneNumber != undefined && PhoneNumber != null && PhoneNumber != "") {
                var cleanPhoneNumber = FormatePhoneNumber(PhoneNumber);
                $(this).val(cleanPhoneNumber);
            }

            if ($("#PrimaryPhone").val() == "") {
                $("#PrimaryPhone").addClass("required")
            } else {
                $("#PrimaryPhone").removeClass("required")
            }
        });
        $("#SecondaryPhone").keyup(function () {
            console.log()
            var sPhoneNumber = $(this).val();
            if (sPhoneNumber != undefined && sPhoneNumber != null && sPhoneNumber != "") {
                var scleanPhoneNumber = FormatSecondaryNumber(sPhoneNumber);
                $(this).val(scleanPhoneNumber);
            }

            if ($("#SecondaryPhone").val() == "") {
                $("#SecondaryPhone").addClass("required")
            } else {
                $("#SecondaryPhone").removeClass("required")
            }
        });
        $(".MobileNo").keyup(function () {
            var mPhoneNumber = $(this).val();
            if (mPhoneNumber != undefined && mPhoneNumber != null && mPhoneNumber != "") {
                var mcleanPhoneNumber = FormatMobileNo(mPhoneNumber);
                $(this).val(mcleanPhoneNumber);
            }

            if ($(".MobileNo").val() == "") {
                $(".MobileNo").addClass("required")
            } else {
                $(".MobileNo").removeClass("required")
            }
        });
        $("#CC_Numbers").keyup(function () {
            var CCPhoneNumber = $(this).val();
            if (CCPhoneNumber != undefined && CCPhoneNumber != null && CCPhoneNumber != "") {
                var CCcleanPhoneNumber = FormatCCNumber(CCPhoneNumber);
                $(this).val(CCcleanPhoneNumber);
            }
            if ($("#CC_Numbers").val() == "") {
                $("#CC_Numbers").addClass("required")
            } else {
                $("#CC_Numbers").removeClass("required")
            }
        });
    })
</script>
<style>
    .slaesPersonContainer_outer {
       width:100%;
       float:left;
       padding-left:15px;
       padding-right:15px;
       overflow-x:hidden;
       overflow-y:auto;
    }
    .correspondence-header {
        width: 100%;
        background-color: #f4f5f8;
    }

    .heder-txt {
        font-size: 2rem;
        font-weight: 400;
        color: #393a3d;
        padding: 12px 10px;
    }

    .smstosalesfooter_section {
        background: #eceef1;
        height: 50px;
        width: 100%;
        float:left;
    }

    .SaveCancelDiv {
        width: 95%;
        padding-top: 8px;
    }

    .btn-sms {
        float: right;
        background-color: green;
        color: white;
    }

        .btn-sms:hover {
            color: white;
        }
        .span_style {
                font-weight: bold;
    margin-top: 10px;
    font-size: 14px;
        }
        .slaesPersonContainer,
        .CC_Container,
        .msg_body {
            margin-bottom:15px;
        }
</style>
<div class="form-group correspondence-header">
    <div class="heder-txt">@Localize.T("New TEXT MSG")</div>
</div>
<div class="slaesPersonContainer_outer">
    <div class="slaesPersonContainer">
        @if (Model.LeadCorrespondence != null)
        {
            <span class="span_style">@Localize.T("Contact Number")</span>
            @Html.TextBoxFor(x => x.LeadCorrespondence.ToMobileNo, new { @class = "form-control MobileNo", @readonly = "readonly", @placeholder = "Example: (123) 456-7890", datarequired = "true" })

        }
        else
        {
            <span class="span_style">@Localize.T("Contact Number")</span><span class="red">*</span>
            if (!string.IsNullOrWhiteSpace(Model.CellNo))
            {
                <input type="text" class="form-control customerCellNO " maxlength="10" value="@Model.CellNo" id="CellNo" placeholder="Example: (123) 456-7890" datarequired="true" />
            }
            else if (!string.IsNullOrWhiteSpace(Model.SecondaryPhone))
            {
                <input type="text" class="form-control customerCellNO " maxlength="10" id="SecondaryPhone" placeholder="Example: (123) 456-7890" datarequired="true" />
            }
            else if (!string.IsNullOrWhiteSpace(Model.PrimaryPhone))
            {
                <input type="text" class="form-control customerCellNO " maxlength="10" value="@Model.PrimaryPhone" id="PrimaryPhone" placeholder="Example: (123) 456-7890" datarequired="true" />
            }
            else
            {
                <input type="text" class="form-control customerCellNO " maxlength="10" value="" id="empty" placeholder="Example: (123) 456-7890" datarequired="true" />
            }
        }
    </div>
    <div class="CC_Container">
        <span class="span_style">@Localize.T("CC Contact number(s)")</span>
        <input type="text" class="form-control" id="CC_Numbers" placeholder="Example: 123-456-7890" />
    </div>
    <div class="form-group clearfix positionRel msg_body">
        @if (Model.LeadCorrespondence != null)
        {
            <span class="span_style">@Localize.T("Text Message Body")</span>
            @Html.TextAreaFor(x => x.LeadCorrespondence.BodyContent, new { @class = "form-control txtAreaMailBody1", placeholder = "Please add something to your text msg body" })
        }
        else
        {
            <span class="span_style">@Localize.T("Text Message Body")</span><span class="red">*</span>
            @Html.TextArea("mailBody", new { @class = "form-control txtAreaMailBody1", placeholder = "Please add something to your text msg body" })
        }
    </div>
</div>

<section class="smstosalesfooter_section">
    <footer class="footer">
        <div class="SaveCancelDiv">
            @if (Model.LeadCorrespondence == null)
            {
                <button type="button" id="SmsToSupplier" idval2="@Model.CustomerId" idval="@Model.FirstName @Model.LastName" class="btn btn-sms">
                    @Localize.T("Send TEXT MSG")
                </button>
            }
        </div>
    </footer>
</section>

