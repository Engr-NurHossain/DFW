2024-12-04 10:41:32.1586|ERROR|HS.Framework.DataAccess.BaseDataAccess|   
                    select En.*, 
                    emp.FirstName + ' ' +emp.LastName as AddedByText
                    from EstimatorNote En
                    left join Employee emp on emp.UserId = en.AddedBy
                    where En.CompanyId = 'c7e72006-6edf-4b5a-8589-bfd1b2dae7ba' and En.EstimatorId = '491'|System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'EstimatorNote'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:93f49584-66db-4ad5-90db-44272594290b
Error Number:208,State:1,Class:16
2024-12-04 10:50:09.5513|ERROR|HS.Framework.DataAccess.BaseDataAccess|   
                    select En.*, 
                    emp.FirstName + ' ' +emp.LastName as AddedByText
                    from EstimatorNote En
                    left join Employee emp on emp.UserId = en.AddedBy
                    where En.CompanyId = 'c7e72006-6edf-4b5a-8589-bfd1b2dae7ba' and En.EstimatorId = '492'|System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'EstimatorNote'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:93f49584-66db-4ad5-90db-44272594290b
Error Number:208,State:1,Class:16
2024-12-04 16:30:44.2233|ERROR|HS.Framework.DataAccess.BaseDataAccess|DECLARE @CompanyId uniqueidentifier
                                Set @CompanyId = 'c7e72006-6edf-4b5a-8589-bfd1b2dae7ba'

                                DECLARE @EmployeeId uniqueidentifier
                                Set @EmployeeId = 'ac0ce890-bc5b-4c34-aab2-017af19bedf6'

                                DECLARE @firstdate nvarchar(50)
                                Set @firstdate = '2024-11-30 18:00:00'

                                DECLARE @lastdate nvarchar(50)
                                Set @lastdate = '2024-12-31 17:59:59'

                                DECLARE @previousfirstdate nvarchar(50)
                                Set @previousfirstdate = '2024-10-31 18:00:00'

                                DECLARE @previouslastdate nvarchar(50)
                                Set @previouslastdate = '2024-12-01 17:59:59'

                                DECLARE @firstdatecustomer nvarchar(50)
                                Set @firstdatecustomer = '2024-12-01 00:00:00'

                                DECLARE @lastdatecustomer nvarchar(50)
                                Set @lastdatecustomer = '2024-12-31 23:59:59'

                                DECLARE @previousfirstdatecustomer nvarchar(50)
                                Set @previousfirstdatecustomer = '2024-11-01 00:00:00'

                                DECLARE @previouslastdatecustomer nvarchar(50)
                                Set @previouslastdatecustomer = '2024-12-01 23:59:59'

                                select c.Id,c.CustomerId, C.CreatedDate, c.MonthlyMonitoringFee, c.IsActive,c.TransferCustomerId,c.MoveCustomerId,c.SalesDate, c.Soldby, c.Installer, c.QA1, c.QA2 into #customer from  Customer c
                                Left Join CustomerCompany cc on cc.CustomerId = c.CustomerId
                                where cc.CompanyId = @CompanyId AND c.IsActive = 1 and c.JoinDate is not null
                                select cs.* into #Customer2 from #customer cs
                                select
                                (Select Count(lead.Id) from #Customer2 lead
                                Left JOin CustomerCompany cc on cc.CustomerId = lead.CustomerId
                                where cc.IsLead = 1
								and lead.CreatedDate between @firstdate and @lastdate
								) FirstMonthLeadCount,
                                (Select Count(lead.Id) from #Customer2 lead
                                Left JOin CustomerCompany cc on cc.CustomerId = lead.CustomerId
                                where cc.IsLead = 1
								and lead.CreatedDate between @previousfirstdate and @previouslastdate) LastMonthLeadCount,
                                (select COUNT(cus.Id) from #Customer2 cus
                                left join CustomerCompany cc on cc.CustomerId = cus.CustomerId and cc.CompanyId = @CompanyId
                                where cc.IsLead = 0 and cus.IsActive=1 and cus.TransferCustomerId IS NULL and (cus.MoveCustomerId='00000000-0000-0000-0000-000000000000' or cus.MoveCustomerId IS NULL)
								and cus.SalesDate between @firstdatecustomer and @lastdatecustomer ) FirstMonthCustomerCount,
								(select COUNT(cus.Id) from #Customer2 cus
                                left join CustomerCompany cc on cc.CustomerId = cus.CustomerId and cc.CompanyId = @CompanyId
                                where cc.IsLead = 0 and cus.IsActive=1 and cus.TransferCustomerId IS NULL and (cus.MoveCustomerId='00000000-0000-0000-0000-000000000000' or cus.MoveCustomerId IS NULL)
								and cus.SalesDate between @previousfirstdatecustomer and @previouslastdatecustomer ) LastMonthCustomerCount,

                                (select count(id) from Activity where CreatedDate between @firstdate and @lastdate  ) as FirstMonthActivitiesCount,
	                            (select count(id) from Activity where CreatedDate between @previousfirstdate and @previouslastdate  ) as LastMonthActivitiesCount,

	                            (select count(id) from Opportunity where CreatedDate between @firstdate and @lastdate  ) as FirstMonthOpportunitiesCount,
	                            (select count(id) from Opportunity where CreatedDate between @previousfirstdate and @previouslastdate  ) as LastMonthOpportunitiesCount,
               

                                (select ISNULL(sum(inv.TotalAmount),0) from #Customer2 cs4
								left join Invoice inv
								on inv.CustomerId = cs4.CustomerId
                                where inv.IsEstimate = 0
                                and inv.CreatedDate between @firstdate and @lastdate) InvoiceAmount,
                                (select COUNT(*) from Invoice inv
								left join #Customer2 cs4 on cs4.CustomerId = inv.CustomerId
                                where inv.IsEstimate = 0
                                and inv.CreatedDate between @firstdate and @lastdate
                                ) InvoiceCount,
                                (select ISNULL(sum(inv.TotalAmount),0) from #Customer2 cs5
                                left join Invoice inv
								on inv.CustomerId = cs5.CustomerId
                                where inv.IsEstimate = 1
                                and inv.CreatedDate between @firstdate and @lastdate) EstimateAmount,
                                (select COUNT(*) from Invoice inv
								left join #Customer2 cs4 on cs4.CustomerId = inv.CustomerId
                                where inv.IsEstimate = 1
                                and inv.CreatedDate between @firstdate and @lastdate
                                ) EstimateCount,
                                (select sum(CONVERT(float, cs3.MonthlyMonitoringFee)) from #Customer2 cs3
                                where cs3.MonthlyMonitoringFee != '-1'
                                and cs3.MonthlyMonitoringFee is not null
                                and cs3.IsActive = 1
                                and cs3.CreatedDate between @firstdate and @lastdate) MMRCount,
                                (select COUNT(*) from #Customer2 cs3
                                where cs3.MonthlyMonitoringFee != '-1'
                                and cs3.MonthlyMonitoringFee is not null
								and cs3.MonthlyMonitoringFee != ''
                                and cs3.IsActive = 1
                                and cs3.SalesDate between @firstdate and @lastdate) CountMMR
                                ,0 as FirstMonthOrder,0 as LastMonthOrder
                                ,0 as FirstMonthRevenueCount,0 as LastMonthRevenueCount,
                                (select ISNULL(sum(inv.BalanceDue),0) from #Customer2 cs6
                                left join Invoice inv
								on inv.CustomerId = cs6.CustomerId
                                where inv.IsEstimate = 0
                                and inv.BalanceDue is not null
                                and inv.IsEstimate = 0
                                and inv.Status != 'Cancel') UnpaidAmount,
                                (select ISNULL(count(inv.Id), 0) from #Customer2 cs7
                                left join Invoice inv
								on inv.CustomerId = cs7.CustomerId
                                where inv.IsEstimate = 0
                                and inv.BalanceDue is not null
                                and inv.IsEstimate = 0
                                and inv.Status != 'Cancel'
                                and inv.Status != 'Paid') UnpaidCount
                                ,
                                ((select isnull(sum(trans.Amount), 0) from #Customer2 cs8
								left join [Transaction] trans
								on trans.CustomerId = cs8.CustomerId
                                ) +
                                (select ISNULL(sum(pr.Amount), 0) from #Customer2 cs9
								left join PaymentRevenue pr
								on pr.CustomerId = cs9.CustomerId
                                )) TotalRevenue,
                                (select count(trans.Id) from #Customer2 cs10
								left join [Transaction] trans
								on trans.CustomerId = cs10.CustomerId
                                ) TotaltTransactions
                                
                                into #FinalCustomer
                                from #Customer2 cs2

								select * from #FinalCustomer
								group by FirstMonthLeadCount, LastMonthLeadCount, FirstMonthCustomerCount, LastMonthCustomerCount, 
                                FirstMonthActivitiesCount,LastMonthActivitiesCount,
		                        FirstMonthOpportunitiesCount,LastMonthOpportunitiesCount,
                                InvoiceAmount, EstimateAmount, UnpaidAmount, UnpaidCount,MMRCount, TotalRevenue, TotaltTransactions, InvoiceCount, EstimateCount, CountMMR, FirstMonthOrder, LastMonthOrder, FirstMonthRevenueCount, LastMonthRevenueCount

                                drop table #Customer2
                                drop table #customer
                                drop table #FinalCustomer|System.Data.SqlClient.SqlException (0x80131904): Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding. ---> System.ComponentModel.Win32Exception (0x80004005): The wait operation timed out
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:0b21ec22-04b1-4053-9977-d125c97aa5e5
Error Number:-2,State:0,Class:11
2024-12-04 16:33:43.3021|ERROR|HS.Framework.DataAccess.BaseDataAccess| declare @pagestart int
                                    declare @pageend int
                                    declare @pageno int
                                    declare @pagesize int
                                    set @pageno = 1
                                    set @pagesize = 100


                                    set @pagestart=(@pageno-1)* @pagesize 
                                    set @pageend = @pagesize

                                    SELECT 
                                        _eqp.*,
                                        _eqpClass.Name as EquipmentClass,
	                                    ((Select ISNULL(SUM(invinner.Quantity),0) from InventoryWarehouse invinner where invinner.EquipmentId=_eqp.EquipmentId and Type='Add' And invinner.LocationId = '22222222-2222-2222-2222-222222222222')- (Select ISNULL(SUM(invinner2.Quantity),0) from InventoryWarehouse invinner2 where invinner2.EquipmentId=_eqp.EquipmentId and Type='Release' And invinner2.LocationId = '22222222-2222-2222-2222-222222222222')
                                            	-(select ISNull(Sum(b.Quantity),0) from AssignedInventoryTechReceived b where b.EquipmentId = _eqp.EquipmentId AND b.TechnicianId =
	                                       '22222222-2222-2222-2222-222222222222' And b.IsApprove = 0 and b.IsDecline = 0)
                                        ) as Quantity,
                                         sup.CompanyName as SupplierName,
                                          _eqpType.Name as Category,
										  --_eqp.SupplierCost as VendorCost,
                                          eqpv.Cost as VendorCost,
										  manu.Name as ManufacturerName,
                                          
                                          (SELECT 
                                          ISNULL(SUM(Quantity),0) AS TotalQty
                                          FROM
                                          (SELECT 
                                          ISNULL(SUM(CASE WHEN Type = 'ADD' THEN Quantity ELSE -Quantity END),0) AS Quantity
                                          FROM 
                                          InventoryTech
                                          WHERE 
                                          EquipmentId = _eqp.EquipmentId AND
										  TechnicianId NOT IN 
										  ('00000000-0000-0000-0000-000000000000','22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                     '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                     '22222222-2222-2222-2222-222222222233','22222222-2222-2222-2222-222222222222','22222222-2222-2222-2222-222222222221')
                                          GROUP BY 
                                          TechnicianId										  
                                          HAVING 
                                          SUM(CASE WHEN Type = 'ADD' THEN Quantity ELSE -Quantity END) >= 0) AS Qty)-
										 (select ISNULL(Sum(b.Quantity),0) from AssignedInventoryTechReceived b where b.EquipmentId = _eqp.EquipmentId AND b.TechnicianId NOT IN
										 ('00000000-0000-0000-0000-000000000000','22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                     '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                     '22222222-2222-2222-2222-222222222233','22222222-2222-2222-2222-222222222222','22222222-2222-2222-2222-222222222221') And b.IsApprove = 0 and b.IsDecline = 0)
										  as technician,
                                        
                                        (select AVG(newtab.UnitPrice) from
                                        (select TOP 3 iwin.*, pod.UnitPrice from InventoryWarehouse iwin left join PurchaseOrderDetail pod on pod.PurchaseOrderId=iwin.PurchaseOrderId
                                        where iwin.PurchaseOrderId != '' and (UnitPrice!=0 or UnitPrice is not null) AND iwin.EquipmentId=_eqp.EquipmentId
                                        AND pod.EquipmentId=_eqp.EquipmentId order by LastUpdatedDate desc)
                                        newtab group by EquipmentId) as FIFO,
                                        ([dbo].GetAssignedInventoryTechQuantityCount(null,_eqp.EquipmentId,1)) as InQueue,
                                   ((select ISNULL(SUM(invinner.Quantity),0) from [InventoryWarehouse] invinner where invinner.EquipmentId=_eqp.EquipmentId and Type='Add'  and invinner.LocationId IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                              '22222222-2222-2222-2222-222222222233'))

								  -

                                    (select ISNULL(sum(Quantity),0) from dbo.InventoryWarehouse b where b.EquipmentId  = _eqp.EquipmentId  and Type='Release'
			                        AND b.LocationId IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                               '22222222-2222-2222-2222-222222222233'))
								   -



                                   (select ISNULL(Sum(b.Quantity),0) from AssignedInventoryTechReceived b where b.EquipmentId = _eqp.EquipmentId AND b.TechnicianId IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                               '22222222-2222-2222-2222-222222222233') And b.IsApprove = 0 and b.IsDecline = 0)) as LocQoH,
										  ISNULL((((Select ISNULL(SUM(invinner.Quantity),0) from InventoryWarehouse invinner where invinner.EquipmentId=_eqp.EquipmentId and Type='Add')- (Select ISNULL(SUM(invinner2.Quantity),0) from InventoryWarehouse invinner2 where invinner2.EquipmentId=_eqp.EquipmentId and Type='Release'))
										  +
										  (select ISNULL(SUM(tech.Quantity), 0) from InventoryTech tech where _eqp.EquipmentId = tech.EquipmentId and tech.[Type] = 'Add'
                                          AND tech.TechnicianId Not IN('22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                     '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                     '22222222-2222-2222-2222-222222222233')  
                                          ) 
                                       - (select ISNULL(SUM(tech.Quantity), 0) from InventoryTech tech where _eqp.EquipmentId = tech.EquipmentId and tech.[Type] = 'Release'
                                    AND tech.TechnicianId Not IN('22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                               '22222222-2222-2222-2222-222222222233')
                                        )), 0) as TotalEq
                                          
                                          INTO #CustomerData
                                          FROM Equipment _eqp
                                            LEFT JOIN EquipmentClass _eqpClass
		                                    ON _eqp.EquipmentClassId = _eqpClass.Id and _eqp.CompanyId = _eqpClass.CompanyId
                                            left JOIN EquipmentVendor eqpv
											ON eqpv.EquipmentId = _eqp.EquipmentId
                                            and eqpv.IsPrimary=1
											 LEFT JOIN EquipmentType _eqpType
		                                    ON _eqp.EquipmentTypeId = _eqpType.Id and _eqp.CompanyId = _eqpType.CompanyId
                                            --left join Supplier sup on sup.Id = _eqp.SupplierId
                                            left join Supplier sup on sup.SupplierId = eqpv.SupplierId
											left join Manufacturer manu
											ON manu.Id = _eqp.ManufacturerId
		                                    WHERE 
			                                    _eqp.CompanyId = 'c7e72006-6edf-4b5a-8589-bfd1b2dae7ba'
                                                and _eqp.IsActive in (1)
                                                AND _eqp.EquipmentClassId = '1'
                                                
                                                
                                
                                           
                                           SELECT 
                                           Id,EquipmentId,CompanyId,Name,SKU,ManufacturerId,SupplierId,EquipmentTypeId,
										   EquipmentClassId,Point,SupplierCost,Cost,Retail,EqOrder,Service,AsOfDate,reorderpoint,
										   IsActive,Comments,CreatedDate,LastUpdatedDate,LastUpdatedBy,POOrder,IsKit,RepCost,RackNo,Location,
										   Type,Model,Finish,Capacity,EquipmentPriceIsCharged,ModelNumber,Barcode,Tag,Note,IsWarrenty,IsARBEnabled,
										   IsUpsold,IsTaxable,OverheadRate,ProfitRate,Unit,TaggedEmail,IsIncludeEstimate,LaborPrice,WarehouseReorder,
										   EquipmentClass,Quantity,SupplierName,Category,VendorCost,ManufacturerName,technician,FIFO,InQueue,LocQoH
										   ,TotalEq = ISNULL(Quantity,0) + ISNULL(technician,0) + ISNULL(LocQoH,0) + ISNULL(InQueue,0)
                                           INTO #CustomerFilterData
                                           FROM #CustomerData
                                           
                                
	                                       SELECT TOP (@pagesize)
                                           *
                                           FROM #CustomerFilterData _cfd
                                           where   Id NOT IN(Select TOP (@pagestart)  Id from #CustomerData _cd order by Id desc)
                                           order by Id desc
                                           select count(*) [TotalCount]
                                           from #CustomerFilterData

                                           DROP TABLE #CustomerData
                                           DROP TABLE #CustomerFilterData
|System.Data.SqlClient.SqlException (0x80131904): Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding. ---> System.ComponentModel.Win32Exception (0x80004005): The wait operation timed out
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:0b21ec22-04b1-4053-9977-d125c97aa5e5
Error Number:-2,State:0,Class:11
2024-12-04 16:44:24.1262|ERROR|HS.Framework.DataAccess.BaseDataAccess| declare @pagestart int
                                    declare @pageend int
                                    declare @pageno int
                                    declare @pagesize int
                                    set @pageno = 1
                                    set @pagesize = 100


                                    set @pagestart=(@pageno-1)* @pagesize 
                                    set @pageend = @pagesize

                                    SELECT 
                                        _eqp.*,
                                        _eqpClass.Name as EquipmentClass,
	                                    ((Select ISNULL(SUM(invinner.Quantity),0) from InventoryWarehouse invinner where invinner.EquipmentId=_eqp.EquipmentId and Type='Add' And invinner.LocationId = '22222222-2222-2222-2222-222222222222')- (Select ISNULL(SUM(invinner2.Quantity),0) from InventoryWarehouse invinner2 where invinner2.EquipmentId=_eqp.EquipmentId and Type='Release' And invinner2.LocationId = '22222222-2222-2222-2222-222222222222')
                                            	-(select ISNull(Sum(b.Quantity),0) from AssignedInventoryTechReceived b where b.EquipmentId = _eqp.EquipmentId AND b.TechnicianId =
	                                       '22222222-2222-2222-2222-222222222222' And b.IsApprove = 0 and b.IsDecline = 0)
                                        ) as Quantity,
                                         sup.CompanyName as SupplierName,
                                          _eqpType.Name as Category,
										  --_eqp.SupplierCost as VendorCost,
                                          eqpv.Cost as VendorCost,
										  manu.Name as ManufacturerName,
                                          
                                          (SELECT 
                                          ISNULL(SUM(Quantity),0) AS TotalQty
                                          FROM
                                          (SELECT 
                                          ISNULL(SUM(CASE WHEN Type = 'ADD' THEN Quantity ELSE -Quantity END),0) AS Quantity
                                          FROM 
                                          InventoryTech
                                          WHERE 
                                          EquipmentId = _eqp.EquipmentId AND
										  TechnicianId NOT IN 
										  ('00000000-0000-0000-0000-000000000000','22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                     '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                     '22222222-2222-2222-2222-222222222233','22222222-2222-2222-2222-222222222222','22222222-2222-2222-2222-222222222221')
                                          GROUP BY 
                                          TechnicianId										  
                                          HAVING 
                                          SUM(CASE WHEN Type = 'ADD' THEN Quantity ELSE -Quantity END) >= 0) AS Qty)-
										 (select ISNULL(Sum(b.Quantity),0) from AssignedInventoryTechReceived b where b.EquipmentId = _eqp.EquipmentId AND b.TechnicianId NOT IN
										 ('00000000-0000-0000-0000-000000000000','22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                     '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                     '22222222-2222-2222-2222-222222222233','22222222-2222-2222-2222-222222222222','22222222-2222-2222-2222-222222222221') And b.IsApprove = 0 and b.IsDecline = 0)
										  as technician,
                                        
                                        (select AVG(newtab.UnitPrice) from
                                        (select TOP 3 iwin.*, pod.UnitPrice from InventoryWarehouse iwin left join PurchaseOrderDetail pod on pod.PurchaseOrderId=iwin.PurchaseOrderId
                                        where iwin.PurchaseOrderId != '' and (UnitPrice!=0 or UnitPrice is not null) AND iwin.EquipmentId=_eqp.EquipmentId
                                        AND pod.EquipmentId=_eqp.EquipmentId order by LastUpdatedDate desc)
                                        newtab group by EquipmentId) as FIFO,
                                        ([dbo].GetAssignedInventoryTechQuantityCount(null,_eqp.EquipmentId,1)) as InQueue,
                                   ((select ISNULL(SUM(invinner.Quantity),0) from [InventoryWarehouse] invinner where invinner.EquipmentId=_eqp.EquipmentId and Type='Add'  and invinner.LocationId IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                              '22222222-2222-2222-2222-222222222233'))

								  -

                                    (select ISNULL(sum(Quantity),0) from dbo.InventoryWarehouse b where b.EquipmentId  = _eqp.EquipmentId  and Type='Release'
			                        AND b.LocationId IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                               '22222222-2222-2222-2222-222222222233'))
								   -



                                   (select ISNULL(Sum(b.Quantity),0) from AssignedInventoryTechReceived b where b.EquipmentId = _eqp.EquipmentId AND b.TechnicianId IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                               '22222222-2222-2222-2222-222222222233') And b.IsApprove = 0 and b.IsDecline = 0)) as LocQoH,
										  ISNULL((((Select ISNULL(SUM(invinner.Quantity),0) from InventoryWarehouse invinner where invinner.EquipmentId=_eqp.EquipmentId and Type='Add')- (Select ISNULL(SUM(invinner2.Quantity),0) from InventoryWarehouse invinner2 where invinner2.EquipmentId=_eqp.EquipmentId and Type='Release'))
										  +
										  (select ISNULL(SUM(tech.Quantity), 0) from InventoryTech tech where _eqp.EquipmentId = tech.EquipmentId and tech.[Type] = 'Add'
                                          AND tech.TechnicianId Not IN('22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                     '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                     '22222222-2222-2222-2222-222222222233')  
                                          ) 
                                       - (select ISNULL(SUM(tech.Quantity), 0) from InventoryTech tech where _eqp.EquipmentId = tech.EquipmentId and tech.[Type] = 'Release'
                                    AND tech.TechnicianId Not IN('22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                               '22222222-2222-2222-2222-222222222233')
                                        )), 0) as TotalEq
                                          
                                          INTO #CustomerData
                                          FROM Equipment _eqp
                                            LEFT JOIN EquipmentClass _eqpClass
		                                    ON _eqp.EquipmentClassId = _eqpClass.Id and _eqp.CompanyId = _eqpClass.CompanyId
                                            left JOIN EquipmentVendor eqpv
											ON eqpv.EquipmentId = _eqp.EquipmentId
                                            and eqpv.IsPrimary=1
											 LEFT JOIN EquipmentType _eqpType
		                                    ON _eqp.EquipmentTypeId = _eqpType.Id and _eqp.CompanyId = _eqpType.CompanyId
                                            --left join Supplier sup on sup.Id = _eqp.SupplierId
                                            left join Supplier sup on sup.SupplierId = eqpv.SupplierId
											left join Manufacturer manu
											ON manu.Id = _eqp.ManufacturerId
		                                    WHERE 
			                                    _eqp.CompanyId = 'c7e72006-6edf-4b5a-8589-bfd1b2dae7ba'
                                                and _eqp.IsActive in (1)
                                                AND _eqp.EquipmentClassId = '1'
                                                
                                                
                                
                                           
                                           SELECT 
                                           Id,EquipmentId,CompanyId,Name,SKU,ManufacturerId,SupplierId,EquipmentTypeId,
										   EquipmentClassId,Point,SupplierCost,Cost,Retail,EqOrder,Service,AsOfDate,reorderpoint,
										   IsActive,Comments,CreatedDate,LastUpdatedDate,LastUpdatedBy,POOrder,IsKit,RepCost,RackNo,Location,
										   Type,Model,Finish,Capacity,EquipmentPriceIsCharged,ModelNumber,Barcode,Tag,Note,IsWarrenty,IsARBEnabled,
										   IsUpsold,IsTaxable,OverheadRate,ProfitRate,Unit,TaggedEmail,IsIncludeEstimate,LaborPrice,WarehouseReorder,
										   EquipmentClass,Quantity,SupplierName,Category,VendorCost,ManufacturerName,technician,FIFO,InQueue,LocQoH
										   ,TotalEq = ISNULL(Quantity,0) + ISNULL(technician,0) + ISNULL(LocQoH,0) + ISNULL(InQueue,0)
                                           INTO #CustomerFilterData
                                           FROM #CustomerData
                                           
                                
	                                       SELECT TOP (@pagesize)
                                           *
                                           FROM #CustomerFilterData _cfd
                                           where   Id NOT IN(Select TOP (@pagestart)  Id from #CustomerData _cd order by Id desc)
                                           order by Id desc
                                           select count(*) [TotalCount]
                                           from #CustomerFilterData

                                           DROP TABLE #CustomerData
                                           DROP TABLE #CustomerFilterData
|System.Data.SqlClient.SqlException (0x80131904): Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding. ---> System.ComponentModel.Win32Exception (0x80004005): The wait operation timed out
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:0b21ec22-04b1-4053-9977-d125c97aa5e5
Error Number:-2,State:0,Class:11
2024-12-04 17:05:01.6409|ERROR|HS.Framework.DataAccess.BaseDataAccess| declare @pagestart int
                                    declare @pageend int
                                    declare @pageno int
                                    declare @pagesize int
                                    set @pageno = 1
                                    set @pagesize = 100


                                    set @pagestart=(@pageno-1)* @pagesize 
                                    set @pageend = @pagesize

                                    SELECT 
                                        _eqp.*,
                                        _eqpClass.Name as EquipmentClass,
	                                    ((Select ISNULL(SUM(invinner.Quantity),0) from InventoryWarehouse invinner where invinner.EquipmentId=_eqp.EquipmentId and Type='Add' And invinner.LocationId = '22222222-2222-2222-2222-222222222222')- (Select ISNULL(SUM(invinner2.Quantity),0) from InventoryWarehouse invinner2 where invinner2.EquipmentId=_eqp.EquipmentId and Type='Release' And invinner2.LocationId = '22222222-2222-2222-2222-222222222222')
                                            	-(select ISNull(Sum(b.Quantity),0) from AssignedInventoryTechReceived b where b.EquipmentId = _eqp.EquipmentId AND b.TechnicianId =
	                                       '22222222-2222-2222-2222-222222222222' And b.IsApprove = 0 and b.IsDecline = 0)
                                        ) as Quantity,
                                         sup.CompanyName as SupplierName,
                                          _eqpType.Name as Category,
										  --_eqp.SupplierCost as VendorCost,
                                          eqpv.Cost as VendorCost,
										  manu.Name as ManufacturerName,
                                          
                                          (SELECT 
                                          ISNULL(SUM(Quantity),0) AS TotalQty
                                          FROM
                                          (SELECT 
                                          ISNULL(SUM(CASE WHEN Type = 'ADD' THEN Quantity ELSE -Quantity END),0) AS Quantity
                                          FROM 
                                          InventoryTech
                                          WHERE 
                                          EquipmentId = _eqp.EquipmentId AND
										  TechnicianId NOT IN 
										  ('00000000-0000-0000-0000-000000000000','22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                     '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                     '22222222-2222-2222-2222-222222222233','22222222-2222-2222-2222-222222222222','22222222-2222-2222-2222-222222222221')
                                          GROUP BY 
                                          TechnicianId										  
                                          HAVING 
                                          SUM(CASE WHEN Type = 'ADD' THEN Quantity ELSE -Quantity END) >= 0) AS Qty)-
										 (select ISNULL(Sum(b.Quantity),0) from AssignedInventoryTechReceived b where b.EquipmentId = _eqp.EquipmentId AND b.TechnicianId NOT IN
										 ('00000000-0000-0000-0000-000000000000','22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                     '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                     '22222222-2222-2222-2222-222222222233','22222222-2222-2222-2222-222222222222','22222222-2222-2222-2222-222222222221') And b.IsApprove = 0 and b.IsDecline = 0)
										  as technician,
                                        
                                        (select AVG(newtab.UnitPrice) from
                                        (select TOP 3 iwin.*, pod.UnitPrice from InventoryWarehouse iwin left join PurchaseOrderDetail pod on pod.PurchaseOrderId=iwin.PurchaseOrderId
                                        where iwin.PurchaseOrderId != '' and (UnitPrice!=0 or UnitPrice is not null) AND iwin.EquipmentId=_eqp.EquipmentId
                                        AND pod.EquipmentId=_eqp.EquipmentId order by LastUpdatedDate desc)
                                        newtab group by EquipmentId) as FIFO,
                                        ([dbo].GetAssignedInventoryTechQuantityCount(null,_eqp.EquipmentId,1)) as InQueue,
                                   ((select ISNULL(SUM(invinner.Quantity),0) from [InventoryWarehouse] invinner where invinner.EquipmentId=_eqp.EquipmentId and Type='Add'  and invinner.LocationId IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                              '22222222-2222-2222-2222-222222222233'))

								  -

                                    (select ISNULL(sum(Quantity),0) from dbo.InventoryWarehouse b where b.EquipmentId  = _eqp.EquipmentId  and Type='Release'
			                        AND b.LocationId IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                               '22222222-2222-2222-2222-222222222233'))
								   -



                                   (select ISNULL(Sum(b.Quantity),0) from AssignedInventoryTechReceived b where b.EquipmentId = _eqp.EquipmentId AND b.TechnicianId IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                               '22222222-2222-2222-2222-222222222233') And b.IsApprove = 0 and b.IsDecline = 0)) as LocQoH,
										  ISNULL((((Select ISNULL(SUM(invinner.Quantity),0) from InventoryWarehouse invinner where invinner.EquipmentId=_eqp.EquipmentId and Type='Add')- (Select ISNULL(SUM(invinner2.Quantity),0) from InventoryWarehouse invinner2 where invinner2.EquipmentId=_eqp.EquipmentId and Type='Release'))
										  +
										  (select ISNULL(SUM(tech.Quantity), 0) from InventoryTech tech where _eqp.EquipmentId = tech.EquipmentId and tech.[Type] = 'Add'
                                          AND tech.TechnicianId Not IN('22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                     '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                     '22222222-2222-2222-2222-222222222233')  
                                          ) 
                                       - (select ISNULL(SUM(tech.Quantity), 0) from InventoryTech tech where _eqp.EquipmentId = tech.EquipmentId and tech.[Type] = 'Release'
                                    AND tech.TechnicianId Not IN('22222222-2222-2222-2222-222222222222', '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                               '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226','22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                               '22222222-2222-2222-2222-222222222233')
                                        )), 0) as TotalEq
                                          
                                          INTO #CustomerData
                                          FROM Equipment _eqp
                                            LEFT JOIN EquipmentClass _eqpClass
		                                    ON _eqp.EquipmentClassId = _eqpClass.Id and _eqp.CompanyId = _eqpClass.CompanyId
                                            left JOIN EquipmentVendor eqpv
											ON eqpv.EquipmentId = _eqp.EquipmentId
                                            and eqpv.IsPrimary=1
											 LEFT JOIN EquipmentType _eqpType
		                                    ON _eqp.EquipmentTypeId = _eqpType.Id and _eqp.CompanyId = _eqpType.CompanyId
                                            --left join Supplier sup on sup.Id = _eqp.SupplierId
                                            left join Supplier sup on sup.SupplierId = eqpv.SupplierId
											left join Manufacturer manu
											ON manu.Id = _eqp.ManufacturerId
		                                    WHERE 
			                                    _eqp.CompanyId = 'c7e72006-6edf-4b5a-8589-bfd1b2dae7ba'
                                                and _eqp.IsActive in (1)
                                                AND _eqp.EquipmentClassId = '1'
                                                
                                                
                                
                                           
                                           SELECT 
                                           Id,EquipmentId,CompanyId,Name,SKU,ManufacturerId,SupplierId,EquipmentTypeId,
										   EquipmentClassId,Point,SupplierCost,Cost,Retail,EqOrder,Service,AsOfDate,reorderpoint,
										   IsActive,Comments,CreatedDate,LastUpdatedDate,LastUpdatedBy,POOrder,IsKit,RepCost,RackNo,Location,
										   Type,Model,Finish,Capacity,EquipmentPriceIsCharged,ModelNumber,Barcode,Tag,Note,IsWarrenty,IsARBEnabled,
										   IsUpsold,IsTaxable,OverheadRate,ProfitRate,Unit,TaggedEmail,IsIncludeEstimate,LaborPrice,WarehouseReorder,
										   EquipmentClass,Quantity,SupplierName,Category,VendorCost,ManufacturerName,technician,FIFO,InQueue,LocQoH
										   ,TotalEq = ISNULL(Quantity,0) + ISNULL(technician,0) + ISNULL(LocQoH,0) + ISNULL(InQueue,0)
                                           INTO #CustomerFilterData
                                           FROM #CustomerData
                                           
                                
	                                       SELECT TOP (@pagesize)
                                           *
                                           FROM #CustomerFilterData _cfd
                                           where   Id NOT IN(Select TOP (@pagestart)  Id from #CustomerData _cd order by Id desc)
                                           order by Id desc
                                           select count(*) [TotalCount]
                                           from #CustomerFilterData

                                           DROP TABLE #CustomerData
                                           DROP TABLE #CustomerFilterData
|System.Data.SqlClient.SqlException (0x80131904): Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding. ---> System.ComponentModel.Win32Exception (0x80004005): The wait operation timed out
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:cdf52339-26b8-4495-b125-ea61a3eaafa0
Error Number:-2,State:0,Class:11
