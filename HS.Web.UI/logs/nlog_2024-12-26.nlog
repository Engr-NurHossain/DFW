2024-12-26 10:58:15.3201|ERROR|HS.Framework.DataAccess.BaseDataAccess|
                                -- Transfer Inventory Tech

                                    select rec.Id, rec.TechnicianId, rec.EquipmentId, rec.IsReceived, rec.ReceivedDate, rec.ReceivedBy, eq.Name as Name, rec.Quantity, rec.IsApprove, 'Transfer' as [Type], rec.IsDecline, rec.ReqSrc,
                                    (select case when _sentby.IsLocation=1 then _sentby.UserName else _sentby.FirstName + ' ' + _sentby.LastName end from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentByName,
                                    (select case when _recby.IsLocation=1 then _recby.UserName else _recby.FirstName + ' ' + _recby.LastName end from Employee _recby where _recby.UserId = rec.ReceivedBy) as ReceivedByName,
                                    ISNULL((Select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a where a.EquipmentId = eq.EquipmentId 
									AND a.ReceivedBy = rec.ReceivedBy 
									and a.IsApprove = 1 
									) - (select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a 
									where  a.TechnicianId = rec.ReceivedBy 
									and a.EquipmentId = eq.EquipmentId 
									and a.IsApprove = 1
									)
									,0) AS WHStock,
                                     ABS(((SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Add' 
                                     AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId) - (SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Release'
                                     AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId)
                                   -isnull((select sum(Quantity) from dbo.AssignedInventoryTechReceived b where b.EquipmentId  = eq.EquipmentId and b.IsApprove = 0 and b.IsDecline = 0 ),0))
                                    ) AS TotalQuantity,
	                               --(select _sentby.UserId from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentById
                                    (select _sentby.IsLocation from Employee _sentby where _sentby.UserId = rec.TechnicianId) as IsLocation,
                                  --  (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.ClosedBy) as ClosedBy,
                                        (
                                            SELECT COALESCE(
                                                (SELECT _sentby.FirstName + ' ' + _sentby.LastName FROM Employee _sentby WHERE _sentby.UserId = rec.ClosedBy),
                                                CASE WHEN rec.ClosedBy IS NOT NULL THEN 'Live User' END
                                            )
                                        ) AS ClosedBy,
								   (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.CreatedBy) as CreatedBy,
                                   (CASE WHEN IsApprove!=1 AND IsDecline!=1 THEN 0 ELSE 1 END) as NeedAction,
                                    rec.CreatedDate,
                                    eq.SKU
                                    INTO #TrfData
									from AssignedInventoryTechReceived rec
                                    left join Equipment eq on eq.EquipmentId = rec.EquipmentId
                                    --where rec.TechnicianId='ac0ce890-bc5b-4c34-aab2-017af19bedf6'
                                    	
								    Delete from #TrfData where (SentByName is null OR SentByName = 'Purchase Order') AND ReceivedByName IN('Warehouse','Lost Bucket','X-Unused 02','X-Unused 01','X-Unused 03','RMA Bucket','Supplies Bucket','Correction Bucket') AND (TechnicianId = '00000000-0000-0000-0000-000000000000' Or TechnicianId = '22222222-2222-2222-2222-222222222221')
								   select distinct  Id, t.TechnicianId, t.EquipmentId, t.ReceivedBy, CreatedDate,
                                    Name, SKU, SentByName, Quantity, ReceivedByName, TotalQuantity, 
                                    CASE WHEN 
									t.ReceivedBy = '22222222-2222-2222-2222-222222222222'
									THEN  
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Release')
									
									WHEN 
									t.ReceivedBy
									IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                    '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226',
                                        '22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                    '22222222-2222-2222-2222-222222222233')
									THEN
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = t.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = t.ReceivedBy AND i.Type = 'Release')
									
									ELSE 
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = t.EquipmentId AND i.TechnicianId = t.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = t.EquipmentId AND i.TechnicianId = t.ReceivedBy AND i.Type = 'Release')
									End As WHStock, 
                                    IsReceived, ReceivedDate, Type,  ReqSrc,IsLocation, CreatedBy,ClosedBy,t.IsApprove,  t.IsDecline,t.NeedAction from #TrfData t
                                    WHERE ( )  AND ( ) 
                                    order by t.NeedAction, t.CreatedDate desc
                                    OFFSET 0 ROWS FETCH NEXT 20000 ROWS ONLY

                                    select COUNT(*)
									from #TrfData t
                                    WHERE ( )  AND ( ) 

                                    select DISTINCT TechnicianId as Value, SentByName as Text from #TrfData
                                    order by SentByName

                                    select DISTINCT ReceivedBy as Value, ReceivedByName as Text from #TrfData
                                    order by ReceivedByName asc
                                
                                -- Receive Inventory Tech

                                   select distinct rec.Id, rec.TechnicianId, rec.EquipmentId, rec.IsReceived, rec.ReceivedDate, rec.ReceivedBy, _eq.Name as Name, rec.Quantity, rec.IsApprove, 'Approve' as [Type], rec.IsDecline, rec.ReqSrc,
                                    (select case when _sentby.IsLocation=1 then _sentby.UserName else _sentby.FirstName + ' ' + _sentby.LastName end from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentByName,                                    
                                    (select case when recby.IsLocation=1 then recby.UserName else recby.FirstName + ' ' + recby.LastName end from Employee recby where recby.UserId = rec.ReceivedBy) as ReceivedByName,
                                   ISNULL((Select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a where a.EquipmentId = _eq.EquipmentId 
									AND a.ReceivedBy = rec.ReceivedBy 
									and a.IsApprove = 1 
									) - (select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a 
									where  a.TechnicianId = rec.ReceivedBy 
									and a.EquipmentId = _eq.EquipmentId 
									and a.IsApprove = 1
									)
									,0) AS WHStock,
                                   -- isnull((select SUM(_tech.Quantity) from InventoryWarehouse _tech where _tech.[Type] = 'Add' and _tech.EquipmentId = rec.EquipmentId ), 0) - isnull((select SUM(_tech.Quantity) from InventoryWarehouse _tech where _tech.[Type] = 'Release' and _tech.EquipmentId = rec.EquipmentId), 0) as WHStock
                                 ABS(((SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Add' 
                                 AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId) - (SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Release'
                                 AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId)
                                   -isnull((select sum(Quantity) from dbo.AssignedInventoryTechReceived b where b.EquipmentId  = _eq.EquipmentId and b.IsApprove = 0 and b.IsDecline = 0),0))
                                    )  AS TotalQuantity, 
	                              --(select _sentby.UserId from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentById
                                (select _sentby.IsLocation from Employee _sentby where _sentby.UserId = rec.TechnicianId) as IsLocation,
                                --(select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.ClosedBy) as ClosedBy,
                                    (
                                        SELECT COALESCE(
                                            (SELECT _sentby.FirstName + ' ' + _sentby.LastName FROM Employee _sentby WHERE _sentby.UserId = rec.ClosedBy),
                                            CASE WHEN rec.ClosedBy IS NOT NULL THEN 'Live User' END
                                        )
                                    ) AS ClosedBy,
								   (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.CreatedBy) as CreatedBy,
                                    rec.CreatedDate,
                                    _eq.SKU,
									(CASE WHEN IsApprove!=1 AND IsDecline!=1 THEN 0 ELSE 1 END) as NeedAction
                                    INTO #RcvData
									from AssignedInventoryTechReceived rec
                                    left join Equipment _eq on _eq.EquipmentId = rec.EquipmentId
                                    --where rec.ReceivedBy='ac0ce890-bc5b-4c34-aab2-017af19bedf6'
                                    WHERE rec.ReceivedBy != '00000000-0000-0000-0000-000000000000' 
                                   GROUP BY rec.Id, rec.TechnicianId,
								   rec.EquipmentId,rec.IsReceived,rec.ReceivedDate,_eq.Name,rec.Quantity,rec.ReqSrc,rec.ClosedBy,
								   rec.CreatedBy,rec.CreatedDate,_eq.SKU,
								   rec.ReceivedBy, _eq.EquipmentId, rec.IsApprove, rec.IsDecline
                                    Delete from #RcvData where (SentByName is null OR SentByName = 'Purchase Order') AND ReceivedByName IN('Warehouse','Lost Bucket','X-Unused 02','X-Unused 01','X-Unused 03','RMA Bucket','Supplies Bucket','Correction Bucket') AND (TechnicianId = '00000000-0000-0000-0000-000000000000' Or TechnicianId = '22222222-2222-2222-2222-222222222221')
                                    select Id, TechnicianId, EquipmentId, ReceivedBy, ReceivedDate, CreatedDate,
                                    Name, SKU, SentByName, Quantity, ReceivedByName, TotalQuantity, 
                                    CASE WHEN 
									r.ReceivedBy = '22222222-2222-2222-2222-222222222222'
									THEN  
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Release')
									
									WHEN 
								    r.ReceivedBy
									IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                    '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226',
                                        '22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                    '22222222-2222-2222-2222-222222222233')
									THEN
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = r.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = r.ReceivedBy AND i.Type = 'Release')
									
									ELSE 
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = r.EquipmentId AND i.TechnicianId = r.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = r.EquipmentId AND i.TechnicianId = r.ReceivedBy AND i.Type = 'Release')
									End As WHStock,
                                    IsReceived, IsApprove, Type, IsDecline,ReqSrc,IsLocation,ClosedBy,CreatedBy from #RcvData r
                                       
                                    order by r.NeedAction, r.CreatedDate desc
                                    OFFSET 0 ROWS FETCH NEXT 20000 ROWS ONLY 

                                    select COUNT(*)
									from #RcvData
                                       

                                    select DISTINCT TechnicianId as Value, SentByName as Text from #RcvData
                                    order by SentByName

                                    select DISTINCT ReceivedBy as Value, ReceivedByName as Text from #RcvData
                                    order by ReceivedByName asc
                                    
                                    DROP TABLE #TrfData
                                    DROP TABLE #RcvData
                                    |System.Data.SqlClient.SqlException (0x80131904): Incorrect syntax near ')'.
Invalid usage of the option NEXT in the FETCH statement.
Incorrect syntax near ')'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:a693bd9d-5f5e-489c-b415-12822449edf5
Error Number:102,State:1,Class:15
2024-12-26 11:12:38.2873|ERROR|HS.Framework.DataAccess.BaseDataAccess|
                                -- Transfer Inventory Tech

                                    select rec.Id, rec.TechnicianId, rec.EquipmentId, rec.IsReceived, rec.ReceivedDate, rec.ReceivedBy, eq.Name as Name, rec.Quantity, rec.IsApprove, 'Transfer' as [Type], rec.IsDecline, rec.ReqSrc,
                                    (select case when _sentby.IsLocation=1 then _sentby.UserName else _sentby.FirstName + ' ' + _sentby.LastName end from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentByName,
                                    (select case when _recby.IsLocation=1 then _recby.UserName else _recby.FirstName + ' ' + _recby.LastName end from Employee _recby where _recby.UserId = rec.ReceivedBy) as ReceivedByName,
                                    ISNULL((Select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a where a.EquipmentId = eq.EquipmentId 
									AND a.ReceivedBy = rec.ReceivedBy 
									and a.IsApprove = 1 
									) - (select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a 
									where  a.TechnicianId = rec.ReceivedBy 
									and a.EquipmentId = eq.EquipmentId 
									and a.IsApprove = 1
									)
									,0) AS WHStock,
                                     ABS(((SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Add' 
                                     AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId) - (SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Release'
                                     AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId)
                                   -isnull((select sum(Quantity) from dbo.AssignedInventoryTechReceived b where b.EquipmentId  = eq.EquipmentId and b.IsApprove = 0 and b.IsDecline = 0 ),0))
                                    ) AS TotalQuantity,
	                               --(select _sentby.UserId from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentById
                                    (select _sentby.IsLocation from Employee _sentby where _sentby.UserId = rec.TechnicianId) as IsLocation,
                                  --  (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.ClosedBy) as ClosedBy,
                                        (
                                            SELECT COALESCE(
                                                (SELECT _sentby.FirstName + ' ' + _sentby.LastName FROM Employee _sentby WHERE _sentby.UserId = rec.ClosedBy),
                                                CASE WHEN rec.ClosedBy IS NOT NULL THEN 'Live User' END
                                            )
                                        ) AS ClosedBy,
								   (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.CreatedBy) as CreatedBy,
                                   (CASE WHEN IsApprove!=1 AND IsDecline!=1 THEN 0 ELSE 1 END) as NeedAction,
                                    rec.CreatedDate,
                                    eq.SKU
                                    INTO #TrfData
									from AssignedInventoryTechReceived rec
                                    left join Equipment eq on eq.EquipmentId = rec.EquipmentId
                                    --where rec.TechnicianId='ac0ce890-bc5b-4c34-aab2-017af19bedf6'
                                    	
								    Delete from #TrfData where (SentByName is null OR SentByName = 'Purchase Order') AND ReceivedByName IN('Warehouse','Lost Bucket','X-Unused 02','X-Unused 01','X-Unused 03','RMA Bucket','Supplies Bucket','Correction Bucket') AND (TechnicianId = '00000000-0000-0000-0000-000000000000' Or TechnicianId = '22222222-2222-2222-2222-222222222221')
								   select distinct  Id, t.TechnicianId, t.EquipmentId, t.ReceivedBy, CreatedDate,
                                    Name, SKU, SentByName, Quantity, ReceivedByName, TotalQuantity, 
                                    CASE WHEN 
									t.ReceivedBy = '22222222-2222-2222-2222-222222222222'
									THEN  
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Release')
									
									WHEN 
									t.ReceivedBy
									IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                    '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226',
                                        '22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                    '22222222-2222-2222-2222-222222222233')
									THEN
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = t.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = t.ReceivedBy AND i.Type = 'Release')
									
									ELSE 
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = t.EquipmentId AND i.TechnicianId = t.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = t.EquipmentId AND i.TechnicianId = t.ReceivedBy AND i.Type = 'Release')
									End As WHStock, 
                                    IsReceived, ReceivedDate, Type,  ReqSrc,IsLocation, CreatedBy,ClosedBy,t.IsApprove,  t.IsDecline,t.NeedAction from #TrfData t
                                    WHERE ( )  AND ( ) 
                                    order by t.NeedAction, t.CreatedDate desc
                                    OFFSET 0 ROWS FETCH NEXT 20000 ROWS ONLY

                                    select COUNT(*)
									from #TrfData t
                                    WHERE ( )  AND ( ) 

                                    select DISTINCT TechnicianId as Value, SentByName as Text from #TrfData
                                    order by SentByName

                                    select DISTINCT ReceivedBy as Value, ReceivedByName as Text from #TrfData
                                    order by ReceivedByName asc
                                
                                -- Receive Inventory Tech

                                   select distinct rec.Id, rec.TechnicianId, rec.EquipmentId, rec.IsReceived, rec.ReceivedDate, rec.ReceivedBy, _eq.Name as Name, rec.Quantity, rec.IsApprove, 'Approve' as [Type], rec.IsDecline, rec.ReqSrc,
                                    (select case when _sentby.IsLocation=1 then _sentby.UserName else _sentby.FirstName + ' ' + _sentby.LastName end from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentByName,                                    
                                    (select case when recby.IsLocation=1 then recby.UserName else recby.FirstName + ' ' + recby.LastName end from Employee recby where recby.UserId = rec.ReceivedBy) as ReceivedByName,
                                   ISNULL((Select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a where a.EquipmentId = _eq.EquipmentId 
									AND a.ReceivedBy = rec.ReceivedBy 
									and a.IsApprove = 1 
									) - (select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a 
									where  a.TechnicianId = rec.ReceivedBy 
									and a.EquipmentId = _eq.EquipmentId 
									and a.IsApprove = 1
									)
									,0) AS WHStock,
                                   -- isnull((select SUM(_tech.Quantity) from InventoryWarehouse _tech where _tech.[Type] = 'Add' and _tech.EquipmentId = rec.EquipmentId ), 0) - isnull((select SUM(_tech.Quantity) from InventoryWarehouse _tech where _tech.[Type] = 'Release' and _tech.EquipmentId = rec.EquipmentId), 0) as WHStock
                                 ABS(((SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Add' 
                                 AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId) - (SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Release'
                                 AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId)
                                   -isnull((select sum(Quantity) from dbo.AssignedInventoryTechReceived b where b.EquipmentId  = _eq.EquipmentId and b.IsApprove = 0 and b.IsDecline = 0),0))
                                    )  AS TotalQuantity, 
	                              --(select _sentby.UserId from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentById
                                (select _sentby.IsLocation from Employee _sentby where _sentby.UserId = rec.TechnicianId) as IsLocation,
                                --(select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.ClosedBy) as ClosedBy,
                                    (
                                        SELECT COALESCE(
                                            (SELECT _sentby.FirstName + ' ' + _sentby.LastName FROM Employee _sentby WHERE _sentby.UserId = rec.ClosedBy),
                                            CASE WHEN rec.ClosedBy IS NOT NULL THEN 'Live User' END
                                        )
                                    ) AS ClosedBy,
								   (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.CreatedBy) as CreatedBy,
                                    rec.CreatedDate,
                                    _eq.SKU,
									(CASE WHEN IsApprove!=1 AND IsDecline!=1 THEN 0 ELSE 1 END) as NeedAction
                                    INTO #RcvData
									from AssignedInventoryTechReceived rec
                                    left join Equipment _eq on _eq.EquipmentId = rec.EquipmentId
                                    --where rec.ReceivedBy='ac0ce890-bc5b-4c34-aab2-017af19bedf6'
                                    WHERE rec.ReceivedBy != '00000000-0000-0000-0000-000000000000' 
                                   GROUP BY rec.Id, rec.TechnicianId,
								   rec.EquipmentId,rec.IsReceived,rec.ReceivedDate,_eq.Name,rec.Quantity,rec.ReqSrc,rec.ClosedBy,
								   rec.CreatedBy,rec.CreatedDate,_eq.SKU,
								   rec.ReceivedBy, _eq.EquipmentId, rec.IsApprove, rec.IsDecline
                                    Delete from #RcvData where (SentByName is null OR SentByName = 'Purchase Order') AND ReceivedByName IN('Warehouse','Lost Bucket','X-Unused 02','X-Unused 01','X-Unused 03','RMA Bucket','Supplies Bucket','Correction Bucket') AND (TechnicianId = '00000000-0000-0000-0000-000000000000' Or TechnicianId = '22222222-2222-2222-2222-222222222221')
                                    select Id, TechnicianId, EquipmentId, ReceivedBy, ReceivedDate, CreatedDate,
                                    Name, SKU, SentByName, Quantity, ReceivedByName, TotalQuantity, 
                                    CASE WHEN 
									r.ReceivedBy = '22222222-2222-2222-2222-222222222222'
									THEN  
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Release')
									
									WHEN 
								    r.ReceivedBy
									IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                    '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226',
                                        '22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                    '22222222-2222-2222-2222-222222222233')
									THEN
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = r.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = r.ReceivedBy AND i.Type = 'Release')
									
									ELSE 
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = r.EquipmentId AND i.TechnicianId = r.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = r.EquipmentId AND i.TechnicianId = r.ReceivedBy AND i.Type = 'Release')
									End As WHStock,
                                    IsReceived, IsApprove, Type, IsDecline,ReqSrc,IsLocation,ClosedBy,CreatedBy from #RcvData r
                                       
                                    order by r.NeedAction, r.CreatedDate desc
                                    OFFSET 0 ROWS FETCH NEXT 20000 ROWS ONLY 

                                    select COUNT(*)
									from #RcvData
                                       

                                    select DISTINCT TechnicianId as Value, SentByName as Text from #RcvData
                                    order by SentByName

                                    select DISTINCT ReceivedBy as Value, ReceivedByName as Text from #RcvData
                                    order by ReceivedByName asc
                                    
                                    DROP TABLE #TrfData
                                    DROP TABLE #RcvData
                                    |System.Data.SqlClient.SqlException (0x80131904): Incorrect syntax near ')'.
Invalid usage of the option NEXT in the FETCH statement.
Incorrect syntax near ')'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:a693bd9d-5f5e-489c-b415-12822449edf5
Error Number:102,State:1,Class:15
2024-12-26 11:35:08.4249|ERROR|HS.Framework.DataAccess.BaseDataAccess|System.Data.SqlClient.SqlException (0x80131904): Procedure or function InsertUserActivity has too many arguments specified.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at HS.Framework.DataAccess.BaseDataAccess.ExecuteCommand(SqlCommand command) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 358
   at HS.Framework.DataAccess.BaseDataAccess.InsertRecord(SqlCommand command) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 320
   at HS.DataAccess.UserActivityDataAccess.Insert(UserActivityBase userActivityObject) in D:\USA Project\DFW Security\HS.DataAccess\Bases\UserActivityDataAccess.cs:line 71
ClientConnectionId:85afae18-743c-427c-92a9-97bc0ca7b461
Error Number:8144,State:2,Class:16
2024-12-26 18:02:59.8126|ERROR|HS.Framework.DataAccess.BaseDataAccess|
                                -- Transfer Inventory Tech

                                    select rec.Id, rec.TechnicianId, rec.EquipmentId, rec.IsReceived, rec.ReceivedDate, rec.ReceivedBy, eq.Name as Name, rec.Quantity, rec.IsApprove, 'Transfer' as [Type], rec.IsDecline, rec.ReqSrc,
                                    (select case when _sentby.IsLocation=1 then _sentby.UserName else _sentby.FirstName + ' ' + _sentby.LastName end from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentByName,
                                    (select case when _recby.IsLocation=1 then _recby.UserName else _recby.FirstName + ' ' + _recby.LastName end from Employee _recby where _recby.UserId = rec.ReceivedBy) as ReceivedByName,
                                    ISNULL((Select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a where a.EquipmentId = eq.EquipmentId 
									AND a.ReceivedBy = rec.ReceivedBy 
									and a.IsApprove = 1 
									) - (select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a 
									where  a.TechnicianId = rec.ReceivedBy 
									and a.EquipmentId = eq.EquipmentId 
									and a.IsApprove = 1
									)
									,0) AS WHStock,
                                     ABS(((SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Add' 
                                     AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId) - (SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Release'
                                     AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId)
                                   -isnull((select sum(Quantity) from dbo.AssignedInventoryTechReceived b where b.EquipmentId  = eq.EquipmentId and b.IsApprove = 0 and b.IsDecline = 0 ),0))
                                    ) AS TotalQuantity,
	                               --(select _sentby.UserId from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentById
                                    (select _sentby.IsLocation from Employee _sentby where _sentby.UserId = rec.TechnicianId) as IsLocation,
                                  --  (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.ClosedBy) as ClosedBy,
                                        (
                                            SELECT COALESCE(
                                                (SELECT _sentby.FirstName + ' ' + _sentby.LastName FROM Employee _sentby WHERE _sentby.UserId = rec.ClosedBy),
                                                CASE WHEN rec.ClosedBy IS NOT NULL THEN 'Live User' END
                                            )
                                        ) AS ClosedBy,
								   (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.CreatedBy) as CreatedBy,
                                   (CASE WHEN IsApprove!=1 AND IsDecline!=1 THEN 0 ELSE 1 END) as NeedAction,
                                    rec.CreatedDate,
                                    eq.SKU
                                    INTO #TrfData
									from AssignedInventoryTechReceived rec
                                    left join Equipment eq on eq.EquipmentId = rec.EquipmentId
                                    --where rec.TechnicianId='ac0ce890-bc5b-4c34-aab2-017af19bedf6'
                                    	
								    Delete from #TrfData where (SentByName is null OR SentByName = 'Purchase Order') AND ReceivedByName IN('Warehouse','Lost Bucket','X-Unused 02','X-Unused 01','X-Unused 03','RMA Bucket','Supplies Bucket','Correction Bucket') AND (TechnicianId = '00000000-0000-0000-0000-000000000000' Or TechnicianId = '22222222-2222-2222-2222-222222222221')
								   select distinct  Id, t.TechnicianId, t.EquipmentId, t.ReceivedBy, CreatedDate,
                                    Name, SKU, SentByName, Quantity, ReceivedByName, TotalQuantity, 
                                    CASE WHEN 
									t.ReceivedBy = '22222222-2222-2222-2222-222222222222'
									THEN  
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Release')
									
									WHEN 
									t.ReceivedBy
									IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                    '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226',
                                        '22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                    '22222222-2222-2222-2222-222222222233')
									THEN
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = t.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = t.ReceivedBy AND i.Type = 'Release')
									
									ELSE 
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = t.EquipmentId AND i.TechnicianId = t.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = t.EquipmentId AND i.TechnicianId = t.ReceivedBy AND i.Type = 'Release')
									End As WHStock, 
                                    IsReceived, ReceivedDate, Type,  ReqSrc,IsLocation, CreatedBy,ClosedBy,t.IsApprove,  t.IsDecline,t.NeedAction from #TrfData t
                                    WHERE ( )  AND ( ) 
                                    order by t.NeedAction, t.CreatedDate desc
                                    OFFSET 0 ROWS FETCH NEXT 20000 ROWS ONLY

                                    select COUNT(*)
									from #TrfData t
                                    WHERE ( )  AND ( ) 

                                    select DISTINCT TechnicianId as Value, SentByName as Text from #TrfData
                                    order by SentByName

                                    select DISTINCT ReceivedBy as Value, ReceivedByName as Text from #TrfData
                                    order by ReceivedByName asc
                                
                                -- Receive Inventory Tech

                                   select distinct rec.Id, rec.TechnicianId, rec.EquipmentId, rec.IsReceived, rec.ReceivedDate, rec.ReceivedBy, _eq.Name as Name, rec.Quantity, rec.IsApprove, 'Approve' as [Type], rec.IsDecline, rec.ReqSrc,
                                    (select case when _sentby.IsLocation=1 then _sentby.UserName else _sentby.FirstName + ' ' + _sentby.LastName end from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentByName,                                    
                                    (select case when recby.IsLocation=1 then recby.UserName else recby.FirstName + ' ' + recby.LastName end from Employee recby where recby.UserId = rec.ReceivedBy) as ReceivedByName,
                                   ISNULL((Select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a where a.EquipmentId = _eq.EquipmentId 
									AND a.ReceivedBy = rec.ReceivedBy 
									and a.IsApprove = 1 
									) - (select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a 
									where  a.TechnicianId = rec.ReceivedBy 
									and a.EquipmentId = _eq.EquipmentId 
									and a.IsApprove = 1
									)
									,0) AS WHStock,
                                   -- isnull((select SUM(_tech.Quantity) from InventoryWarehouse _tech where _tech.[Type] = 'Add' and _tech.EquipmentId = rec.EquipmentId ), 0) - isnull((select SUM(_tech.Quantity) from InventoryWarehouse _tech where _tech.[Type] = 'Release' and _tech.EquipmentId = rec.EquipmentId), 0) as WHStock
                                 ABS(((SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Add' 
                                 AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId) - (SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Release'
                                 AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId)
                                   -isnull((select sum(Quantity) from dbo.AssignedInventoryTechReceived b where b.EquipmentId  = _eq.EquipmentId and b.IsApprove = 0 and b.IsDecline = 0),0))
                                    )  AS TotalQuantity, 
	                              --(select _sentby.UserId from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentById
                                (select _sentby.IsLocation from Employee _sentby where _sentby.UserId = rec.TechnicianId) as IsLocation,
                                --(select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.ClosedBy) as ClosedBy,
                                    (
                                        SELECT COALESCE(
                                            (SELECT _sentby.FirstName + ' ' + _sentby.LastName FROM Employee _sentby WHERE _sentby.UserId = rec.ClosedBy),
                                            CASE WHEN rec.ClosedBy IS NOT NULL THEN 'Live User' END
                                        )
                                    ) AS ClosedBy,
								   (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.CreatedBy) as CreatedBy,
                                    rec.CreatedDate,
                                    _eq.SKU,
									(CASE WHEN IsApprove!=1 AND IsDecline!=1 THEN 0 ELSE 1 END) as NeedAction
                                    INTO #RcvData
									from AssignedInventoryTechReceived rec
                                    left join Equipment _eq on _eq.EquipmentId = rec.EquipmentId
                                    --where rec.ReceivedBy='ac0ce890-bc5b-4c34-aab2-017af19bedf6'
                                    WHERE rec.ReceivedBy != '00000000-0000-0000-0000-000000000000' 
                                   GROUP BY rec.Id, rec.TechnicianId,
								   rec.EquipmentId,rec.IsReceived,rec.ReceivedDate,_eq.Name,rec.Quantity,rec.ReqSrc,rec.ClosedBy,
								   rec.CreatedBy,rec.CreatedDate,_eq.SKU,
								   rec.ReceivedBy, _eq.EquipmentId, rec.IsApprove, rec.IsDecline
                                    Delete from #RcvData where (SentByName is null OR SentByName = 'Purchase Order') AND ReceivedByName IN('Warehouse','Lost Bucket','X-Unused 02','X-Unused 01','X-Unused 03','RMA Bucket','Supplies Bucket','Correction Bucket') AND (TechnicianId = '00000000-0000-0000-0000-000000000000' Or TechnicianId = '22222222-2222-2222-2222-222222222221')
                                    select Id, TechnicianId, EquipmentId, ReceivedBy, ReceivedDate, CreatedDate,
                                    Name, SKU, SentByName, Quantity, ReceivedByName, TotalQuantity, 
                                    CASE WHEN 
									r.ReceivedBy = '22222222-2222-2222-2222-222222222222'
									THEN  
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Release')
									
									WHEN 
								    r.ReceivedBy
									IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                    '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226',
                                        '22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                    '22222222-2222-2222-2222-222222222233')
									THEN
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = r.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = r.ReceivedBy AND i.Type = 'Release')
									
									ELSE 
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = r.EquipmentId AND i.TechnicianId = r.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = r.EquipmentId AND i.TechnicianId = r.ReceivedBy AND i.Type = 'Release')
									End As WHStock,
                                    IsReceived, IsApprove, Type, IsDecline,ReqSrc,IsLocation,ClosedBy,CreatedBy from #RcvData r
                                       
                                    order by r.NeedAction, r.CreatedDate desc
                                    OFFSET 0 ROWS FETCH NEXT 20000 ROWS ONLY 

                                    select COUNT(*)
									from #RcvData
                                       

                                    select DISTINCT TechnicianId as Value, SentByName as Text from #RcvData
                                    order by SentByName

                                    select DISTINCT ReceivedBy as Value, ReceivedByName as Text from #RcvData
                                    order by ReceivedByName asc
                                    
                                    DROP TABLE #TrfData
                                    DROP TABLE #RcvData
                                    |System.Data.SqlClient.SqlException (0x80131904): Incorrect syntax near ')'.
Invalid usage of the option NEXT in the FETCH statement.
Incorrect syntax near ')'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:d9656620-f53d-4f53-a811-4e3a4ff3a9b4
Error Number:102,State:1,Class:15
2024-12-26 18:04:15.1747|ERROR|HS.Framework.DataAccess.BaseDataAccess|
                                -- Transfer Inventory Tech

                                    select rec.Id, rec.TechnicianId, rec.EquipmentId, rec.IsReceived, rec.ReceivedDate, rec.ReceivedBy, eq.Name as Name, rec.Quantity, rec.IsApprove, 'Transfer' as [Type], rec.IsDecline, rec.ReqSrc,
                                    (select case when _sentby.IsLocation=1 then _sentby.UserName else _sentby.FirstName + ' ' + _sentby.LastName end from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentByName,
                                    (select case when _recby.IsLocation=1 then _recby.UserName else _recby.FirstName + ' ' + _recby.LastName end from Employee _recby where _recby.UserId = rec.ReceivedBy) as ReceivedByName,
                                    ISNULL((Select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a where a.EquipmentId = eq.EquipmentId 
									AND a.ReceivedBy = rec.ReceivedBy 
									and a.IsApprove = 1 
									) - (select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a 
									where  a.TechnicianId = rec.ReceivedBy 
									and a.EquipmentId = eq.EquipmentId 
									and a.IsApprove = 1
									)
									,0) AS WHStock,
                                     ABS(((SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Add' 
                                     AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId) - (SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Release'
                                     AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId)
                                   -isnull((select sum(Quantity) from dbo.AssignedInventoryTechReceived b where b.EquipmentId  = eq.EquipmentId and b.IsApprove = 0 and b.IsDecline = 0 ),0))
                                    ) AS TotalQuantity,
	                               --(select _sentby.UserId from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentById
                                    (select _sentby.IsLocation from Employee _sentby where _sentby.UserId = rec.TechnicianId) as IsLocation,
                                  --  (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.ClosedBy) as ClosedBy,
                                        (
                                            SELECT COALESCE(
                                                (SELECT _sentby.FirstName + ' ' + _sentby.LastName FROM Employee _sentby WHERE _sentby.UserId = rec.ClosedBy),
                                                CASE WHEN rec.ClosedBy IS NOT NULL THEN 'Live User' END
                                            )
                                        ) AS ClosedBy,
								   (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.CreatedBy) as CreatedBy,
                                   (CASE WHEN IsApprove!=1 AND IsDecline!=1 THEN 0 ELSE 1 END) as NeedAction,
                                    rec.CreatedDate,
                                    eq.SKU
                                    INTO #TrfData
									from AssignedInventoryTechReceived rec
                                    left join Equipment eq on eq.EquipmentId = rec.EquipmentId
                                    --where rec.TechnicianId='ac0ce890-bc5b-4c34-aab2-017af19bedf6'
                                    	
								    Delete from #TrfData where (SentByName is null OR SentByName = 'Purchase Order') AND ReceivedByName IN('Warehouse','Lost Bucket','X-Unused 02','X-Unused 01','X-Unused 03','RMA Bucket','Supplies Bucket','Correction Bucket') AND (TechnicianId = '00000000-0000-0000-0000-000000000000' Or TechnicianId = '22222222-2222-2222-2222-222222222221')
								   select distinct  Id, t.TechnicianId, t.EquipmentId, t.ReceivedBy, CreatedDate,
                                    Name, SKU, SentByName, Quantity, ReceivedByName, TotalQuantity, 
                                    CASE WHEN 
									t.ReceivedBy = '22222222-2222-2222-2222-222222222222'
									THEN  
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Release')
									
									WHEN 
									t.ReceivedBy
									IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                    '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226',
                                        '22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                    '22222222-2222-2222-2222-222222222233')
									THEN
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = t.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = t.EquipmentId AND i.LocationId = t.ReceivedBy AND i.Type = 'Release')
									
									ELSE 
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = t.EquipmentId AND i.TechnicianId = t.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = t.EquipmentId AND i.TechnicianId = t.ReceivedBy AND i.Type = 'Release')
									End As WHStock, 
                                    IsReceived, ReceivedDate, Type,  ReqSrc,IsLocation, CreatedBy,ClosedBy,t.IsApprove,  t.IsDecline,t.NeedAction from #TrfData t
                                    WHERE ( )  AND ( ) 
                                    order by t.NeedAction, t.CreatedDate desc
                                    OFFSET 0 ROWS FETCH NEXT 20000 ROWS ONLY

                                    select COUNT(*)
									from #TrfData t
                                    WHERE ( )  AND ( ) 

                                    select DISTINCT TechnicianId as Value, SentByName as Text from #TrfData
                                    order by SentByName

                                    select DISTINCT ReceivedBy as Value, ReceivedByName as Text from #TrfData
                                    order by ReceivedByName asc
                                
                                -- Receive Inventory Tech

                                   select distinct rec.Id, rec.TechnicianId, rec.EquipmentId, rec.IsReceived, rec.ReceivedDate, rec.ReceivedBy, _eq.Name as Name, rec.Quantity, rec.IsApprove, 'Approve' as [Type], rec.IsDecline, rec.ReqSrc,
                                    (select case when _sentby.IsLocation=1 then _sentby.UserName else _sentby.FirstName + ' ' + _sentby.LastName end from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentByName,                                    
                                    (select case when recby.IsLocation=1 then recby.UserName else recby.FirstName + ' ' + recby.LastName end from Employee recby where recby.UserId = rec.ReceivedBy) as ReceivedByName,
                                   ISNULL((Select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a where a.EquipmentId = _eq.EquipmentId 
									AND a.ReceivedBy = rec.ReceivedBy 
									and a.IsApprove = 1 
									) - (select isnull(SUM(a.Quantity),0) from AssignedInventoryTechReceived a 
									where  a.TechnicianId = rec.ReceivedBy 
									and a.EquipmentId = _eq.EquipmentId 
									and a.IsApprove = 1
									)
									,0) AS WHStock,
                                   -- isnull((select SUM(_tech.Quantity) from InventoryWarehouse _tech where _tech.[Type] = 'Add' and _tech.EquipmentId = rec.EquipmentId ), 0) - isnull((select SUM(_tech.Quantity) from InventoryWarehouse _tech where _tech.[Type] = 'Release' and _tech.EquipmentId = rec.EquipmentId), 0) as WHStock
                                 ABS(((SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Add' 
                                 AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId) - (SELECT ISNULL(SUM(_tech.Quantity), 0) FROM inventorytech _tech WHERE _tech.[Type] = 'Release'
                                 AND _tech.EquipmentId = rec.EquipmentId AND _tech.TechnicianId = rec.TechnicianId)
                                   -isnull((select sum(Quantity) from dbo.AssignedInventoryTechReceived b where b.EquipmentId  = _eq.EquipmentId and b.IsApprove = 0 and b.IsDecline = 0),0))
                                    )  AS TotalQuantity, 
	                              --(select _sentby.UserId from Employee _sentby where _sentby.UserId = rec.TechnicianId) as SentById
                                (select _sentby.IsLocation from Employee _sentby where _sentby.UserId = rec.TechnicianId) as IsLocation,
                                --(select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.ClosedBy) as ClosedBy,
                                    (
                                        SELECT COALESCE(
                                            (SELECT _sentby.FirstName + ' ' + _sentby.LastName FROM Employee _sentby WHERE _sentby.UserId = rec.ClosedBy),
                                            CASE WHEN rec.ClosedBy IS NOT NULL THEN 'Live User' END
                                        )
                                    ) AS ClosedBy,
								   (select  _sentby.FirstName + ' ' + _sentby.LastName from Employee _sentby where _sentby.UserId = rec.CreatedBy) as CreatedBy,
                                    rec.CreatedDate,
                                    _eq.SKU,
									(CASE WHEN IsApprove!=1 AND IsDecline!=1 THEN 0 ELSE 1 END) as NeedAction
                                    INTO #RcvData
									from AssignedInventoryTechReceived rec
                                    left join Equipment _eq on _eq.EquipmentId = rec.EquipmentId
                                    --where rec.ReceivedBy='ac0ce890-bc5b-4c34-aab2-017af19bedf6'
                                    WHERE rec.ReceivedBy != '00000000-0000-0000-0000-000000000000' 
                                   GROUP BY rec.Id, rec.TechnicianId,
								   rec.EquipmentId,rec.IsReceived,rec.ReceivedDate,_eq.Name,rec.Quantity,rec.ReqSrc,rec.ClosedBy,
								   rec.CreatedBy,rec.CreatedDate,_eq.SKU,
								   rec.ReceivedBy, _eq.EquipmentId, rec.IsApprove, rec.IsDecline
                                    Delete from #RcvData where (SentByName is null OR SentByName = 'Purchase Order') AND ReceivedByName IN('Warehouse','Lost Bucket','X-Unused 02','X-Unused 01','X-Unused 03','RMA Bucket','Supplies Bucket','Correction Bucket') AND (TechnicianId = '00000000-0000-0000-0000-000000000000' Or TechnicianId = '22222222-2222-2222-2222-222222222221')
                                    select Id, TechnicianId, EquipmentId, ReceivedBy, ReceivedDate, CreatedDate,
                                    Name, SKU, SentByName, Quantity, ReceivedByName, TotalQuantity, 
                                    CASE WHEN 
									r.ReceivedBy = '22222222-2222-2222-2222-222222222222'
									THEN  
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = '22222222-2222-2222-2222-222222222222' AND i.Type = 'Release')
									
									WHEN 
								    r.ReceivedBy
									IN( '22222222-2222-2222-2222-222222222223','22222222-2222-2222-2222-222222222224',
	                                    '22222222-2222-2222-2222-222222222225','22222222-2222-2222-2222-222222222226',
                                        '22222222-2222-2222-2222-222222222231','22222222-2222-2222-2222-222222222232',
	                                    '22222222-2222-2222-2222-222222222233')
									THEN
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = r.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryWarehouse i WHERE i.EquipmentId = r.EquipmentId AND i.LocationId = r.ReceivedBy AND i.Type = 'Release')
									
									ELSE 
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = r.EquipmentId AND i.TechnicianId = r.ReceivedBy AND i.Type = 'Add') -
									(SELECT ISNULL(SUM(i.Quantity),0) from InventoryTech i WHERE i.EquipmentId = r.EquipmentId AND i.TechnicianId = r.ReceivedBy AND i.Type = 'Release')
									End As WHStock,
                                    IsReceived, IsApprove, Type, IsDecline,ReqSrc,IsLocation,ClosedBy,CreatedBy from #RcvData r
                                       
                                    order by r.NeedAction, r.CreatedDate desc
                                    OFFSET 0 ROWS FETCH NEXT 20000 ROWS ONLY 

                                    select COUNT(*)
									from #RcvData
                                       

                                    select DISTINCT TechnicianId as Value, SentByName as Text from #RcvData
                                    order by SentByName

                                    select DISTINCT ReceivedBy as Value, ReceivedByName as Text from #RcvData
                                    order by ReceivedByName asc
                                    
                                    DROP TABLE #TrfData
                                    DROP TABLE #RcvData
                                    |System.Data.SqlClient.SqlException (0x80131904): Incorrect syntax near ')'.
Invalid usage of the option NEXT in the FETCH statement.
Incorrect syntax near ')'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:d9656620-f53d-4f53-a811-4e3a4ff3a9b4
Error Number:102,State:1,Class:15
