2025-01-29 13:52:24.5282|ERROR|HS.Framework.DataAccess.BaseDataAccess|select count(id) as Count from NotificationUser 
                                where NotificationPerson = 'ac0ce890-bc5b-4c34-aab2-017af19bedf6' and IsRead = 0

                                select Count(Id) as CountAnnouncement from Announcement 
                                where GetDate() between StartTime and EndTime|System.Data.SqlClient.SqlException (0x80131904): A transport-level error has occurred when receiving results from the server. (provider: TCP Provider, error: 0 - The semaphore timeout period has expired.) ---> System.ComponentModel.Win32Exception (0x80004005): The semaphore timeout period has expired
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at System.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at System.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at System.Data.SqlClient.TdsParserStateObject.TryPrepareBuffer()
   at System.Data.SqlClient.TdsParserStateObject.TryReadByte(Byte& value)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:4cc2c389-dfda-4bde-9be8-48cc1472e184
Error Number:121,State:0,Class:20
2025-01-29 18:56:20.4543|ERROR|HS.Framework.DataAccess.BaseDataAccess|Declare @userid uniqueidentifier                                Declare @FromDate datetime                                Declare @EndDate datetime                                set @userid = 'c828611f-a15f-4f2c-8ac5-d4bf1c019718'                                  set @FromDate ='2024-12-22' set @EndDate ='2024-12-28'                                 DECLARE @Balance FLOAT = 0                                 DECLARE @PreviousBalance FLOAT = 0                                 DECLARE @PTOHour FLOAT, @Used FLOAT                                 DECLARE @RowId INT = 1                                 DECLARE @TotalRows INT                                 declare @Start Datetime;								declare @End Datetime;								select @Start = Min(FromDate), @End = Max(EndDate)								from EmployeePTOHourLog pthour								where pthour.UserId = @userid                                Select emp.FirstName + ' ' + emp.LastName As EmployeeName                                ,emp.Id,emp.HireDate,emp.PayType,pthour.UserId                                ,Sum(pthour.PTOHour) Totalearned                                ,IsNull(dbo.PTOUsedHours(@userid,@Start,@End),0) As TotalPtoUsedHour                                ,(Sum(pthour.PTOHour) - IsNull(dbo.PTOUsedHours(@userid,@Start,@End),0)) As TotalAvailable                                                                from EmployeePTOHourLog pthour                                left join Employee emp on pthour.UserId = emp.UserId                                where pthour.UserId = @userid  and pthour.FromDate >= @FromDate and pthour.EndDate <= @EndDate                                   group by pthour.UserId,emp.FirstName,emp.LastName,emp.Id,emp.HireDate,emp.PayType                                 Select   ROW_NUMBER() OVER (ORDER BY pthour.CreatedDate) AS RowId,  		                                 pthour.Id,		                                 pthour.UserId,		                                 pthour.PTOHour AS PTOHour, 		                                 pthour.FromDate,		                                 pthour.EndDate,		                                 pthour.CreatedDate,		                                 pthour.LastUpdatedDate,		                                 IsNull(Cast(pthour.WorkingHours As decimal(18,2)),0) As WorkingHours,                                          Isnull((											select											sum(ISNULL(CAST(Pto.Minute AS DECIMAL(18, 2)) / 60.0, 0)) 											from Pto											where Status = 'Accepted' and UserId = @userid and											StartDate between pthour.FromDate and pthour.EndDate										),0) Used, 		                                CAST(0 AS FLOAT) AS TotalBalance 		                                INTO #tempbalance		                                from EmployeePTOHourLog pthour                                          AND Pto.StartDate >= pthour.FromDate AND Pto.StartDate <= pthour.EndDate   		                                where pthour.UserId = @userid   and pthour.FromDate >= @FromDate and pthour.EndDate <= @EndDate   		                                SELECT @TotalRows = COUNT(*) FROM #tempbalance  		                                WHILE @RowId <= @TotalRows		                                BEGIN 			                                SELECT 				                                @PTOHour = PTOHour,				                                @Used = Used			                                FROM #tempbalance			                                WHERE RowId = @RowId	 			                                SET @PreviousBalance = @Balance 			                                SET @Balance = CAST(@PreviousBalance + @PTOHour - @Used AS FLOAT)     			                                UPDATE #tempbalance			                                SET TotalBalance = @Balance			                                WHERE RowId = @RowId	 			                                SET @RowId = @RowId + 1		                                END                                SELECT Id, UserId, PTOHour, FromDate, EndDate, CreatedDate, LastUpdatedDate, WorkingHours, Used, TotalBalance                                FROM #tempbalance                                 Select CreatedDate,Status,ISNULL(Minute / 60, 0) AS TotalHour from Pto                                Where UserId = @userid                                 and StartDate >= @Start and StartDate <= @End                                and Status IN ('Accepted', 'Rejected')                                                                                                  Drop table #tempbalance |System.Data.SqlClient.SqlException (0x80131904): Incorrect syntax near the keyword 'AND'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.Common.DbDataAdapter.FillInternal(DataSet dataset, DataTable[] datatables, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, Int32 startRecord, Int32 maxRecords, String srcTable, IDbCommand command, CommandBehavior behavior)
   at System.Data.Common.DbDataAdapter.Fill(DataSet dataSet, String srcTable)
   at HS.Framework.DataAccess.BaseDataAccess.GetDataSet(SqlCommand command, String tablename) in D:\USA Project\DFW Security\HS.Framework\DataAccess\BaseDataAccess.cs:line 439
ClientConnectionId:01f6bf1d-e69a-422c-9312-b21be63f4329
Error Number:156,State:1,Class:15
