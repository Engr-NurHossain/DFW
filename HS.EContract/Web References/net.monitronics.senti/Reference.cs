//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HS.EContract.net.monitronics.senti {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="eContractAPIUAT", Namespace="http://schemas.nevatech.com/services/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SendDocusignTemplateResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocuSignTemplateBaseObject))]
    public partial class eContractAPIUAT : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback APIVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchContractsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback NextSignerOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoidContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractAsPrimaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendQuoteEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUser2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContract2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContractConsumerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformCallbackToPartnerAPIFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateContract2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendQuoteEmail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNonSolicitAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCreditAuthorizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendECommerceAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterNotificationUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContractReadyForArchivalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResendEnvelopeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCreditAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCancelLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractDocumentConsumerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public eContractAPIUAT() {
            this.Url = global::HS.EContract.Properties.Settings.Default.HS_EContract_net_monitronics_senti_eContractAPIUAT;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event APIVersionCompletedEventHandler APIVersionCompleted;
        
        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event SearchContractsCompletedEventHandler SearchContractsCompleted;
        
        /// <remarks/>
        public event CreateContractCompletedEventHandler CreateContractCompleted;
        
        /// <remarks/>
        public event NextSignerCompletedEventHandler NextSignerCompleted;
        
        /// <remarks/>
        public event VoidContractCompletedEventHandler VoidContractCompleted;
        
        /// <remarks/>
        public event GetContractCompletedEventHandler GetContractCompleted;
        
        /// <remarks/>
        public event GetContractAsPrimaryCompletedEventHandler GetContractAsPrimaryCompleted;
        
        /// <remarks/>
        public event SendQuoteEmailCompletedEventHandler SendQuoteEmailCompleted;
        
        /// <remarks/>
        public event GetContractIDCompletedEventHandler GetContractIDCompleted;
        
        /// <remarks/>
        public event AuthenticateUser2CompletedEventHandler AuthenticateUser2Completed;
        
        /// <remarks/>
        public event CreateContract2CompletedEventHandler CreateContract2Completed;
        
        /// <remarks/>
        public event CreateContractConsumerCompletedEventHandler CreateContractConsumerCompleted;
        
        /// <remarks/>
        public event GetPerformCallbackToPartnerAPIFlagCompletedEventHandler GetPerformCallbackToPartnerAPIFlagCompleted;
        
        /// <remarks/>
        public event ValidateContract2CompletedEventHandler ValidateContract2Completed;
        
        /// <remarks/>
        public event SendQuoteEmail2CompletedEventHandler SendQuoteEmail2Completed;
        
        /// <remarks/>
        public event UploadAttachmentCompletedEventHandler UploadAttachmentCompleted;
        
        /// <remarks/>
        public event DeleteAttachmentCompletedEventHandler DeleteAttachmentCompleted;
        
        /// <remarks/>
        public event SendNonSolicitAgreementCompletedEventHandler SendNonSolicitAgreementCompleted;
        
        /// <remarks/>
        public event SendCreditAuthorizationCompletedEventHandler SendCreditAuthorizationCompleted;
        
        /// <remarks/>
        public event SendECommerceAgreementCompletedEventHandler SendECommerceAgreementCompleted;
        
        /// <remarks/>
        public event RegisterNotificationUrlCompletedEventHandler RegisterNotificationUrlCompleted;
        
        /// <remarks/>
        public event ContractReadyForArchivalCompletedEventHandler ContractReadyForArchivalCompleted;
        
        /// <remarks/>
        public event ResendEnvelopeCompletedEventHandler ResendEnvelopeCompleted;
        
        /// <remarks/>
        public event SearchCreditAuthCompletedEventHandler SearchCreditAuthCompleted;
        
        /// <remarks/>
        public event SendCancelLetterCompletedEventHandler SendCancelLetterCompleted;
        
        /// <remarks/>
        public event GetContractDocumentConsumerCompletedEventHandler GetContractDocumentConsumerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/APIVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string APIVersion() {
            object[] results = this.Invoke("APIVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void APIVersionAsync() {
            this.APIVersionAsync(null);
        }
        
        /// <remarks/>
        public void APIVersionAsync(object userState) {
            if ((this.APIVersionOperationCompleted == null)) {
                this.APIVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAPIVersionOperationCompleted);
            }
            this.InvokeAsync("APIVersion", new object[0], this.APIVersionOperationCompleted, userState);
        }
        
        private void OnAPIVersionOperationCompleted(object arg) {
            if ((this.APIVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.APIVersionCompleted(this, new APIVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/AuthenticateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AuthenticationResult AuthenticateUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Login, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password) {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        Login,
                        Password});
            return ((AuthenticationResult)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string Login, string Password) {
            this.AuthenticateUserAsync(Login, Password, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string Login, string Password, object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                        Login,
                        Password}, this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SearchContracts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
        public StatusSearch[] SearchContracts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StatusSearch SearchCriteria, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool StartDateSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool EndDateSpecified) {
            object[] results = this.Invoke("SearchContracts", new object[] {
                        SearchCriteria,
                        StartDate,
                        StartDateSpecified,
                        EndDate,
                        EndDateSpecified});
            return ((StatusSearch[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchContractsAsync(StatusSearch SearchCriteria, System.Nullable<System.DateTime> StartDate, bool StartDateSpecified, System.Nullable<System.DateTime> EndDate, bool EndDateSpecified) {
            this.SearchContractsAsync(SearchCriteria, StartDate, StartDateSpecified, EndDate, EndDateSpecified, null);
        }
        
        /// <remarks/>
        public void SearchContractsAsync(StatusSearch SearchCriteria, System.Nullable<System.DateTime> StartDate, bool StartDateSpecified, System.Nullable<System.DateTime> EndDate, bool EndDateSpecified, object userState) {
            if ((this.SearchContractsOperationCompleted == null)) {
                this.SearchContractsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchContractsOperationCompleted);
            }
            this.InvokeAsync("SearchContracts", new object[] {
                        SearchCriteria,
                        StartDate,
                        StartDateSpecified,
                        EndDate,
                        EndDateSpecified}, this.SearchContractsOperationCompleted, userState);
        }
        
        private void OnSearchContractsOperationCompleted(object arg) {
            if ((this.SearchContractsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchContractsCompleted(this, new SearchContractsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/CreateContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateContractResult CreateContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocument ContractData, SigningType PrimarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SecondarySigningTypeSpecified) {
            object[] results = this.Invoke("CreateContract", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified});
            return ((CreateContractResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContractAsync(ContractDocument ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified) {
            this.CreateContractAsync(ContractData, PrimarySigningType, PrimarySigningTypeSpecified, SecondarySigningType, SecondarySigningTypeSpecified, null);
        }
        
        /// <remarks/>
        public void CreateContractAsync(ContractDocument ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified, object userState) {
            if ((this.CreateContractOperationCompleted == null)) {
                this.CreateContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContractOperationCompleted);
            }
            this.InvokeAsync("CreateContract", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified}, this.CreateContractOperationCompleted, userState);
        }
        
        private void OnCreateContractOperationCompleted(object arg) {
            if ((this.CreateContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContractCompleted(this, new CreateContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/NextSigner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NextSigner(string EnvelopeID, [System.Xml.Serialization.XmlElementAttribute("NextSigner")] int NextSigner1, [System.Xml.Serialization.XmlElementAttribute("NextSigner")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool NextSigner1Specified) {
            object[] results = this.Invoke("NextSigner", new object[] {
                        EnvelopeID,
                        NextSigner1,
                        NextSigner1Specified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NextSignerAsync(string EnvelopeID, int NextSigner1, bool NextSigner1Specified) {
            this.NextSignerAsync(EnvelopeID, NextSigner1, NextSigner1Specified, null);
        }
        
        /// <remarks/>
        public void NextSignerAsync(string EnvelopeID, int NextSigner1, bool NextSigner1Specified, object userState) {
            if ((this.NextSignerOperationCompleted == null)) {
                this.NextSignerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNextSignerOperationCompleted);
            }
            this.InvokeAsync("NextSigner", new object[] {
                        EnvelopeID,
                        NextSigner1,
                        NextSigner1Specified}, this.NextSignerOperationCompleted, userState);
        }
        
        private void OnNextSignerOperationCompleted(object arg) {
            if ((this.NextSignerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NextSignerCompleted(this, new NextSignerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/VoidContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public VoidEnvelopeResult VoidContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID) {
            object[] results = this.Invoke("VoidContract", new object[] {
                        EnvelopeID});
            return ((VoidEnvelopeResult)(results[0]));
        }
        
        /// <remarks/>
        public void VoidContractAsync(string EnvelopeID) {
            this.VoidContractAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void VoidContractAsync(string EnvelopeID, object userState) {
            if ((this.VoidContractOperationCompleted == null)) {
                this.VoidContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidContractOperationCompleted);
            }
            this.InvokeAsync("VoidContract", new object[] {
                        EnvelopeID}, this.VoidContractOperationCompleted, userState);
        }
        
        private void OnVoidContractOperationCompleted(object arg) {
            if ((this.VoidContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidContractCompleted(this, new VoidContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/GetContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ContractEnvelope GetContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID) {
            object[] results = this.Invoke("GetContract", new object[] {
                        EnvelopeID});
            return ((ContractEnvelope)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractAsync(string EnvelopeID) {
            this.GetContractAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void GetContractAsync(string EnvelopeID, object userState) {
            if ((this.GetContractOperationCompleted == null)) {
                this.GetContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractOperationCompleted);
            }
            this.InvokeAsync("GetContract", new object[] {
                        EnvelopeID}, this.GetContractOperationCompleted, userState);
        }
        
        private void OnGetContractOperationCompleted(object arg) {
            if ((this.GetContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractCompleted(this, new GetContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/GetContractAsPrimary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ContractEnvelope GetContractAsPrimary([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID) {
            object[] results = this.Invoke("GetContractAsPrimary", new object[] {
                        EnvelopeID});
            return ((ContractEnvelope)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractAsPrimaryAsync(string EnvelopeID) {
            this.GetContractAsPrimaryAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void GetContractAsPrimaryAsync(string EnvelopeID, object userState) {
            if ((this.GetContractAsPrimaryOperationCompleted == null)) {
                this.GetContractAsPrimaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractAsPrimaryOperationCompleted);
            }
            this.InvokeAsync("GetContractAsPrimary", new object[] {
                        EnvelopeID}, this.GetContractAsPrimaryOperationCompleted, userState);
        }
        
        private void OnGetContractAsPrimaryOperationCompleted(object arg) {
            if ((this.GetContractAsPrimaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractAsPrimaryCompleted(this, new GetContractAsPrimaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendQuoteEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendQuoteEmail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocument ContractData, out bool SendQuoteEmailResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SendQuoteEmailResultSpecified) {
            object[] results = this.Invoke("SendQuoteEmail", new object[] {
                        ContractData});
            SendQuoteEmailResult = ((bool)(results[0]));
            SendQuoteEmailResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void SendQuoteEmailAsync(ContractDocument ContractData) {
            this.SendQuoteEmailAsync(ContractData, null);
        }
        
        /// <remarks/>
        public void SendQuoteEmailAsync(ContractDocument ContractData, object userState) {
            if ((this.SendQuoteEmailOperationCompleted == null)) {
                this.SendQuoteEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendQuoteEmailOperationCompleted);
            }
            this.InvokeAsync("SendQuoteEmail", new object[] {
                        ContractData}, this.SendQuoteEmailOperationCompleted, userState);
        }
        
        private void OnSendQuoteEmailOperationCompleted(object arg) {
            if ((this.SendQuoteEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendQuoteEmailCompleted(this, new SendQuoteEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/GetContractID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetContractID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID, out int GetContractIDResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetContractIDResultSpecified) {
            object[] results = this.Invoke("GetContractID", new object[] {
                        EnvelopeID});
            GetContractIDResult = ((int)(results[0]));
            GetContractIDResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetContractIDAsync(string EnvelopeID) {
            this.GetContractIDAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void GetContractIDAsync(string EnvelopeID, object userState) {
            if ((this.GetContractIDOperationCompleted == null)) {
                this.GetContractIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractIDOperationCompleted);
            }
            this.InvokeAsync("GetContractID", new object[] {
                        EnvelopeID}, this.GetContractIDOperationCompleted, userState);
        }
        
        private void OnGetContractIDOperationCompleted(object arg) {
            if ((this.GetContractIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractIDCompleted(this, new GetContractIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/AuthenticateUser2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AuthenticationResult2 AuthenticateUser2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Login, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password) {
            object[] results = this.Invoke("AuthenticateUser2", new object[] {
                        Login,
                        Password});
            return ((AuthenticationResult2)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUser2Async(string Login, string Password) {
            this.AuthenticateUser2Async(Login, Password, null);
        }
        
        /// <remarks/>
        public void AuthenticateUser2Async(string Login, string Password, object userState) {
            if ((this.AuthenticateUser2OperationCompleted == null)) {
                this.AuthenticateUser2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUser2OperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser2", new object[] {
                        Login,
                        Password}, this.AuthenticateUser2OperationCompleted, userState);
        }
        
        private void OnAuthenticateUser2OperationCompleted(object arg) {
            if ((this.AuthenticateUser2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUser2Completed(this, new AuthenticateUser2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/CreateContract2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateContractResult CreateContract2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocument2 ContractData, SigningType PrimarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SecondarySigningTypeSpecified) {
            object[] results = this.Invoke("CreateContract2", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified});
            return ((CreateContractResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContract2Async(ContractDocument2 ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified) {
            this.CreateContract2Async(ContractData, PrimarySigningType, PrimarySigningTypeSpecified, SecondarySigningType, SecondarySigningTypeSpecified, null);
        }
        
        /// <remarks/>
        public void CreateContract2Async(ContractDocument2 ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified, object userState) {
            if ((this.CreateContract2OperationCompleted == null)) {
                this.CreateContract2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContract2OperationCompleted);
            }
            this.InvokeAsync("CreateContract2", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified}, this.CreateContract2OperationCompleted, userState);
        }
        
        private void OnCreateContract2OperationCompleted(object arg) {
            if ((this.CreateContract2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContract2Completed(this, new CreateContract2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/CreateContractConsumer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateContractConsumerResult CreateContractConsumer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocumentConsumer ContractData, SigningType PrimarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SecondarySigningTypeSpecified) {
            object[] results = this.Invoke("CreateContractConsumer", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified});
            return ((CreateContractConsumerResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContractConsumerAsync(ContractDocumentConsumer ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified) {
            this.CreateContractConsumerAsync(ContractData, PrimarySigningType, PrimarySigningTypeSpecified, SecondarySigningType, SecondarySigningTypeSpecified, null);
        }
        
        /// <remarks/>
        public void CreateContractConsumerAsync(ContractDocumentConsumer ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified, object userState) {
            if ((this.CreateContractConsumerOperationCompleted == null)) {
                this.CreateContractConsumerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContractConsumerOperationCompleted);
            }
            this.InvokeAsync("CreateContractConsumer", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified}, this.CreateContractConsumerOperationCompleted, userState);
        }
        
        private void OnCreateContractConsumerOperationCompleted(object arg) {
            if ((this.CreateContractConsumerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContractConsumerCompleted(this, new CreateContractConsumerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/GetPerformCallbackToPartnerAPIFlag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPerformCallbackToPartnerAPIFlag([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID, out bool GetPerformCallbackToPartnerAPIFlagResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetPerformCallbackToPartnerAPIFlagResultSpecified) {
            object[] results = this.Invoke("GetPerformCallbackToPartnerAPIFlag", new object[] {
                        EnvelopeID});
            GetPerformCallbackToPartnerAPIFlagResult = ((bool)(results[0]));
            GetPerformCallbackToPartnerAPIFlagResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetPerformCallbackToPartnerAPIFlagAsync(string EnvelopeID) {
            this.GetPerformCallbackToPartnerAPIFlagAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void GetPerformCallbackToPartnerAPIFlagAsync(string EnvelopeID, object userState) {
            if ((this.GetPerformCallbackToPartnerAPIFlagOperationCompleted == null)) {
                this.GetPerformCallbackToPartnerAPIFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformCallbackToPartnerAPIFlagOperationCompleted);
            }
            this.InvokeAsync("GetPerformCallbackToPartnerAPIFlag", new object[] {
                        EnvelopeID}, this.GetPerformCallbackToPartnerAPIFlagOperationCompleted, userState);
        }
        
        private void OnGetPerformCallbackToPartnerAPIFlagOperationCompleted(object arg) {
            if ((this.GetPerformCallbackToPartnerAPIFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformCallbackToPartnerAPIFlagCompleted(this, new GetPerformCallbackToPartnerAPIFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/ValidateContract2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ValidationResult ValidateContract2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocument2 ContractData) {
            object[] results = this.Invoke("ValidateContract2", new object[] {
                        ContractData});
            return ((ValidationResult)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateContract2Async(ContractDocument2 ContractData) {
            this.ValidateContract2Async(ContractData, null);
        }
        
        /// <remarks/>
        public void ValidateContract2Async(ContractDocument2 ContractData, object userState) {
            if ((this.ValidateContract2OperationCompleted == null)) {
                this.ValidateContract2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateContract2OperationCompleted);
            }
            this.InvokeAsync("ValidateContract2", new object[] {
                        ContractData}, this.ValidateContract2OperationCompleted, userState);
        }
        
        private void OnValidateContract2OperationCompleted(object arg) {
            if ((this.ValidateContract2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateContract2Completed(this, new ValidateContract2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendQuoteEmail2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendQuoteEmail2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocument2 ContractData, out bool SendQuoteEmail2Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SendQuoteEmail2ResultSpecified) {
            object[] results = this.Invoke("SendQuoteEmail2", new object[] {
                        ContractData});
            SendQuoteEmail2Result = ((bool)(results[0]));
            SendQuoteEmail2ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void SendQuoteEmail2Async(ContractDocument2 ContractData) {
            this.SendQuoteEmail2Async(ContractData, null);
        }
        
        /// <remarks/>
        public void SendQuoteEmail2Async(ContractDocument2 ContractData, object userState) {
            if ((this.SendQuoteEmail2OperationCompleted == null)) {
                this.SendQuoteEmail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendQuoteEmail2OperationCompleted);
            }
            this.InvokeAsync("SendQuoteEmail2", new object[] {
                        ContractData}, this.SendQuoteEmail2OperationCompleted, userState);
        }
        
        private void OnSendQuoteEmail2OperationCompleted(object arg) {
            if ((this.SendQuoteEmail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendQuoteEmail2Completed(this, new SendQuoteEmail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/UploadAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UploadAttachment([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] Attachment, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Tag) {
            object[] results = this.Invoke("UploadAttachment", new object[] {
                        Attachment,
                        Tag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAttachmentAsync(byte[] Attachment, string Tag) {
            this.UploadAttachmentAsync(Attachment, Tag, null);
        }
        
        /// <remarks/>
        public void UploadAttachmentAsync(byte[] Attachment, string Tag, object userState) {
            if ((this.UploadAttachmentOperationCompleted == null)) {
                this.UploadAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAttachmentOperationCompleted);
            }
            this.InvokeAsync("UploadAttachment", new object[] {
                        Attachment,
                        Tag}, this.UploadAttachmentOperationCompleted, userState);
        }
        
        private void OnUploadAttachmentOperationCompleted(object arg) {
            if ((this.UploadAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAttachmentCompleted(this, new UploadAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/DeleteAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAttachment([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AttachmentGUID, out bool DeleteAttachmentResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteAttachmentResultSpecified) {
            object[] results = this.Invoke("DeleteAttachment", new object[] {
                        AttachmentGUID});
            DeleteAttachmentResult = ((bool)(results[0]));
            DeleteAttachmentResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(string AttachmentGUID) {
            this.DeleteAttachmentAsync(AttachmentGUID, null);
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(string AttachmentGUID, object userState) {
            if ((this.DeleteAttachmentOperationCompleted == null)) {
                this.DeleteAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteAttachment", new object[] {
                        AttachmentGUID}, this.DeleteAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteAttachmentOperationCompleted(object arg) {
            if ((this.DeleteAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAttachmentCompleted(this, new DeleteAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendNonSolicitAgreement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GenericResult SendNonSolicitAgreement([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EmailAddress) {
            object[] results = this.Invoke("SendNonSolicitAgreement", new object[] {
                        Username,
                        Password,
                        EmailAddress});
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendNonSolicitAgreementAsync(string Username, string Password, string EmailAddress) {
            this.SendNonSolicitAgreementAsync(Username, Password, EmailAddress, null);
        }
        
        /// <remarks/>
        public void SendNonSolicitAgreementAsync(string Username, string Password, string EmailAddress, object userState) {
            if ((this.SendNonSolicitAgreementOperationCompleted == null)) {
                this.SendNonSolicitAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNonSolicitAgreementOperationCompleted);
            }
            this.InvokeAsync("SendNonSolicitAgreement", new object[] {
                        Username,
                        Password,
                        EmailAddress}, this.SendNonSolicitAgreementOperationCompleted, userState);
        }
        
        private void OnSendNonSolicitAgreementOperationCompleted(object arg) {
            if ((this.SendNonSolicitAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNonSolicitAgreementCompleted(this, new SendNonSolicitAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendCreditAuthorization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GenericResult SendCreditAuthorization([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocuSignTemplateCreditAuthDocument TemplateData) {
            object[] results = this.Invoke("SendCreditAuthorization", new object[] {
                        TemplateData});
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendCreditAuthorizationAsync(DocuSignTemplateCreditAuthDocument TemplateData) {
            this.SendCreditAuthorizationAsync(TemplateData, null);
        }
        
        /// <remarks/>
        public void SendCreditAuthorizationAsync(DocuSignTemplateCreditAuthDocument TemplateData, object userState) {
            if ((this.SendCreditAuthorizationOperationCompleted == null)) {
                this.SendCreditAuthorizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCreditAuthorizationOperationCompleted);
            }
            this.InvokeAsync("SendCreditAuthorization", new object[] {
                        TemplateData}, this.SendCreditAuthorizationOperationCompleted, userState);
        }
        
        private void OnSendCreditAuthorizationOperationCompleted(object arg) {
            if ((this.SendCreditAuthorizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCreditAuthorizationCompleted(this, new SendCreditAuthorizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendECommerceAgreement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SendDocusignTemplateResult2 SendECommerceAgreement([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocuSignTemplateEcommerceAgreement TemplateData) {
            object[] results = this.Invoke("SendECommerceAgreement", new object[] {
                        TemplateData});
            return ((SendDocusignTemplateResult2)(results[0]));
        }
        
        /// <remarks/>
        public void SendECommerceAgreementAsync(DocuSignTemplateEcommerceAgreement TemplateData) {
            this.SendECommerceAgreementAsync(TemplateData, null);
        }
        
        /// <remarks/>
        public void SendECommerceAgreementAsync(DocuSignTemplateEcommerceAgreement TemplateData, object userState) {
            if ((this.SendECommerceAgreementOperationCompleted == null)) {
                this.SendECommerceAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendECommerceAgreementOperationCompleted);
            }
            this.InvokeAsync("SendECommerceAgreement", new object[] {
                        TemplateData}, this.SendECommerceAgreementOperationCompleted, userState);
        }
        
        private void OnSendECommerceAgreementOperationCompleted(object arg) {
            if ((this.SendECommerceAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendECommerceAgreementCompleted(this, new SendECommerceAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/RegisterNotificationUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GenericResult RegisterNotificationUrl([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string notificationURL) {
            object[] results = this.Invoke("RegisterNotificationUrl", new object[] {
                        username,
                        password,
                        notificationURL});
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterNotificationUrlAsync(string username, string password, string notificationURL) {
            this.RegisterNotificationUrlAsync(username, password, notificationURL, null);
        }
        
        /// <remarks/>
        public void RegisterNotificationUrlAsync(string username, string password, string notificationURL, object userState) {
            if ((this.RegisterNotificationUrlOperationCompleted == null)) {
                this.RegisterNotificationUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterNotificationUrlOperationCompleted);
            }
            this.InvokeAsync("RegisterNotificationUrl", new object[] {
                        username,
                        password,
                        notificationURL}, this.RegisterNotificationUrlOperationCompleted, userState);
        }
        
        private void OnRegisterNotificationUrlOperationCompleted(object arg) {
            if ((this.RegisterNotificationUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterNotificationUrlCompleted(this, new RegisterNotificationUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/ContractReadyForArchival", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ContractReadyForArchival([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CSNumber, out bool ContractReadyForArchivalResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ContractReadyForArchivalResultSpecified) {
            object[] results = this.Invoke("ContractReadyForArchival", new object[] {
                        EnvelopeId,
                        CSNumber});
            ContractReadyForArchivalResult = ((bool)(results[0]));
            ContractReadyForArchivalResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ContractReadyForArchivalAsync(string EnvelopeId, string CSNumber) {
            this.ContractReadyForArchivalAsync(EnvelopeId, CSNumber, null);
        }
        
        /// <remarks/>
        public void ContractReadyForArchivalAsync(string EnvelopeId, string CSNumber, object userState) {
            if ((this.ContractReadyForArchivalOperationCompleted == null)) {
                this.ContractReadyForArchivalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContractReadyForArchivalOperationCompleted);
            }
            this.InvokeAsync("ContractReadyForArchival", new object[] {
                        EnvelopeId,
                        CSNumber}, this.ContractReadyForArchivalOperationCompleted, userState);
        }
        
        private void OnContractReadyForArchivalOperationCompleted(object arg) {
            if ((this.ContractReadyForArchivalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContractReadyForArchivalCompleted(this, new ContractReadyForArchivalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/ResendEnvelope", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResendEnvelope([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NewEmailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NewRecipientFullName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Role, out bool ResendEnvelopeResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ResendEnvelopeResultSpecified) {
            object[] results = this.Invoke("ResendEnvelope", new object[] {
                        EnvelopeID,
                        NewEmailAddress,
                        NewRecipientFullName,
                        Role});
            ResendEnvelopeResult = ((bool)(results[0]));
            ResendEnvelopeResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ResendEnvelopeAsync(string EnvelopeID, string NewEmailAddress, string NewRecipientFullName, string Role) {
            this.ResendEnvelopeAsync(EnvelopeID, NewEmailAddress, NewRecipientFullName, Role, null);
        }
        
        /// <remarks/>
        public void ResendEnvelopeAsync(string EnvelopeID, string NewEmailAddress, string NewRecipientFullName, string Role, object userState) {
            if ((this.ResendEnvelopeOperationCompleted == null)) {
                this.ResendEnvelopeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResendEnvelopeOperationCompleted);
            }
            this.InvokeAsync("ResendEnvelope", new object[] {
                        EnvelopeID,
                        NewEmailAddress,
                        NewRecipientFullName,
                        Role}, this.ResendEnvelopeOperationCompleted, userState);
        }
        
        private void OnResendEnvelopeOperationCompleted(object arg) {
            if ((this.ResendEnvelopeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResendEnvelopeCompleted(this, new ResendEnvelopeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SearchCreditAuth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract.CreditAuth")]
        public CreditAuthHeader[] SearchCreditAuth([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CreditAuthHeader SearchCriteria, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool StartDateSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool EndDateSpecified) {
            object[] results = this.Invoke("SearchCreditAuth", new object[] {
                        SearchCriteria,
                        StartDate,
                        StartDateSpecified,
                        EndDate,
                        EndDateSpecified});
            return ((CreditAuthHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCreditAuthAsync(CreditAuthHeader SearchCriteria, System.Nullable<System.DateTime> StartDate, bool StartDateSpecified, System.Nullable<System.DateTime> EndDate, bool EndDateSpecified) {
            this.SearchCreditAuthAsync(SearchCriteria, StartDate, StartDateSpecified, EndDate, EndDateSpecified, null);
        }
        
        /// <remarks/>
        public void SearchCreditAuthAsync(CreditAuthHeader SearchCriteria, System.Nullable<System.DateTime> StartDate, bool StartDateSpecified, System.Nullable<System.DateTime> EndDate, bool EndDateSpecified, object userState) {
            if ((this.SearchCreditAuthOperationCompleted == null)) {
                this.SearchCreditAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCreditAuthOperationCompleted);
            }
            this.InvokeAsync("SearchCreditAuth", new object[] {
                        SearchCriteria,
                        StartDate,
                        StartDateSpecified,
                        EndDate,
                        EndDateSpecified}, this.SearchCreditAuthOperationCompleted, userState);
        }
        
        private void OnSearchCreditAuthOperationCompleted(object arg) {
            if ((this.SearchCreditAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCreditAuthCompleted(this, new SearchCreditAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendCancelLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GenericResult SendCancelLetter([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocuSignTemplateCancelLetter TemplateData) {
            object[] results = this.Invoke("SendCancelLetter", new object[] {
                        TemplateData});
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendCancelLetterAsync(DocuSignTemplateCancelLetter TemplateData) {
            this.SendCancelLetterAsync(TemplateData, null);
        }
        
        /// <remarks/>
        public void SendCancelLetterAsync(DocuSignTemplateCancelLetter TemplateData, object userState) {
            if ((this.SendCancelLetterOperationCompleted == null)) {
                this.SendCancelLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCancelLetterOperationCompleted);
            }
            this.InvokeAsync("SendCancelLetter", new object[] {
                        TemplateData}, this.SendCancelLetterOperationCompleted, userState);
        }
        
        private void OnSendCancelLetterOperationCompleted(object arg) {
            if ((this.SendCancelLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCancelLetterCompleted(this, new SendCancelLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/GetContractDocumentConsumer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ContractDocumentConsumer GetContractDocumentConsumer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID) {
            object[] results = this.Invoke("GetContractDocumentConsumer", new object[] {
                        EnvelopeID});
            return ((ContractDocumentConsumer)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractDocumentConsumerAsync(string EnvelopeID) {
            this.GetContractDocumentConsumerAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void GetContractDocumentConsumerAsync(string EnvelopeID, object userState) {
            if ((this.GetContractDocumentConsumerOperationCompleted == null)) {
                this.GetContractDocumentConsumerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractDocumentConsumerOperationCompleted);
            }
            this.InvokeAsync("GetContractDocumentConsumer", new object[] {
                        EnvelopeID}, this.GetContractDocumentConsumerOperationCompleted, userState);
        }
        
        private void OnGetContractDocumentConsumerOperationCompleted(object arg) {
            if ((this.GetContractDocumentConsumerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractDocumentConsumerCompleted(this, new GetContractDocumentConsumerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="eContractAPIUAT_brinks", Namespace="http://schemas.nevatech.com/services/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SendDocusignTemplateResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocuSignTemplateBaseObject))]
    public partial class eContractAPIUAT_brinks : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback APIVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchContractsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback NextSignerOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoidContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractAsPrimaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendQuoteEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUser2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContract2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContractConsumerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformCallbackToPartnerAPIFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateContract2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendQuoteEmail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendNonSolicitAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCreditAuthorizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendECommerceAgreementOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterNotificationUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContractReadyForArchivalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResendEnvelopeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCreditAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCancelLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractDocumentConsumerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public eContractAPIUAT_brinks() {
            this.Url = "https://sentistg.brinkshome.com/eContractAPIUAT";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event APIVersionCompletedEventHandler APIVersionCompleted;
        
        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event SearchContractsCompletedEventHandler SearchContractsCompleted;
        
        /// <remarks/>
        public event CreateContractCompletedEventHandler CreateContractCompleted;
        
        /// <remarks/>
        public event NextSignerCompletedEventHandler NextSignerCompleted;
        
        /// <remarks/>
        public event VoidContractCompletedEventHandler VoidContractCompleted;
        
        /// <remarks/>
        public event GetContractCompletedEventHandler GetContractCompleted;
        
        /// <remarks/>
        public event GetContractAsPrimaryCompletedEventHandler GetContractAsPrimaryCompleted;
        
        /// <remarks/>
        public event SendQuoteEmailCompletedEventHandler SendQuoteEmailCompleted;
        
        /// <remarks/>
        public event GetContractIDCompletedEventHandler GetContractIDCompleted;
        
        /// <remarks/>
        public event AuthenticateUser2CompletedEventHandler AuthenticateUser2Completed;
        
        /// <remarks/>
        public event CreateContract2CompletedEventHandler CreateContract2Completed;
        
        /// <remarks/>
        public event CreateContractConsumerCompletedEventHandler CreateContractConsumerCompleted;
        
        /// <remarks/>
        public event GetPerformCallbackToPartnerAPIFlagCompletedEventHandler GetPerformCallbackToPartnerAPIFlagCompleted;
        
        /// <remarks/>
        public event ValidateContract2CompletedEventHandler ValidateContract2Completed;
        
        /// <remarks/>
        public event SendQuoteEmail2CompletedEventHandler SendQuoteEmail2Completed;
        
        /// <remarks/>
        public event UploadAttachmentCompletedEventHandler UploadAttachmentCompleted;
        
        /// <remarks/>
        public event DeleteAttachmentCompletedEventHandler DeleteAttachmentCompleted;
        
        /// <remarks/>
        public event SendNonSolicitAgreementCompletedEventHandler SendNonSolicitAgreementCompleted;
        
        /// <remarks/>
        public event SendCreditAuthorizationCompletedEventHandler SendCreditAuthorizationCompleted;
        
        /// <remarks/>
        public event SendECommerceAgreementCompletedEventHandler SendECommerceAgreementCompleted;
        
        /// <remarks/>
        public event RegisterNotificationUrlCompletedEventHandler RegisterNotificationUrlCompleted;
        
        /// <remarks/>
        public event ContractReadyForArchivalCompletedEventHandler ContractReadyForArchivalCompleted;
        
        /// <remarks/>
        public event ResendEnvelopeCompletedEventHandler ResendEnvelopeCompleted;
        
        /// <remarks/>
        public event SearchCreditAuthCompletedEventHandler SearchCreditAuthCompleted;
        
        /// <remarks/>
        public event SendCancelLetterCompletedEventHandler SendCancelLetterCompleted;
        
        /// <remarks/>
        public event GetContractDocumentConsumerCompletedEventHandler GetContractDocumentConsumerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/APIVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string APIVersion() {
            object[] results = this.Invoke("APIVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void APIVersionAsync() {
            this.APIVersionAsync(null);
        }
        
        /// <remarks/>
        public void APIVersionAsync(object userState) {
            if ((this.APIVersionOperationCompleted == null)) {
                this.APIVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAPIVersionOperationCompleted);
            }
            this.InvokeAsync("APIVersion", new object[0], this.APIVersionOperationCompleted, userState);
        }
        
        private void OnAPIVersionOperationCompleted(object arg) {
            if ((this.APIVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.APIVersionCompleted(this, new APIVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/AuthenticateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AuthenticationResult AuthenticateUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Login, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password) {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        Login,
                        Password});
            return ((AuthenticationResult)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string Login, string Password) {
            this.AuthenticateUserAsync(Login, Password, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string Login, string Password, object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                        Login,
                        Password}, this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SearchContracts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
        public StatusSearch[] SearchContracts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] StatusSearch SearchCriteria, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool StartDateSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool EndDateSpecified) {
            object[] results = this.Invoke("SearchContracts", new object[] {
                        SearchCriteria,
                        StartDate,
                        StartDateSpecified,
                        EndDate,
                        EndDateSpecified});
            return ((StatusSearch[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchContractsAsync(StatusSearch SearchCriteria, System.Nullable<System.DateTime> StartDate, bool StartDateSpecified, System.Nullable<System.DateTime> EndDate, bool EndDateSpecified) {
            this.SearchContractsAsync(SearchCriteria, StartDate, StartDateSpecified, EndDate, EndDateSpecified, null);
        }
        
        /// <remarks/>
        public void SearchContractsAsync(StatusSearch SearchCriteria, System.Nullable<System.DateTime> StartDate, bool StartDateSpecified, System.Nullable<System.DateTime> EndDate, bool EndDateSpecified, object userState) {
            if ((this.SearchContractsOperationCompleted == null)) {
                this.SearchContractsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchContractsOperationCompleted);
            }
            this.InvokeAsync("SearchContracts", new object[] {
                        SearchCriteria,
                        StartDate,
                        StartDateSpecified,
                        EndDate,
                        EndDateSpecified}, this.SearchContractsOperationCompleted, userState);
        }
        
        private void OnSearchContractsOperationCompleted(object arg) {
            if ((this.SearchContractsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchContractsCompleted(this, new SearchContractsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/CreateContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateContractResult CreateContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocument ContractData, SigningType PrimarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SecondarySigningTypeSpecified) {
            object[] results = this.Invoke("CreateContract", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified});
            return ((CreateContractResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContractAsync(ContractDocument ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified) {
            this.CreateContractAsync(ContractData, PrimarySigningType, PrimarySigningTypeSpecified, SecondarySigningType, SecondarySigningTypeSpecified, null);
        }
        
        /// <remarks/>
        public void CreateContractAsync(ContractDocument ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified, object userState) {
            if ((this.CreateContractOperationCompleted == null)) {
                this.CreateContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContractOperationCompleted);
            }
            this.InvokeAsync("CreateContract", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified}, this.CreateContractOperationCompleted, userState);
        }
        
        private void OnCreateContractOperationCompleted(object arg) {
            if ((this.CreateContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContractCompleted(this, new CreateContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/NextSigner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NextSigner(string EnvelopeID, [System.Xml.Serialization.XmlElementAttribute("NextSigner")] int NextSigner1, [System.Xml.Serialization.XmlElementAttribute("NextSigner")] [System.Xml.Serialization.XmlIgnoreAttribute()] bool NextSigner1Specified) {
            object[] results = this.Invoke("NextSigner", new object[] {
                        EnvelopeID,
                        NextSigner1,
                        NextSigner1Specified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NextSignerAsync(string EnvelopeID, int NextSigner1, bool NextSigner1Specified) {
            this.NextSignerAsync(EnvelopeID, NextSigner1, NextSigner1Specified, null);
        }
        
        /// <remarks/>
        public void NextSignerAsync(string EnvelopeID, int NextSigner1, bool NextSigner1Specified, object userState) {
            if ((this.NextSignerOperationCompleted == null)) {
                this.NextSignerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNextSignerOperationCompleted);
            }
            this.InvokeAsync("NextSigner", new object[] {
                        EnvelopeID,
                        NextSigner1,
                        NextSigner1Specified}, this.NextSignerOperationCompleted, userState);
        }
        
        private void OnNextSignerOperationCompleted(object arg) {
            if ((this.NextSignerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NextSignerCompleted(this, new NextSignerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/VoidContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public VoidEnvelopeResult VoidContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID) {
            object[] results = this.Invoke("VoidContract", new object[] {
                        EnvelopeID});
            return ((VoidEnvelopeResult)(results[0]));
        }
        
        /// <remarks/>
        public void VoidContractAsync(string EnvelopeID) {
            this.VoidContractAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void VoidContractAsync(string EnvelopeID, object userState) {
            if ((this.VoidContractOperationCompleted == null)) {
                this.VoidContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidContractOperationCompleted);
            }
            this.InvokeAsync("VoidContract", new object[] {
                        EnvelopeID}, this.VoidContractOperationCompleted, userState);
        }
        
        private void OnVoidContractOperationCompleted(object arg) {
            if ((this.VoidContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidContractCompleted(this, new VoidContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/GetContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ContractEnvelope GetContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID) {
            object[] results = this.Invoke("GetContract", new object[] {
                        EnvelopeID});
            return ((ContractEnvelope)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractAsync(string EnvelopeID) {
            this.GetContractAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void GetContractAsync(string EnvelopeID, object userState) {
            if ((this.GetContractOperationCompleted == null)) {
                this.GetContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractOperationCompleted);
            }
            this.InvokeAsync("GetContract", new object[] {
                        EnvelopeID}, this.GetContractOperationCompleted, userState);
        }
        
        private void OnGetContractOperationCompleted(object arg) {
            if ((this.GetContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractCompleted(this, new GetContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/GetContractAsPrimary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ContractEnvelope GetContractAsPrimary([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID) {
            object[] results = this.Invoke("GetContractAsPrimary", new object[] {
                        EnvelopeID});
            return ((ContractEnvelope)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractAsPrimaryAsync(string EnvelopeID) {
            this.GetContractAsPrimaryAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void GetContractAsPrimaryAsync(string EnvelopeID, object userState) {
            if ((this.GetContractAsPrimaryOperationCompleted == null)) {
                this.GetContractAsPrimaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractAsPrimaryOperationCompleted);
            }
            this.InvokeAsync("GetContractAsPrimary", new object[] {
                        EnvelopeID}, this.GetContractAsPrimaryOperationCompleted, userState);
        }
        
        private void OnGetContractAsPrimaryOperationCompleted(object arg) {
            if ((this.GetContractAsPrimaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractAsPrimaryCompleted(this, new GetContractAsPrimaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendQuoteEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendQuoteEmail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocument ContractData, out bool SendQuoteEmailResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SendQuoteEmailResultSpecified) {
            object[] results = this.Invoke("SendQuoteEmail", new object[] {
                        ContractData});
            SendQuoteEmailResult = ((bool)(results[0]));
            SendQuoteEmailResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void SendQuoteEmailAsync(ContractDocument ContractData) {
            this.SendQuoteEmailAsync(ContractData, null);
        }
        
        /// <remarks/>
        public void SendQuoteEmailAsync(ContractDocument ContractData, object userState) {
            if ((this.SendQuoteEmailOperationCompleted == null)) {
                this.SendQuoteEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendQuoteEmailOperationCompleted);
            }
            this.InvokeAsync("SendQuoteEmail", new object[] {
                        ContractData}, this.SendQuoteEmailOperationCompleted, userState);
        }
        
        private void OnSendQuoteEmailOperationCompleted(object arg) {
            if ((this.SendQuoteEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendQuoteEmailCompleted(this, new SendQuoteEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/GetContractID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetContractID([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID, out int GetContractIDResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetContractIDResultSpecified) {
            object[] results = this.Invoke("GetContractID", new object[] {
                        EnvelopeID});
            GetContractIDResult = ((int)(results[0]));
            GetContractIDResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetContractIDAsync(string EnvelopeID) {
            this.GetContractIDAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void GetContractIDAsync(string EnvelopeID, object userState) {
            if ((this.GetContractIDOperationCompleted == null)) {
                this.GetContractIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractIDOperationCompleted);
            }
            this.InvokeAsync("GetContractID", new object[] {
                        EnvelopeID}, this.GetContractIDOperationCompleted, userState);
        }
        
        private void OnGetContractIDOperationCompleted(object arg) {
            if ((this.GetContractIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractIDCompleted(this, new GetContractIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/AuthenticateUser2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AuthenticationResult2 AuthenticateUser2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Login, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password) {
            object[] results = this.Invoke("AuthenticateUser2", new object[] {
                        Login,
                        Password});
            return ((AuthenticationResult2)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUser2Async(string Login, string Password) {
            this.AuthenticateUser2Async(Login, Password, null);
        }
        
        /// <remarks/>
        public void AuthenticateUser2Async(string Login, string Password, object userState) {
            if ((this.AuthenticateUser2OperationCompleted == null)) {
                this.AuthenticateUser2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUser2OperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser2", new object[] {
                        Login,
                        Password}, this.AuthenticateUser2OperationCompleted, userState);
        }
        
        private void OnAuthenticateUser2OperationCompleted(object arg) {
            if ((this.AuthenticateUser2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUser2Completed(this, new AuthenticateUser2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/CreateContract2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateContractResult CreateContract2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocument2 ContractData, SigningType PrimarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SecondarySigningTypeSpecified) {
            object[] results = this.Invoke("CreateContract2", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified});
            return ((CreateContractResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContract2Async(ContractDocument2 ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified) {
            this.CreateContract2Async(ContractData, PrimarySigningType, PrimarySigningTypeSpecified, SecondarySigningType, SecondarySigningTypeSpecified, null);
        }
        
        /// <remarks/>
        public void CreateContract2Async(ContractDocument2 ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified, object userState) {
            if ((this.CreateContract2OperationCompleted == null)) {
                this.CreateContract2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContract2OperationCompleted);
            }
            this.InvokeAsync("CreateContract2", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified}, this.CreateContract2OperationCompleted, userState);
        }
        
        private void OnCreateContract2OperationCompleted(object arg) {
            if ((this.CreateContract2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContract2Completed(this, new CreateContract2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/CreateContractConsumer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateContractConsumerResult CreateContractConsumer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocumentConsumer ContractData, SigningType PrimarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool SecondarySigningTypeSpecified) {
            object[] results = this.Invoke("CreateContractConsumer", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified});
            return ((CreateContractConsumerResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContractConsumerAsync(ContractDocumentConsumer ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified) {
            this.CreateContractConsumerAsync(ContractData, PrimarySigningType, PrimarySigningTypeSpecified, SecondarySigningType, SecondarySigningTypeSpecified, null);
        }
        
        /// <remarks/>
        public void CreateContractConsumerAsync(ContractDocumentConsumer ContractData, SigningType PrimarySigningType, bool PrimarySigningTypeSpecified, SigningType SecondarySigningType, bool SecondarySigningTypeSpecified, object userState) {
            if ((this.CreateContractConsumerOperationCompleted == null)) {
                this.CreateContractConsumerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContractConsumerOperationCompleted);
            }
            this.InvokeAsync("CreateContractConsumer", new object[] {
                        ContractData,
                        PrimarySigningType,
                        PrimarySigningTypeSpecified,
                        SecondarySigningType,
                        SecondarySigningTypeSpecified}, this.CreateContractConsumerOperationCompleted, userState);
        }
        
        private void OnCreateContractConsumerOperationCompleted(object arg) {
            if ((this.CreateContractConsumerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContractConsumerCompleted(this, new CreateContractConsumerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/GetPerformCallbackToPartnerAPIFlag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPerformCallbackToPartnerAPIFlag([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID, out bool GetPerformCallbackToPartnerAPIFlagResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetPerformCallbackToPartnerAPIFlagResultSpecified) {
            object[] results = this.Invoke("GetPerformCallbackToPartnerAPIFlag", new object[] {
                        EnvelopeID});
            GetPerformCallbackToPartnerAPIFlagResult = ((bool)(results[0]));
            GetPerformCallbackToPartnerAPIFlagResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GetPerformCallbackToPartnerAPIFlagAsync(string EnvelopeID) {
            this.GetPerformCallbackToPartnerAPIFlagAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void GetPerformCallbackToPartnerAPIFlagAsync(string EnvelopeID, object userState) {
            if ((this.GetPerformCallbackToPartnerAPIFlagOperationCompleted == null)) {
                this.GetPerformCallbackToPartnerAPIFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformCallbackToPartnerAPIFlagOperationCompleted);
            }
            this.InvokeAsync("GetPerformCallbackToPartnerAPIFlag", new object[] {
                        EnvelopeID}, this.GetPerformCallbackToPartnerAPIFlagOperationCompleted, userState);
        }
        
        private void OnGetPerformCallbackToPartnerAPIFlagOperationCompleted(object arg) {
            if ((this.GetPerformCallbackToPartnerAPIFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformCallbackToPartnerAPIFlagCompleted(this, new GetPerformCallbackToPartnerAPIFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/ValidateContract2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ValidationResult ValidateContract2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocument2 ContractData) {
            object[] results = this.Invoke("ValidateContract2", new object[] {
                        ContractData});
            return ((ValidationResult)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateContract2Async(ContractDocument2 ContractData) {
            this.ValidateContract2Async(ContractData, null);
        }
        
        /// <remarks/>
        public void ValidateContract2Async(ContractDocument2 ContractData, object userState) {
            if ((this.ValidateContract2OperationCompleted == null)) {
                this.ValidateContract2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateContract2OperationCompleted);
            }
            this.InvokeAsync("ValidateContract2", new object[] {
                        ContractData}, this.ValidateContract2OperationCompleted, userState);
        }
        
        private void OnValidateContract2OperationCompleted(object arg) {
            if ((this.ValidateContract2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateContract2Completed(this, new ValidateContract2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendQuoteEmail2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendQuoteEmail2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ContractDocument2 ContractData, out bool SendQuoteEmail2Result, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SendQuoteEmail2ResultSpecified) {
            object[] results = this.Invoke("SendQuoteEmail2", new object[] {
                        ContractData});
            SendQuoteEmail2Result = ((bool)(results[0]));
            SendQuoteEmail2ResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void SendQuoteEmail2Async(ContractDocument2 ContractData) {
            this.SendQuoteEmail2Async(ContractData, null);
        }
        
        /// <remarks/>
        public void SendQuoteEmail2Async(ContractDocument2 ContractData, object userState) {
            if ((this.SendQuoteEmail2OperationCompleted == null)) {
                this.SendQuoteEmail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendQuoteEmail2OperationCompleted);
            }
            this.InvokeAsync("SendQuoteEmail2", new object[] {
                        ContractData}, this.SendQuoteEmail2OperationCompleted, userState);
        }
        
        private void OnSendQuoteEmail2OperationCompleted(object arg) {
            if ((this.SendQuoteEmail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendQuoteEmail2Completed(this, new SendQuoteEmail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/UploadAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UploadAttachment([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] Attachment, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Tag) {
            object[] results = this.Invoke("UploadAttachment", new object[] {
                        Attachment,
                        Tag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAttachmentAsync(byte[] Attachment, string Tag) {
            this.UploadAttachmentAsync(Attachment, Tag, null);
        }
        
        /// <remarks/>
        public void UploadAttachmentAsync(byte[] Attachment, string Tag, object userState) {
            if ((this.UploadAttachmentOperationCompleted == null)) {
                this.UploadAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAttachmentOperationCompleted);
            }
            this.InvokeAsync("UploadAttachment", new object[] {
                        Attachment,
                        Tag}, this.UploadAttachmentOperationCompleted, userState);
        }
        
        private void OnUploadAttachmentOperationCompleted(object arg) {
            if ((this.UploadAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAttachmentCompleted(this, new UploadAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/DeleteAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAttachment([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AttachmentGUID, out bool DeleteAttachmentResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteAttachmentResultSpecified) {
            object[] results = this.Invoke("DeleteAttachment", new object[] {
                        AttachmentGUID});
            DeleteAttachmentResult = ((bool)(results[0]));
            DeleteAttachmentResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(string AttachmentGUID) {
            this.DeleteAttachmentAsync(AttachmentGUID, null);
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(string AttachmentGUID, object userState) {
            if ((this.DeleteAttachmentOperationCompleted == null)) {
                this.DeleteAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteAttachment", new object[] {
                        AttachmentGUID}, this.DeleteAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteAttachmentOperationCompleted(object arg) {
            if ((this.DeleteAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAttachmentCompleted(this, new DeleteAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendNonSolicitAgreement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GenericResult SendNonSolicitAgreement([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EmailAddress) {
            object[] results = this.Invoke("SendNonSolicitAgreement", new object[] {
                        Username,
                        Password,
                        EmailAddress});
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendNonSolicitAgreementAsync(string Username, string Password, string EmailAddress) {
            this.SendNonSolicitAgreementAsync(Username, Password, EmailAddress, null);
        }
        
        /// <remarks/>
        public void SendNonSolicitAgreementAsync(string Username, string Password, string EmailAddress, object userState) {
            if ((this.SendNonSolicitAgreementOperationCompleted == null)) {
                this.SendNonSolicitAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendNonSolicitAgreementOperationCompleted);
            }
            this.InvokeAsync("SendNonSolicitAgreement", new object[] {
                        Username,
                        Password,
                        EmailAddress}, this.SendNonSolicitAgreementOperationCompleted, userState);
        }
        
        private void OnSendNonSolicitAgreementOperationCompleted(object arg) {
            if ((this.SendNonSolicitAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendNonSolicitAgreementCompleted(this, new SendNonSolicitAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendCreditAuthorization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GenericResult SendCreditAuthorization([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocuSignTemplateCreditAuthDocument TemplateData) {
            object[] results = this.Invoke("SendCreditAuthorization", new object[] {
                        TemplateData});
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendCreditAuthorizationAsync(DocuSignTemplateCreditAuthDocument TemplateData) {
            this.SendCreditAuthorizationAsync(TemplateData, null);
        }
        
        /// <remarks/>
        public void SendCreditAuthorizationAsync(DocuSignTemplateCreditAuthDocument TemplateData, object userState) {
            if ((this.SendCreditAuthorizationOperationCompleted == null)) {
                this.SendCreditAuthorizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCreditAuthorizationOperationCompleted);
            }
            this.InvokeAsync("SendCreditAuthorization", new object[] {
                        TemplateData}, this.SendCreditAuthorizationOperationCompleted, userState);
        }
        
        private void OnSendCreditAuthorizationOperationCompleted(object arg) {
            if ((this.SendCreditAuthorizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCreditAuthorizationCompleted(this, new SendCreditAuthorizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendECommerceAgreement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SendDocusignTemplateResult2 SendECommerceAgreement([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocuSignTemplateEcommerceAgreement TemplateData) {
            object[] results = this.Invoke("SendECommerceAgreement", new object[] {
                        TemplateData});
            return ((SendDocusignTemplateResult2)(results[0]));
        }
        
        /// <remarks/>
        public void SendECommerceAgreementAsync(DocuSignTemplateEcommerceAgreement TemplateData) {
            this.SendECommerceAgreementAsync(TemplateData, null);
        }
        
        /// <remarks/>
        public void SendECommerceAgreementAsync(DocuSignTemplateEcommerceAgreement TemplateData, object userState) {
            if ((this.SendECommerceAgreementOperationCompleted == null)) {
                this.SendECommerceAgreementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendECommerceAgreementOperationCompleted);
            }
            this.InvokeAsync("SendECommerceAgreement", new object[] {
                        TemplateData}, this.SendECommerceAgreementOperationCompleted, userState);
        }
        
        private void OnSendECommerceAgreementOperationCompleted(object arg) {
            if ((this.SendECommerceAgreementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendECommerceAgreementCompleted(this, new SendECommerceAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/RegisterNotificationUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GenericResult RegisterNotificationUrl([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string notificationURL) {
            object[] results = this.Invoke("RegisterNotificationUrl", new object[] {
                        username,
                        password,
                        notificationURL});
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterNotificationUrlAsync(string username, string password, string notificationURL) {
            this.RegisterNotificationUrlAsync(username, password, notificationURL, null);
        }
        
        /// <remarks/>
        public void RegisterNotificationUrlAsync(string username, string password, string notificationURL, object userState) {
            if ((this.RegisterNotificationUrlOperationCompleted == null)) {
                this.RegisterNotificationUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterNotificationUrlOperationCompleted);
            }
            this.InvokeAsync("RegisterNotificationUrl", new object[] {
                        username,
                        password,
                        notificationURL}, this.RegisterNotificationUrlOperationCompleted, userState);
        }
        
        private void OnRegisterNotificationUrlOperationCompleted(object arg) {
            if ((this.RegisterNotificationUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterNotificationUrlCompleted(this, new RegisterNotificationUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/ContractReadyForArchival", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ContractReadyForArchival([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CSNumber, out bool ContractReadyForArchivalResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ContractReadyForArchivalResultSpecified) {
            object[] results = this.Invoke("ContractReadyForArchival", new object[] {
                        EnvelopeId,
                        CSNumber});
            ContractReadyForArchivalResult = ((bool)(results[0]));
            ContractReadyForArchivalResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ContractReadyForArchivalAsync(string EnvelopeId, string CSNumber) {
            this.ContractReadyForArchivalAsync(EnvelopeId, CSNumber, null);
        }
        
        /// <remarks/>
        public void ContractReadyForArchivalAsync(string EnvelopeId, string CSNumber, object userState) {
            if ((this.ContractReadyForArchivalOperationCompleted == null)) {
                this.ContractReadyForArchivalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContractReadyForArchivalOperationCompleted);
            }
            this.InvokeAsync("ContractReadyForArchival", new object[] {
                        EnvelopeId,
                        CSNumber}, this.ContractReadyForArchivalOperationCompleted, userState);
        }
        
        private void OnContractReadyForArchivalOperationCompleted(object arg) {
            if ((this.ContractReadyForArchivalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContractReadyForArchivalCompleted(this, new ContractReadyForArchivalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/ResendEnvelope", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResendEnvelope([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NewEmailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NewRecipientFullName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Role, out bool ResendEnvelopeResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ResendEnvelopeResultSpecified) {
            object[] results = this.Invoke("ResendEnvelope", new object[] {
                        EnvelopeID,
                        NewEmailAddress,
                        NewRecipientFullName,
                        Role});
            ResendEnvelopeResult = ((bool)(results[0]));
            ResendEnvelopeResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ResendEnvelopeAsync(string EnvelopeID, string NewEmailAddress, string NewRecipientFullName, string Role) {
            this.ResendEnvelopeAsync(EnvelopeID, NewEmailAddress, NewRecipientFullName, Role, null);
        }
        
        /// <remarks/>
        public void ResendEnvelopeAsync(string EnvelopeID, string NewEmailAddress, string NewRecipientFullName, string Role, object userState) {
            if ((this.ResendEnvelopeOperationCompleted == null)) {
                this.ResendEnvelopeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResendEnvelopeOperationCompleted);
            }
            this.InvokeAsync("ResendEnvelope", new object[] {
                        EnvelopeID,
                        NewEmailAddress,
                        NewRecipientFullName,
                        Role}, this.ResendEnvelopeOperationCompleted, userState);
        }
        
        private void OnResendEnvelopeOperationCompleted(object arg) {
            if ((this.ResendEnvelopeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResendEnvelopeCompleted(this, new ResendEnvelopeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SearchCreditAuth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract.CreditAuth")]
        public CreditAuthHeader[] SearchCreditAuth([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CreditAuthHeader SearchCriteria, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool StartDateSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool EndDateSpecified) {
            object[] results = this.Invoke("SearchCreditAuth", new object[] {
                        SearchCriteria,
                        StartDate,
                        StartDateSpecified,
                        EndDate,
                        EndDateSpecified});
            return ((CreditAuthHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCreditAuthAsync(CreditAuthHeader SearchCriteria, System.Nullable<System.DateTime> StartDate, bool StartDateSpecified, System.Nullable<System.DateTime> EndDate, bool EndDateSpecified) {
            this.SearchCreditAuthAsync(SearchCriteria, StartDate, StartDateSpecified, EndDate, EndDateSpecified, null);
        }
        
        /// <remarks/>
        public void SearchCreditAuthAsync(CreditAuthHeader SearchCriteria, System.Nullable<System.DateTime> StartDate, bool StartDateSpecified, System.Nullable<System.DateTime> EndDate, bool EndDateSpecified, object userState) {
            if ((this.SearchCreditAuthOperationCompleted == null)) {
                this.SearchCreditAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCreditAuthOperationCompleted);
            }
            this.InvokeAsync("SearchCreditAuth", new object[] {
                        SearchCriteria,
                        StartDate,
                        StartDateSpecified,
                        EndDate,
                        EndDateSpecified}, this.SearchCreditAuthOperationCompleted, userState);
        }
        
        private void OnSearchCreditAuthOperationCompleted(object arg) {
            if ((this.SearchCreditAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCreditAuthCompleted(this, new SearchCreditAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/SendCancelLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GenericResult SendCancelLetter([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocuSignTemplateCancelLetter TemplateData) {
            object[] results = this.Invoke("SendCancelLetter", new object[] {
                        TemplateData});
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendCancelLetterAsync(DocuSignTemplateCancelLetter TemplateData) {
            this.SendCancelLetterAsync(TemplateData, null);
        }
        
        /// <remarks/>
        public void SendCancelLetterAsync(DocuSignTemplateCancelLetter TemplateData, object userState) {
            if ((this.SendCancelLetterOperationCompleted == null)) {
                this.SendCancelLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCancelLetterOperationCompleted);
            }
            this.InvokeAsync("SendCancelLetter", new object[] {
                        TemplateData}, this.SendCancelLetterOperationCompleted, userState);
        }
        
        private void OnSendCancelLetterOperationCompleted(object arg) {
            if ((this.SendCancelLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCancelLetterCompleted(this, new SendCancelLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IeContract/GetContractDocumentConsumer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ContractDocumentConsumer GetContractDocumentConsumer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EnvelopeID) {
            object[] results = this.Invoke("GetContractDocumentConsumer", new object[] {
                        EnvelopeID});
            return ((ContractDocumentConsumer)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractDocumentConsumerAsync(string EnvelopeID) {
            this.GetContractDocumentConsumerAsync(EnvelopeID, null);
        }
        
        /// <remarks/>
        public void GetContractDocumentConsumerAsync(string EnvelopeID, object userState) {
            if ((this.GetContractDocumentConsumerOperationCompleted == null)) {
                this.GetContractDocumentConsumerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractDocumentConsumerOperationCompleted);
            }
            this.InvokeAsync("GetContractDocumentConsumer", new object[] {
                        EnvelopeID}, this.GetContractDocumentConsumerOperationCompleted, userState);
        }
        
        private void OnGetContractDocumentConsumerOperationCompleted(object arg) {
            if ((this.GetContractDocumentConsumerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractDocumentConsumerCompleted(this, new GetContractDocumentConsumerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticationResult2))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class AuthenticationResult {
        
        private OptionListing[] optionListField;
        
        private bool resultField;
        
        private bool resultFieldSpecified;
        
        private string resultDataField;
        
        private DealerDBA[] dealerDBAsField;
        
        private DealerEmail[] dealerEmailsField;
        
        private DealerInfo dealerInfoField;
        
        private string dealerLicenseExpirationWarningField;
        
        private string dealerLicenseExpiredField;
        
        private string dealerLicenseValidField;
        
        private DealerLicense[] dealerLicensesField;
        
        private MoniNetUserInfo userInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public OptionListing[] OptionList {
            get {
                return this.optionListField;
            }
            set {
                this.optionListField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResultData {
            get {
                return this.resultDataField;
            }
            set {
                this.resultDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="https://www.monitronics.net/WebServices/")]
        public DealerDBA[] dealerDBAs {
            get {
                return this.dealerDBAsField;
            }
            set {
                this.dealerDBAsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="https://www.monitronics.net/WebServices/")]
        public DealerEmail[] dealerEmails {
            get {
                return this.dealerEmailsField;
            }
            set {
                this.dealerEmailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DealerInfo dealerInfo {
            get {
                return this.dealerInfoField;
            }
            set {
                this.dealerInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dealerLicenseExpirationWarning {
            get {
                return this.dealerLicenseExpirationWarningField;
            }
            set {
                this.dealerLicenseExpirationWarningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dealerLicenseExpired {
            get {
                return this.dealerLicenseExpiredField;
            }
            set {
                this.dealerLicenseExpiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dealerLicenseValid {
            get {
                return this.dealerLicenseValidField;
            }
            set {
                this.dealerLicenseValidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/MoniNetSvc.BusinessEntities")]
        public DealerLicense[] dealerLicenses {
            get {
                return this.dealerLicensesField;
            }
            set {
                this.dealerLicensesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public MoniNetUserInfo userInfo {
            get {
                return this.userInfoField;
            }
            set {
                this.userInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class OptionListing {
        
        private string codeField;
        
        private string codeDescriptionField;
        
        private string countryField;
        
        private string descriptionField;
        
        private string filterIndexField;
        
        private string groupOrStateField;
        
        private string languageField;
        
        private int optionIDField;
        
        private bool optionIDFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CodeDescription {
            get {
                return this.codeDescriptionField;
            }
            set {
                this.codeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FilterIndex {
            get {
                return this.filterIndexField;
            }
            set {
                this.filterIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GroupOrState {
            get {
                return this.groupOrStateField;
            }
            set {
                this.groupOrStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public int OptionID {
            get {
                return this.optionIDField;
            }
            set {
                this.optionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OptionIDSpecified {
            get {
                return this.optionIDFieldSpecified;
            }
            set {
                this.optionIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SendDocusignTemplateResult2))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class SendDocusignTemplateResult {
        
        private string envelopeIDField;
        
        private ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] faultFieldsField;
        
        private bool resultField;
        
        private bool resultFieldSpecified;
        
        private string resultDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EnvelopeID {
            get {
                return this.envelopeIDField;
            }
            set {
                this.envelopeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] FaultFields {
            get {
                return this.faultFieldsField;
            }
            set {
                this.faultFieldsField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResultData {
            get {
                return this.resultDataField;
            }
            set {
                this.resultDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
    public partial class ArrayOfKeyValueOfstringstringKeyValueOfstringstring {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class SendDocusignTemplateResult2 : SendDocusignTemplateResult {
        
        private string[] signingURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] SigningURL {
            get {
                return this.signingURLField;
            }
            set {
                this.signingURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class DocumentSignatures {
        
        private string emailField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string roleField;
        
        private SigningType signTypeField;
        
        private bool signTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public SigningType SignType {
            get {
                return this.signTypeField;
            }
            set {
                this.signTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SignTypeSpecified {
            get {
                return this.signTypeFieldSpecified;
            }
            set {
                this.signTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum SigningType {
        
        /// <remarks/>
        Embedded,
        
        /// <remarks/>
        Remote,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocuSignTemplateCancelLetter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocuSignTemplateNonSolicitAgreement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocuSignTemplateEcommerceAgreement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocuSignTemplateCreditAuthDocument))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class DocuSignTemplateBaseObject {
        
        private string dealerNumberField;
        
        private DocumentSignatures[] docSignaturesField;
        
        private string emailBodyField;
        
        private string emailReplyToOverrideEmailField;
        
        private string emailReplyToOverrideNameField;
        
        private string emailSubjectField;
        
        private string envelopeIDField;
        
        private string languageField;
        
        private string templateKeyValueField;
        
        private DocuSignTemplateTypes templateTypeField;
        
        private bool templateTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerNumber {
            get {
                return this.dealerNumberField;
            }
            set {
                this.dealerNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentSignatures[] DocSignatures {
            get {
                return this.docSignaturesField;
            }
            set {
                this.docSignaturesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailBody {
            get {
                return this.emailBodyField;
            }
            set {
                this.emailBodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailReplyToOverrideEmail {
            get {
                return this.emailReplyToOverrideEmailField;
            }
            set {
                this.emailReplyToOverrideEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailReplyToOverrideName {
            get {
                return this.emailReplyToOverrideNameField;
            }
            set {
                this.emailReplyToOverrideNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailSubject {
            get {
                return this.emailSubjectField;
            }
            set {
                this.emailSubjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EnvelopeID {
            get {
                return this.envelopeIDField;
            }
            set {
                this.envelopeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TemplateKeyValue {
            get {
                return this.templateKeyValueField;
            }
            set {
                this.templateKeyValueField = value;
            }
        }
        
        /// <remarks/>
        public DocuSignTemplateTypes TemplateType {
            get {
                return this.templateTypeField;
            }
            set {
                this.templateTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TemplateTypeSpecified {
            get {
                return this.templateTypeFieldSpecified;
            }
            set {
                this.templateTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum DocuSignTemplateTypes {
        
        /// <remarks/>
        NonSolicitAgreement,
        
        /// <remarks/>
        CreditAuthorization,
        
        /// <remarks/>
        CancelLetter,
        
        /// <remarks/>
        EcommerceAgreement,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class DocuSignTemplateCancelLetter : DocuSignTemplateBaseObject {
        
        private string contractNumberField;
        
        private string customerEmailField;
        
        private string customerNameField;
        
        private string customerNumberField;
        
        private string dealerPortalPasswordField;
        
        private string dealerPortalUsernameField;
        
        private string documentStatusField;
        
        private string siteNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContractNumber {
            get {
                return this.contractNumberField;
            }
            set {
                this.contractNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerEmail {
            get {
                return this.customerEmailField;
            }
            set {
                this.customerEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerNumber {
            get {
                return this.customerNumberField;
            }
            set {
                this.customerNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerPortalPassword {
            get {
                return this.dealerPortalPasswordField;
            }
            set {
                this.dealerPortalPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerPortalUsername {
            get {
                return this.dealerPortalUsernameField;
            }
            set {
                this.dealerPortalUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DocumentStatus {
            get {
                return this.documentStatusField;
            }
            set {
                this.documentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SiteNumber {
            get {
                return this.siteNumberField;
            }
            set {
                this.siteNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class DocuSignTemplateNonSolicitAgreement : DocuSignTemplateBaseObject {
        
        private string addressField;
        
        private string cityField;
        
        private string dealerNameField;
        
        private string dealerPortalUsernameField;
        
        private StateProvinceEnum stateField;
        
        private bool stateFieldSpecified;
        
        private string zipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerName {
            get {
                return this.dealerNameField;
            }
            set {
                this.dealerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerPortalUsername {
            get {
                return this.dealerPortalUsernameField;
            }
            set {
                this.dealerPortalUsernameField = value;
            }
        }
        
        /// <remarks/>
        public StateProvinceEnum State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified {
            get {
                return this.stateFieldSpecified;
            }
            set {
                this.stateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum StateProvinceEnum {
        
        /// <remarks/>
        AL,
        
        /// <remarks/>
        AK,
        
        /// <remarks/>
        AZ,
        
        /// <remarks/>
        AR,
        
        /// <remarks/>
        CA,
        
        /// <remarks/>
        CO,
        
        /// <remarks/>
        CT,
        
        /// <remarks/>
        DE,
        
        /// <remarks/>
        FL,
        
        /// <remarks/>
        GA,
        
        /// <remarks/>
        HI,
        
        /// <remarks/>
        ID,
        
        /// <remarks/>
        IL,
        
        /// <remarks/>
        IN,
        
        /// <remarks/>
        IA,
        
        /// <remarks/>
        KS,
        
        /// <remarks/>
        KY,
        
        /// <remarks/>
        LA,
        
        /// <remarks/>
        ME,
        
        /// <remarks/>
        MD,
        
        /// <remarks/>
        MA,
        
        /// <remarks/>
        MI,
        
        /// <remarks/>
        MN,
        
        /// <remarks/>
        MS,
        
        /// <remarks/>
        MO,
        
        /// <remarks/>
        MT,
        
        /// <remarks/>
        NE,
        
        /// <remarks/>
        NV,
        
        /// <remarks/>
        NH,
        
        /// <remarks/>
        NJ,
        
        /// <remarks/>
        NM,
        
        /// <remarks/>
        NY,
        
        /// <remarks/>
        NC,
        
        /// <remarks/>
        ND,
        
        /// <remarks/>
        OH,
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        OR,
        
        /// <remarks/>
        PA,
        
        /// <remarks/>
        RI,
        
        /// <remarks/>
        SC,
        
        /// <remarks/>
        SD,
        
        /// <remarks/>
        TN,
        
        /// <remarks/>
        TX,
        
        /// <remarks/>
        UT,
        
        /// <remarks/>
        VT,
        
        /// <remarks/>
        VA,
        
        /// <remarks/>
        WA,
        
        /// <remarks/>
        WV,
        
        /// <remarks/>
        WI,
        
        /// <remarks/>
        WY,
        
        /// <remarks/>
        AS,
        
        /// <remarks/>
        DC,
        
        /// <remarks/>
        FM,
        
        /// <remarks/>
        GU,
        
        /// <remarks/>
        MH,
        
        /// <remarks/>
        MP,
        
        /// <remarks/>
        PW,
        
        /// <remarks/>
        PR,
        
        /// <remarks/>
        VI,
        
        /// <remarks/>
        AB,
        
        /// <remarks/>
        BC,
        
        /// <remarks/>
        MB,
        
        /// <remarks/>
        NB,
        
        /// <remarks/>
        NL,
        
        /// <remarks/>
        NS,
        
        /// <remarks/>
        NT,
        
        /// <remarks/>
        NU,
        
        /// <remarks/>
        ON,
        
        /// <remarks/>
        PE,
        
        /// <remarks/>
        QC,
        
        /// <remarks/>
        SK,
        
        /// <remarks/>
        YT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class DocuSignTemplateEcommerceAgreement : DocuSignTemplateBaseObject {
        
        private string addressField;
        
        private string bill_freqField;
        
        private string contact_personField;
        
        private System.DateTime current_dateField;
        
        private bool current_dateFieldSpecified;
        
        private string customer_nameField;
        
        private string customfield_order_idField;
        
        private string customfield_order_tokenField;
        
        private bool desktop_formatField;
        
        private bool desktop_formatFieldSpecified;
        
        private System.DateTime effective_dateField;
        
        private bool effective_dateFieldSpecified;
        
        private decimal initial_chargeField;
        
        private bool initial_chargeFieldSpecified;
        
        private string planField;
        
        private decimal rateField;
        
        private bool rateFieldSpecified;
        
        private string redirecturl_after_signingField;
        
        private string renew_termField;
        
        private string termField;
        
        private System.DateTime term_end_dateField;
        
        private bool term_end_dateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string bill_freq {
            get {
                return this.bill_freqField;
            }
            set {
                this.bill_freqField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contact_person {
            get {
                return this.contact_personField;
            }
            set {
                this.contact_personField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime current_date {
            get {
                return this.current_dateField;
            }
            set {
                this.current_dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool current_dateSpecified {
            get {
                return this.current_dateFieldSpecified;
            }
            set {
                this.current_dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customer_name {
            get {
                return this.customer_nameField;
            }
            set {
                this.customer_nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customfield_order_id {
            get {
                return this.customfield_order_idField;
            }
            set {
                this.customfield_order_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customfield_order_token {
            get {
                return this.customfield_order_tokenField;
            }
            set {
                this.customfield_order_tokenField = value;
            }
        }
        
        /// <remarks/>
        public bool desktop_format {
            get {
                return this.desktop_formatField;
            }
            set {
                this.desktop_formatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool desktop_formatSpecified {
            get {
                return this.desktop_formatFieldSpecified;
            }
            set {
                this.desktop_formatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime effective_date {
            get {
                return this.effective_dateField;
            }
            set {
                this.effective_dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool effective_dateSpecified {
            get {
                return this.effective_dateFieldSpecified;
            }
            set {
                this.effective_dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal initial_charge {
            get {
                return this.initial_chargeField;
            }
            set {
                this.initial_chargeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool initial_chargeSpecified {
            get {
                return this.initial_chargeFieldSpecified;
            }
            set {
                this.initial_chargeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string plan {
            get {
                return this.planField;
            }
            set {
                this.planField = value;
            }
        }
        
        /// <remarks/>
        public decimal rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rateSpecified {
            get {
                return this.rateFieldSpecified;
            }
            set {
                this.rateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string redirecturl_after_signing {
            get {
                return this.redirecturl_after_signingField;
            }
            set {
                this.redirecturl_after_signingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string renew_term {
            get {
                return this.renew_termField;
            }
            set {
                this.renew_termField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string term {
            get {
                return this.termField;
            }
            set {
                this.termField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime term_end_date {
            get {
                return this.term_end_dateField;
            }
            set {
                this.term_end_dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool term_end_dateSpecified {
            get {
                return this.term_end_dateFieldSpecified;
            }
            set {
                this.term_end_dateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class DocuSignTemplateCreditAuthDocument : DocuSignTemplateBaseObject {
        
        private string addressField;
        
        private string cityField;
        
        private string dealerPortalPasswordField;
        
        private string dealerPortalUsernameField;
        
        private string documentStatusField;
        
        private string primaryBirthDateField;
        
        private string primaryPhoneField;
        
        private string primaryTaxIDNumberField;
        
        private string prospectIDField;
        
        private string secondaryBirthDateField;
        
        private string secondaryPhoneField;
        
        private string secondaryTaxIDNumberField;
        
        private StateProvinceEnum stateField;
        
        private bool stateFieldSpecified;
        
        private string zipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerPortalPassword {
            get {
                return this.dealerPortalPasswordField;
            }
            set {
                this.dealerPortalPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerPortalUsername {
            get {
                return this.dealerPortalUsernameField;
            }
            set {
                this.dealerPortalUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DocumentStatus {
            get {
                return this.documentStatusField;
            }
            set {
                this.documentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryBirthDate {
            get {
                return this.primaryBirthDateField;
            }
            set {
                this.primaryBirthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryPhone {
            get {
                return this.primaryPhoneField;
            }
            set {
                this.primaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryTaxIDNumber {
            get {
                return this.primaryTaxIDNumberField;
            }
            set {
                this.primaryTaxIDNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProspectID {
            get {
                return this.prospectIDField;
            }
            set {
                this.prospectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryBirthDate {
            get {
                return this.secondaryBirthDateField;
            }
            set {
                this.secondaryBirthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryPhone {
            get {
                return this.secondaryPhoneField;
            }
            set {
                this.secondaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryTaxIDNumber {
            get {
                return this.secondaryTaxIDNumberField;
            }
            set {
                this.secondaryTaxIDNumberField = value;
            }
        }
        
        /// <remarks/>
        public StateProvinceEnum State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified {
            get {
                return this.stateFieldSpecified;
            }
            set {
                this.stateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class GenericResult {
        
        private bool resultField;
        
        private bool resultFieldSpecified;
        
        private string resultDataField;
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResultData {
            get {
                return this.resultDataField;
            }
            set {
                this.resultDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class ValidationResult {
        
        private ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] faultFieldsField;
        
        private bool resultField;
        
        private bool resultFieldSpecified;
        
        private string resultDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] FaultFields {
            get {
                return this.faultFieldsField;
            }
            set {
                this.faultFieldsField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResultData {
            get {
                return this.resultDataField;
            }
            set {
                this.resultDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract.CreditAuth")]
    public partial class CreditAuthHeader {
        
        private int creditAuthHeaderIDField;
        
        private bool creditAuthHeaderIDFieldSpecified;
        
        private System.DateTime dateAddedField;
        
        private bool dateAddedFieldSpecified;
        
        private System.Nullable<System.DateTime> dateUpdatedField;
        
        private bool dateUpdatedFieldSpecified;
        
        private string dealerNameField;
        
        private string dealerNumberField;
        
        private string dealerSalespersonField;
        
        private string dealerUsernameField;
        
        private string documentStatusField;
        
        private string envelopeIDField;
        
        private string premiseAddress1Field;
        
        private string premiseAddress2Field;
        
        private string premiseCityField;
        
        private string premiseCountyField;
        
        private string premiseStateField;
        
        private string premiseZipField;
        
        private string primaryEmailField;
        
        private string primaryFirstNameField;
        
        private string primaryLastNameField;
        
        private string primaryPhoneField;
        
        private string prospectIDField;
        
        private string secondaryEmailField;
        
        private string secondaryFirstNameField;
        
        private string secondaryLastNameField;
        
        private string secondaryPhoneField;
        
        /// <remarks/>
        public int CreditAuthHeaderID {
            get {
                return this.creditAuthHeaderIDField;
            }
            set {
                this.creditAuthHeaderIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditAuthHeaderIDSpecified {
            get {
                return this.creditAuthHeaderIDFieldSpecified;
            }
            set {
                this.creditAuthHeaderIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateAdded {
            get {
                return this.dateAddedField;
            }
            set {
                this.dateAddedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateAddedSpecified {
            get {
                return this.dateAddedFieldSpecified;
            }
            set {
                this.dateAddedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateUpdatedSpecified {
            get {
                return this.dateUpdatedFieldSpecified;
            }
            set {
                this.dateUpdatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerName {
            get {
                return this.dealerNameField;
            }
            set {
                this.dealerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerNumber {
            get {
                return this.dealerNumberField;
            }
            set {
                this.dealerNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerSalesperson {
            get {
                return this.dealerSalespersonField;
            }
            set {
                this.dealerSalespersonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerUsername {
            get {
                return this.dealerUsernameField;
            }
            set {
                this.dealerUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DocumentStatus {
            get {
                return this.documentStatusField;
            }
            set {
                this.documentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EnvelopeID {
            get {
                return this.envelopeIDField;
            }
            set {
                this.envelopeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseAddress1 {
            get {
                return this.premiseAddress1Field;
            }
            set {
                this.premiseAddress1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseAddress2 {
            get {
                return this.premiseAddress2Field;
            }
            set {
                this.premiseAddress2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseCity {
            get {
                return this.premiseCityField;
            }
            set {
                this.premiseCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseCounty {
            get {
                return this.premiseCountyField;
            }
            set {
                this.premiseCountyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseState {
            get {
                return this.premiseStateField;
            }
            set {
                this.premiseStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseZip {
            get {
                return this.premiseZipField;
            }
            set {
                this.premiseZipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryEmail {
            get {
                return this.primaryEmailField;
            }
            set {
                this.primaryEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryFirstName {
            get {
                return this.primaryFirstNameField;
            }
            set {
                this.primaryFirstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryLastName {
            get {
                return this.primaryLastNameField;
            }
            set {
                this.primaryLastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryPhone {
            get {
                return this.primaryPhoneField;
            }
            set {
                this.primaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProspectID {
            get {
                return this.prospectIDField;
            }
            set {
                this.prospectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryEmail {
            get {
                return this.secondaryEmailField;
            }
            set {
                this.secondaryEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryFirstName {
            get {
                return this.secondaryFirstNameField;
            }
            set {
                this.secondaryFirstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryLastName {
            get {
                return this.secondaryLastNameField;
            }
            set {
                this.secondaryLastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryPhone {
            get {
                return this.secondaryPhoneField;
            }
            set {
                this.secondaryPhoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class ErrorResponse {
        
        private ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] additionalInformationField;
        
        private ErrorType errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringanyType", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] AdditionalInformation {
            get {
                return this.additionalInformationField;
            }
            set {
                this.additionalInformationField = value;
            }
        }
        
        /// <remarks/>
        public ErrorType ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
    public partial class ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType {
        
        private string keyField;
        
        private object valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum ErrorType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Failed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class CreateContractConsumerResult {
        
        private string envelopeIDField;
        
        private ErrorResponse errorsField;
        
        private string[] signingURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EnvelopeID {
            get {
                return this.envelopeIDField;
            }
            set {
                this.envelopeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ErrorResponse Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] SigningURL {
            get {
                return this.signingURLField;
            }
            set {
                this.signingURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class ContractEnvelope {
        
        private string envelopeIDField;
        
        private byte[] pDFBytesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EnvelopeID {
            get {
                return this.envelopeIDField;
            }
            set {
                this.envelopeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] PDFBytes {
            get {
                return this.pDFBytesField;
            }
            set {
                this.pDFBytesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class VoidEnvelopeResult {
        
        private bool resultField;
        
        private bool resultFieldSpecified;
        
        private string resultDataField;
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResultData {
            get {
                return this.resultDataField;
            }
            set {
                this.resultDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class CreateContractResult {
        
        private string envelopeIDField;
        
        private ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] faultFieldsField;
        
        private bool resultField;
        
        private bool resultFieldSpecified;
        
        private string resultDataField;
        
        private string[] signingURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EnvelopeID {
            get {
                return this.envelopeIDField;
            }
            set {
                this.envelopeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] FaultFields {
            get {
                return this.faultFieldsField;
            }
            set {
                this.faultFieldsField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResultSpecified {
            get {
                return this.resultFieldSpecified;
            }
            set {
                this.resultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResultData {
            get {
                return this.resultDataField;
            }
            set {
                this.resultDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] SigningURL {
            get {
                return this.signingURLField;
            }
            set {
                this.signingURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class PaymentItem {
        
        private string bankAccountNumberField;
        
        private string bankRoutingNumberField;
        
        private string canadaRoutingBranchField;
        
        private string canadaRoutingInstitutionField;
        
        private int creditCardExpireMonthField;
        
        private bool creditCardExpireMonthFieldSpecified;
        
        private int creditCardExpireYearField;
        
        private bool creditCardExpireYearFieldSpecified;
        
        private string creditCardNumberField;
        
        private CreditCardTypeEnum creditCardTypeField;
        
        private bool creditCardTypeFieldSpecified;
        
        private PaymentTypeEnum paymentTypeField;
        
        private bool paymentTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BankAccountNumber {
            get {
                return this.bankAccountNumberField;
            }
            set {
                this.bankAccountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BankRoutingNumber {
            get {
                return this.bankRoutingNumberField;
            }
            set {
                this.bankRoutingNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CanadaRoutingBranch {
            get {
                return this.canadaRoutingBranchField;
            }
            set {
                this.canadaRoutingBranchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CanadaRoutingInstitution {
            get {
                return this.canadaRoutingInstitutionField;
            }
            set {
                this.canadaRoutingInstitutionField = value;
            }
        }
        
        /// <remarks/>
        public int CreditCardExpireMonth {
            get {
                return this.creditCardExpireMonthField;
            }
            set {
                this.creditCardExpireMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditCardExpireMonthSpecified {
            get {
                return this.creditCardExpireMonthFieldSpecified;
            }
            set {
                this.creditCardExpireMonthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CreditCardExpireYear {
            get {
                return this.creditCardExpireYearField;
            }
            set {
                this.creditCardExpireYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditCardExpireYearSpecified {
            get {
                return this.creditCardExpireYearFieldSpecified;
            }
            set {
                this.creditCardExpireYearFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreditCardNumber {
            get {
                return this.creditCardNumberField;
            }
            set {
                this.creditCardNumberField = value;
            }
        }
        
        /// <remarks/>
        public CreditCardTypeEnum CreditCardType {
            get {
                return this.creditCardTypeField;
            }
            set {
                this.creditCardTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditCardTypeSpecified {
            get {
                return this.creditCardTypeFieldSpecified;
            }
            set {
                this.creditCardTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PaymentTypeEnum PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeSpecified {
            get {
                return this.paymentTypeFieldSpecified;
            }
            set {
                this.paymentTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum CreditCardTypeEnum {
        
        /// <remarks/>
        Visa,
        
        /// <remarks/>
        MasterCard,
        
        /// <remarks/>
        Discover,
        
        /// <remarks/>
        AmericanExpress,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum PaymentTypeEnum {
        
        /// <remarks/>
        Invoice,
        
        /// <remarks/>
        BankAccount,
        
        /// <remarks/>
        CreditCard,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class EquipmentItem {
        
        private string nameField;
        
        private int pointsField;
        
        private bool pointsFieldSpecified;
        
        private decimal priceField;
        
        private bool priceFieldSpecified;
        
        private int quantityField;
        
        private bool quantityFieldSpecified;
        
        private decimal totalField;
        
        private bool totalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Points {
            get {
                return this.pointsField;
            }
            set {
                this.pointsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PointsSpecified {
            get {
                return this.pointsFieldSpecified;
            }
            set {
                this.pointsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PriceSpecified {
            get {
                return this.priceFieldSpecified;
            }
            set {
                this.priceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalSpecified {
            get {
                return this.totalFieldSpecified;
            }
            set {
                this.totalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class ContactItem {
        
        private string extField;
        
        private string nameField;
        
        private string passwordField;
        
        private string phoneField;
        
        private PhoneTypeEnum phoneTypeField;
        
        private bool phoneTypeFieldSpecified;
        
        private string userNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Ext {
            get {
                return this.extField;
            }
            set {
                this.extField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public PhoneTypeEnum PhoneType {
            get {
                return this.phoneTypeField;
            }
            set {
                this.phoneTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhoneTypeSpecified {
            get {
                return this.phoneTypeFieldSpecified;
            }
            set {
                this.phoneTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserNumber {
            get {
                return this.userNumberField;
            }
            set {
                this.userNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum PhoneTypeEnum {
        
        /// <remarks/>
        Home,
        
        /// <remarks/>
        Cell,
        
        /// <remarks/>
        Work,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContractDocument2))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContractDocumentConsumer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class ContractDocument {
        
        private System.DateTime billStartDateField;
        
        private bool billStartDateFieldSpecified;
        
        private string billingAddress1Field;
        
        private string billingAddress2Field;
        
        private string billingCityField;
        
        private string billingCountyField;
        
        private StateProvinceEnum billingStateField;
        
        private bool billingStateFieldSpecified;
        
        private string billingZipField;
        
        private string companyNameField;
        
        private CompanyTypes companyTypeField;
        
        private bool companyTypeFieldSpecified;
        
        private ContactItem[] contactListField;
        
        private int contractIDField;
        
        private bool contractIDFieldSpecified;
        
        private CountryEnum countryOfSaleField;
        
        private bool countryOfSaleFieldSpecified;
        
        private CustomerTypeEnum customerTypeField;
        
        private bool customerTypeFieldSpecified;
        
        private string dealerPasswordField;
        
        private string dealerPersonIDField;
        
        private string dealerRedirectionURLField;
        
        private string dealerUsernameField;
        
        private int draftDayField;
        
        private bool draftDayFieldSpecified;
        
        private string envelopeIDField;
        
        private AlarmNetworkEnum equipmentAlarmNetworkField;
        
        private bool equipmentAlarmNetworkFieldSpecified;
        
        private bool equipmentAlarmNetworkIncludedField;
        
        private bool equipmentAlarmNetworkIncludedFieldSpecified;
        
        private EquipmentItem[] equipmentListField;
        
        private decimal equipmentOtherAmountField;
        
        private bool equipmentOtherAmountFieldSpecified;
        
        private decimal equipmentPermitAmountField;
        
        private bool equipmentPermitAmountFieldSpecified;
        
        private decimal equipmentSubtotalAmountField;
        
        private bool equipmentSubtotalAmountFieldSpecified;
        
        private decimal equipmentTaxAmountField;
        
        private bool equipmentTaxAmountFieldSpecified;
        
        private decimal equipmentTotalAmountField;
        
        private bool equipmentTotalAmountFieldSpecified;
        
        private bool guardAddendumRequiredField;
        
        private bool guardAddendumRequiredFieldSpecified;
        
        private System.DateTime installationDateField;
        
        private bool installationDateFieldSpecified;
        
        private System.DateTime installationFinishField;
        
        private bool installationFinishFieldSpecified;
        
        private System.DateTime installationStartField;
        
        private bool installationStartFieldSpecified;
        
        private string installationWorkDescriptionField;
        
        private decimal insurancePersonalInjuryAmountField;
        
        private bool insurancePersonalInjuryAmountFieldSpecified;
        
        private decimal insurancePropertyDamageAmountField;
        
        private bool insurancePropertyDamageAmountFieldSpecified;
        
        private ContractLanguageEnum languageField;
        
        private bool languageFieldSpecified;
        
        private int monthsPaidUpFrontField;
        
        private bool monthsPaidUpFrontFieldSpecified;
        
        private int paymentCountField;
        
        private bool paymentCountFieldSpecified;
        
        private System.DateTime paymentEffectiveDateField;
        
        private bool paymentEffectiveDateFieldSpecified;
        
        private bool paymentExtendedServiceOptionField;
        
        private bool paymentExtendedServiceOptionFieldSpecified;
        
        private PaymentItem paymentInitialField;
        
        private PaymentItem paymentMonthlyField;
        
        private decimal paymentMonthlyMonitoringRateField;
        
        private bool paymentMonthlyMonitoringRateFieldSpecified;
        
        private decimal paymentOneTimeActivationFeeField;
        
        private bool paymentOneTimeActivationFeeFieldSpecified;
        
        private string premiseAddress1Field;
        
        private string premiseAddress2Field;
        
        private string premiseCityField;
        
        private string premiseCountyField;
        
        private string premiseGateCodeField;
        
        private StateProvinceEnum premiseStateField;
        
        private bool premiseStateFieldSpecified;
        
        private string premiseZipField;
        
        private string primaryBirthDateField;
        
        private string primaryEmailField;
        
        private string primaryFirstNameField;
        
        private string primaryLastNameField;
        
        private string primaryPasswordField;
        
        private string primaryPhoneField;
        
        private string primaryTaxIDNumberField;
        
        private int promotionPeriodField;
        
        private bool promotionPeriodFieldSpecified;
        
        private string secondaryBirthDateField;
        
        private string secondaryEmailField;
        
        private string secondaryFirstNameField;
        
        private string secondaryLastNameField;
        
        private string secondaryPhoneField;
        
        private string secondaryTaxIDNumberField;
        
        private bool surveyCancellingServiceField;
        
        private bool surveyCancellingServiceFieldSpecified;
        
        private bool surveyConfirmContractLengthField;
        
        private bool surveyConfirmContractLengthFieldSpecified;
        
        private bool surveyFamiliarizationPeriodField;
        
        private bool surveyFamiliarizationPeriodFieldSpecified;
        
        private bool surveyHomeownerField;
        
        private bool surveyHomeownerFieldSpecified;
        
        private bool surveyNewConstructionField;
        
        private bool surveyNewConstructionFieldSpecified;
        
        private bool surveyUnderContractField;
        
        private bool surveyUnderContractFieldSpecified;
        
        /// <remarks/>
        public System.DateTime BillStartDate {
            get {
                return this.billStartDateField;
            }
            set {
                this.billStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BillStartDateSpecified {
            get {
                return this.billStartDateFieldSpecified;
            }
            set {
                this.billStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BillingAddress1 {
            get {
                return this.billingAddress1Field;
            }
            set {
                this.billingAddress1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BillingAddress2 {
            get {
                return this.billingAddress2Field;
            }
            set {
                this.billingAddress2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BillingCity {
            get {
                return this.billingCityField;
            }
            set {
                this.billingCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BillingCounty {
            get {
                return this.billingCountyField;
            }
            set {
                this.billingCountyField = value;
            }
        }
        
        /// <remarks/>
        public StateProvinceEnum BillingState {
            get {
                return this.billingStateField;
            }
            set {
                this.billingStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BillingStateSpecified {
            get {
                return this.billingStateFieldSpecified;
            }
            set {
                this.billingStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BillingZip {
            get {
                return this.billingZipField;
            }
            set {
                this.billingZipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public CompanyTypes CompanyType {
            get {
                return this.companyTypeField;
            }
            set {
                this.companyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyTypeSpecified {
            get {
                return this.companyTypeFieldSpecified;
            }
            set {
                this.companyTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ContactItem[] ContactList {
            get {
                return this.contactListField;
            }
            set {
                this.contactListField = value;
            }
        }
        
        /// <remarks/>
        public int ContractID {
            get {
                return this.contractIDField;
            }
            set {
                this.contractIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContractIDSpecified {
            get {
                return this.contractIDFieldSpecified;
            }
            set {
                this.contractIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public CountryEnum CountryOfSale {
            get {
                return this.countryOfSaleField;
            }
            set {
                this.countryOfSaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountryOfSaleSpecified {
            get {
                return this.countryOfSaleFieldSpecified;
            }
            set {
                this.countryOfSaleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public CustomerTypeEnum CustomerType {
            get {
                return this.customerTypeField;
            }
            set {
                this.customerTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerTypeSpecified {
            get {
                return this.customerTypeFieldSpecified;
            }
            set {
                this.customerTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerPassword {
            get {
                return this.dealerPasswordField;
            }
            set {
                this.dealerPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerPersonID {
            get {
                return this.dealerPersonIDField;
            }
            set {
                this.dealerPersonIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerRedirectionURL {
            get {
                return this.dealerRedirectionURLField;
            }
            set {
                this.dealerRedirectionURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerUsername {
            get {
                return this.dealerUsernameField;
            }
            set {
                this.dealerUsernameField = value;
            }
        }
        
        /// <remarks/>
        public int DraftDay {
            get {
                return this.draftDayField;
            }
            set {
                this.draftDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DraftDaySpecified {
            get {
                return this.draftDayFieldSpecified;
            }
            set {
                this.draftDayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EnvelopeID {
            get {
                return this.envelopeIDField;
            }
            set {
                this.envelopeIDField = value;
            }
        }
        
        /// <remarks/>
        public AlarmNetworkEnum EquipmentAlarmNetwork {
            get {
                return this.equipmentAlarmNetworkField;
            }
            set {
                this.equipmentAlarmNetworkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquipmentAlarmNetworkSpecified {
            get {
                return this.equipmentAlarmNetworkFieldSpecified;
            }
            set {
                this.equipmentAlarmNetworkFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool EquipmentAlarmNetworkIncluded {
            get {
                return this.equipmentAlarmNetworkIncludedField;
            }
            set {
                this.equipmentAlarmNetworkIncludedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquipmentAlarmNetworkIncludedSpecified {
            get {
                return this.equipmentAlarmNetworkIncludedFieldSpecified;
            }
            set {
                this.equipmentAlarmNetworkIncludedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public EquipmentItem[] EquipmentList {
            get {
                return this.equipmentListField;
            }
            set {
                this.equipmentListField = value;
            }
        }
        
        /// <remarks/>
        public decimal EquipmentOtherAmount {
            get {
                return this.equipmentOtherAmountField;
            }
            set {
                this.equipmentOtherAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquipmentOtherAmountSpecified {
            get {
                return this.equipmentOtherAmountFieldSpecified;
            }
            set {
                this.equipmentOtherAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal EquipmentPermitAmount {
            get {
                return this.equipmentPermitAmountField;
            }
            set {
                this.equipmentPermitAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquipmentPermitAmountSpecified {
            get {
                return this.equipmentPermitAmountFieldSpecified;
            }
            set {
                this.equipmentPermitAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal EquipmentSubtotalAmount {
            get {
                return this.equipmentSubtotalAmountField;
            }
            set {
                this.equipmentSubtotalAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquipmentSubtotalAmountSpecified {
            get {
                return this.equipmentSubtotalAmountFieldSpecified;
            }
            set {
                this.equipmentSubtotalAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal EquipmentTaxAmount {
            get {
                return this.equipmentTaxAmountField;
            }
            set {
                this.equipmentTaxAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquipmentTaxAmountSpecified {
            get {
                return this.equipmentTaxAmountFieldSpecified;
            }
            set {
                this.equipmentTaxAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal EquipmentTotalAmount {
            get {
                return this.equipmentTotalAmountField;
            }
            set {
                this.equipmentTotalAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EquipmentTotalAmountSpecified {
            get {
                return this.equipmentTotalAmountFieldSpecified;
            }
            set {
                this.equipmentTotalAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool GuardAddendumRequired {
            get {
                return this.guardAddendumRequiredField;
            }
            set {
                this.guardAddendumRequiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuardAddendumRequiredSpecified {
            get {
                return this.guardAddendumRequiredFieldSpecified;
            }
            set {
                this.guardAddendumRequiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InstallationDate {
            get {
                return this.installationDateField;
            }
            set {
                this.installationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InstallationDateSpecified {
            get {
                return this.installationDateFieldSpecified;
            }
            set {
                this.installationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InstallationFinish {
            get {
                return this.installationFinishField;
            }
            set {
                this.installationFinishField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InstallationFinishSpecified {
            get {
                return this.installationFinishFieldSpecified;
            }
            set {
                this.installationFinishFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InstallationStart {
            get {
                return this.installationStartField;
            }
            set {
                this.installationStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InstallationStartSpecified {
            get {
                return this.installationStartFieldSpecified;
            }
            set {
                this.installationStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InstallationWorkDescription {
            get {
                return this.installationWorkDescriptionField;
            }
            set {
                this.installationWorkDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal InsurancePersonalInjuryAmount {
            get {
                return this.insurancePersonalInjuryAmountField;
            }
            set {
                this.insurancePersonalInjuryAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsurancePersonalInjuryAmountSpecified {
            get {
                return this.insurancePersonalInjuryAmountFieldSpecified;
            }
            set {
                this.insurancePersonalInjuryAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal InsurancePropertyDamageAmount {
            get {
                return this.insurancePropertyDamageAmountField;
            }
            set {
                this.insurancePropertyDamageAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsurancePropertyDamageAmountSpecified {
            get {
                return this.insurancePropertyDamageAmountFieldSpecified;
            }
            set {
                this.insurancePropertyDamageAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ContractLanguageEnum Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LanguageSpecified {
            get {
                return this.languageFieldSpecified;
            }
            set {
                this.languageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MonthsPaidUpFront {
            get {
                return this.monthsPaidUpFrontField;
            }
            set {
                this.monthsPaidUpFrontField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MonthsPaidUpFrontSpecified {
            get {
                return this.monthsPaidUpFrontFieldSpecified;
            }
            set {
                this.monthsPaidUpFrontFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PaymentCount {
            get {
                return this.paymentCountField;
            }
            set {
                this.paymentCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentCountSpecified {
            get {
                return this.paymentCountFieldSpecified;
            }
            set {
                this.paymentCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PaymentEffectiveDate {
            get {
                return this.paymentEffectiveDateField;
            }
            set {
                this.paymentEffectiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentEffectiveDateSpecified {
            get {
                return this.paymentEffectiveDateFieldSpecified;
            }
            set {
                this.paymentEffectiveDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool PaymentExtendedServiceOption {
            get {
                return this.paymentExtendedServiceOptionField;
            }
            set {
                this.paymentExtendedServiceOptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentExtendedServiceOptionSpecified {
            get {
                return this.paymentExtendedServiceOptionFieldSpecified;
            }
            set {
                this.paymentExtendedServiceOptionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PaymentItem PaymentInitial {
            get {
                return this.paymentInitialField;
            }
            set {
                this.paymentInitialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PaymentItem PaymentMonthly {
            get {
                return this.paymentMonthlyField;
            }
            set {
                this.paymentMonthlyField = value;
            }
        }
        
        /// <remarks/>
        public decimal PaymentMonthlyMonitoringRate {
            get {
                return this.paymentMonthlyMonitoringRateField;
            }
            set {
                this.paymentMonthlyMonitoringRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentMonthlyMonitoringRateSpecified {
            get {
                return this.paymentMonthlyMonitoringRateFieldSpecified;
            }
            set {
                this.paymentMonthlyMonitoringRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal PaymentOneTimeActivationFee {
            get {
                return this.paymentOneTimeActivationFeeField;
            }
            set {
                this.paymentOneTimeActivationFeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentOneTimeActivationFeeSpecified {
            get {
                return this.paymentOneTimeActivationFeeFieldSpecified;
            }
            set {
                this.paymentOneTimeActivationFeeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseAddress1 {
            get {
                return this.premiseAddress1Field;
            }
            set {
                this.premiseAddress1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseAddress2 {
            get {
                return this.premiseAddress2Field;
            }
            set {
                this.premiseAddress2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseCity {
            get {
                return this.premiseCityField;
            }
            set {
                this.premiseCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseCounty {
            get {
                return this.premiseCountyField;
            }
            set {
                this.premiseCountyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseGateCode {
            get {
                return this.premiseGateCodeField;
            }
            set {
                this.premiseGateCodeField = value;
            }
        }
        
        /// <remarks/>
        public StateProvinceEnum PremiseState {
            get {
                return this.premiseStateField;
            }
            set {
                this.premiseStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PremiseStateSpecified {
            get {
                return this.premiseStateFieldSpecified;
            }
            set {
                this.premiseStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseZip {
            get {
                return this.premiseZipField;
            }
            set {
                this.premiseZipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryBirthDate {
            get {
                return this.primaryBirthDateField;
            }
            set {
                this.primaryBirthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryEmail {
            get {
                return this.primaryEmailField;
            }
            set {
                this.primaryEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryFirstName {
            get {
                return this.primaryFirstNameField;
            }
            set {
                this.primaryFirstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryLastName {
            get {
                return this.primaryLastNameField;
            }
            set {
                this.primaryLastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryPassword {
            get {
                return this.primaryPasswordField;
            }
            set {
                this.primaryPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryPhone {
            get {
                return this.primaryPhoneField;
            }
            set {
                this.primaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryTaxIDNumber {
            get {
                return this.primaryTaxIDNumberField;
            }
            set {
                this.primaryTaxIDNumberField = value;
            }
        }
        
        /// <remarks/>
        public int PromotionPeriod {
            get {
                return this.promotionPeriodField;
            }
            set {
                this.promotionPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PromotionPeriodSpecified {
            get {
                return this.promotionPeriodFieldSpecified;
            }
            set {
                this.promotionPeriodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryBirthDate {
            get {
                return this.secondaryBirthDateField;
            }
            set {
                this.secondaryBirthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryEmail {
            get {
                return this.secondaryEmailField;
            }
            set {
                this.secondaryEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryFirstName {
            get {
                return this.secondaryFirstNameField;
            }
            set {
                this.secondaryFirstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryLastName {
            get {
                return this.secondaryLastNameField;
            }
            set {
                this.secondaryLastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryPhone {
            get {
                return this.secondaryPhoneField;
            }
            set {
                this.secondaryPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SecondaryTaxIDNumber {
            get {
                return this.secondaryTaxIDNumberField;
            }
            set {
                this.secondaryTaxIDNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool SurveyCancellingService {
            get {
                return this.surveyCancellingServiceField;
            }
            set {
                this.surveyCancellingServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SurveyCancellingServiceSpecified {
            get {
                return this.surveyCancellingServiceFieldSpecified;
            }
            set {
                this.surveyCancellingServiceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool SurveyConfirmContractLength {
            get {
                return this.surveyConfirmContractLengthField;
            }
            set {
                this.surveyConfirmContractLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SurveyConfirmContractLengthSpecified {
            get {
                return this.surveyConfirmContractLengthFieldSpecified;
            }
            set {
                this.surveyConfirmContractLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool SurveyFamiliarizationPeriod {
            get {
                return this.surveyFamiliarizationPeriodField;
            }
            set {
                this.surveyFamiliarizationPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SurveyFamiliarizationPeriodSpecified {
            get {
                return this.surveyFamiliarizationPeriodFieldSpecified;
            }
            set {
                this.surveyFamiliarizationPeriodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool SurveyHomeowner {
            get {
                return this.surveyHomeownerField;
            }
            set {
                this.surveyHomeownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SurveyHomeownerSpecified {
            get {
                return this.surveyHomeownerFieldSpecified;
            }
            set {
                this.surveyHomeownerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool SurveyNewConstruction {
            get {
                return this.surveyNewConstructionField;
            }
            set {
                this.surveyNewConstructionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SurveyNewConstructionSpecified {
            get {
                return this.surveyNewConstructionFieldSpecified;
            }
            set {
                this.surveyNewConstructionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool SurveyUnderContract {
            get {
                return this.surveyUnderContractField;
            }
            set {
                this.surveyUnderContractField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SurveyUnderContractSpecified {
            get {
                return this.surveyUnderContractFieldSpecified;
            }
            set {
                this.surveyUnderContractFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum CompanyTypes {
        
        /// <remarks/>
        Corporation,
        
        /// <remarks/>
        Proprietorship,
        
        /// <remarks/>
        LLC,
        
        /// <remarks/>
        Partnership,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum CountryEnum {
        
        /// <remarks/>
        US,
        
        /// <remarks/>
        CA,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum CustomerTypeEnum {
        
        /// <remarks/>
        Commercial,
        
        /// <remarks/>
        Residential,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum AlarmNetworkEnum {
        
        /// <remarks/>
        AlarmDotcom,
        
        /// <remarks/>
        AlarmNet,
        
        /// <remarks/>
        Tellular,
        
        /// <remarks/>
        DSC,
        
        /// <remarks/>
        icontrol,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum ContractLanguageEnum {
        
        /// <remarks/>
        English,
        
        /// <remarks/>
        Spanish,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContractDocumentConsumer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class ContractDocument2 : ContractDocument {

     



        private string[] attachmentGUIDListingField;
        
        private decimal discountAmountField;
        
        private bool discountAmountFieldSpecified;
        
        private string discountMemberIDField;
        
        private string discountNameField;
        
        private int discountProgramIDField;
        
        private bool discountProgramIDFieldSpecified;
        
        private decimal fullPriceRMRField;
        
        private bool fullPriceRMRFieldSpecified;
        
        private string pGHomeAdddress1Field;
        
        private string pGHomeAdddress2Field;
        
        private string pGHomeCityField;
        
        private StateProvinceEnum pGHomeStateField;
        
        private bool pGHomeStateFieldSpecified;
        
        private string pGHomeZipField;
        
        private string pGTitleField;
        
        private bool personalGuaranteeRequiredField;
        
        private bool personalGuaranteeRequiredFieldSpecified;
        
        private string signingLocationField;
        
        private string sourceIPAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] AttachmentGUIDListing {
            get {
                return this.attachmentGUIDListingField;
            }
            set {
                this.attachmentGUIDListingField = value;
            }
        }
        
        /// <remarks/>
        public decimal DiscountAmount {
            get {
                return this.discountAmountField;
            }
            set {
                this.discountAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountAmountSpecified {
            get {
                return this.discountAmountFieldSpecified;
            }
            set {
                this.discountAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DiscountMemberID {
            get {
                return this.discountMemberIDField;
            }
            set {
                this.discountMemberIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DiscountName {
            get {
                return this.discountNameField;
            }
            set {
                this.discountNameField = value;
            }
        }
        
        /// <remarks/>
        public int DiscountProgramID {
            get {
                return this.discountProgramIDField;
            }
            set {
                this.discountProgramIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountProgramIDSpecified {
            get {
                return this.discountProgramIDFieldSpecified;
            }
            set {
                this.discountProgramIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal FullPriceRMR {
            get {
                return this.fullPriceRMRField;
            }
            set {
                this.fullPriceRMRField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FullPriceRMRSpecified {
            get {
                return this.fullPriceRMRFieldSpecified;
            }
            set {
                this.fullPriceRMRFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PGHomeAdddress1 {
            get {
                return this.pGHomeAdddress1Field;
            }
            set {
                this.pGHomeAdddress1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PGHomeAdddress2 {
            get {
                return this.pGHomeAdddress2Field;
            }
            set {
                this.pGHomeAdddress2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PGHomeCity {
            get {
                return this.pGHomeCityField;
            }
            set {
                this.pGHomeCityField = value;
            }
        }
        
        /// <remarks/>
        public StateProvinceEnum PGHomeState {
            get {
                return this.pGHomeStateField;
            }
            set {
                this.pGHomeStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PGHomeStateSpecified {
            get {
                return this.pGHomeStateFieldSpecified;
            }
            set {
                this.pGHomeStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PGHomeZip {
            get {
                return this.pGHomeZipField;
            }
            set {
                this.pGHomeZipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PGTitle {
            get {
                return this.pGTitleField;
            }
            set {
                this.pGTitleField = value;
            }
        }
        
        /// <remarks/>
        public bool PersonalGuaranteeRequired {
            get {
                return this.personalGuaranteeRequiredField;
            }
            set {
                this.personalGuaranteeRequiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PersonalGuaranteeRequiredSpecified {
            get {
                return this.personalGuaranteeRequiredFieldSpecified;
            }
            set {
                this.personalGuaranteeRequiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SigningLocation {
            get {
                return this.signingLocationField;
            }
            set {
                this.signingLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SourceIPAddress {
            get {
                return this.sourceIPAddressField;
            }
            set {
                this.sourceIPAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class ContractDocumentConsumer : ContractDocument2 {
        
        private string contractEmailSubjectField;
        
        private ContractTemplateTypes contractTemplateTypeField;
        
        private bool contractTemplateTypeFieldSpecified;
        
        private string contractVersionField;
        
        private string dealerNameOverrideField;
        
        private string dealerNumberOverrideField;
        
        private string dealerSalespersonNameOverrideField;
        
        private bool performCallbackToPartnerAPIField;
        
        private bool performCallbackToPartnerAPIFieldSpecified;
        
        private string taxExemptIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContractEmailSubject {
            get {
                return this.contractEmailSubjectField;
            }
            set {
                this.contractEmailSubjectField = value;
            }
        }
        
        /// <remarks/>
        public ContractTemplateTypes ContractTemplateType {
            get {
                return this.contractTemplateTypeField;
            }
            set {
                this.contractTemplateTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContractTemplateTypeSpecified {
            get {
                return this.contractTemplateTypeFieldSpecified;
            }
            set {
                this.contractTemplateTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContractVersion {
            get {
                return this.contractVersionField;
            }
            set {
                this.contractVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerNameOverride {
            get {
                return this.dealerNameOverrideField;
            }
            set {
                this.dealerNameOverrideField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerNumberOverride {
            get {
                return this.dealerNumberOverrideField;
            }
            set {
                this.dealerNumberOverrideField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerSalespersonNameOverride {
            get {
                return this.dealerSalespersonNameOverrideField;
            }
            set {
                this.dealerSalespersonNameOverrideField = value;
            }
        }
        
        /// <remarks/>
        public bool PerformCallbackToPartnerAPI {
            get {
                return this.performCallbackToPartnerAPIField;
            }
            set {
                this.performCallbackToPartnerAPIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PerformCallbackToPartnerAPISpecified {
            get {
                return this.performCallbackToPartnerAPIFieldSpecified;
            }
            set {
                this.performCallbackToPartnerAPIFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TaxExemptID {
            get {
                return this.taxExemptIDField;
            }
            set {
                this.taxExemptIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public enum ContractTemplateTypes {
        
        /// <remarks/>
        Undefined,
        
        /// <remarks/>
        Nest,
        
        /// <remarks/>
        TMobile,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class StatusSearch {
        
        private System.Nullable<int> contractIDField;
        
        private bool contractIDFieldSpecified;
        
        private System.DateTime createdDateField;
        
        private bool createdDateFieldSpecified;
        
        private string dealerEmailField;
        
        private System.Nullable<System.DateTime> dealerEmailSentField;
        
        private bool dealerEmailSentFieldSpecified;
        
        private string dealerNameField;
        
        private string dealerNumberField;
        
        private System.Nullable<System.DateTime> effectiveDateField;
        
        private bool effectiveDateFieldSpecified;
        
        private string envelopeIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private System.Nullable<System.DateTime> lastUpdateDateField;
        
        private bool lastUpdateDateFieldSpecified;
        
        private string phoneNumberField;
        
        private string premiseAddressField;
        
        private string premiseCityField;
        
        private string premiseStateField;
        
        private string premiseZipField;
        
        private string salesRepNameField;
        
        private string statusField;
        
        private int statusSearchIDField;
        
        private bool statusSearchIDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ContractID {
            get {
                return this.contractIDField;
            }
            set {
                this.contractIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContractIDSpecified {
            get {
                return this.contractIDFieldSpecified;
            }
            set {
                this.contractIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedDateSpecified {
            get {
                return this.createdDateFieldSpecified;
            }
            set {
                this.createdDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerEmail {
            get {
                return this.dealerEmailField;
            }
            set {
                this.dealerEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DealerEmailSent {
            get {
                return this.dealerEmailSentField;
            }
            set {
                this.dealerEmailSentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DealerEmailSentSpecified {
            get {
                return this.dealerEmailSentFieldSpecified;
            }
            set {
                this.dealerEmailSentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerName {
            get {
                return this.dealerNameField;
            }
            set {
                this.dealerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerNumber {
            get {
                return this.dealerNumberField;
            }
            set {
                this.dealerNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveDateSpecified {
            get {
                return this.effectiveDateFieldSpecified;
            }
            set {
                this.effectiveDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EnvelopeID {
            get {
                return this.envelopeIDField;
            }
            set {
                this.envelopeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdateDate {
            get {
                return this.lastUpdateDateField;
            }
            set {
                this.lastUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastUpdateDateSpecified {
            get {
                return this.lastUpdateDateFieldSpecified;
            }
            set {
                this.lastUpdateDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseAddress {
            get {
                return this.premiseAddressField;
            }
            set {
                this.premiseAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseCity {
            get {
                return this.premiseCityField;
            }
            set {
                this.premiseCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseState {
            get {
                return this.premiseStateField;
            }
            set {
                this.premiseStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PremiseZip {
            get {
                return this.premiseZipField;
            }
            set {
                this.premiseZipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SalesRepName {
            get {
                return this.salesRepNameField;
            }
            set {
                this.salesRepNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int StatusSearchID {
            get {
                return this.statusSearchIDField;
            }
            set {
                this.statusSearchIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSearchIDSpecified {
            get {
                return this.statusSearchIDFieldSpecified;
            }
            set {
                this.statusSearchIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class ProgramDiscounts {
        
        private string displayNameField;
        
        private string programCodeField;
        
        private int programIDField;
        
        private bool programIDFieldSpecified;
        
        private decimal rMRDiscountAmountField;
        
        private bool rMRDiscountAmountFieldSpecified;
        
        private string rMRDiscountCodeField;
        
        private bool rMRIsPercentField;
        
        private bool rMRIsPercentFieldSpecified;
        
        private string validCountriesField;
        
        private bool validForCommercialField;
        
        private bool validForCommercialFieldSpecified;
        
        private bool validForResidentialField;
        
        private bool validForResidentialFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProgramCode {
            get {
                return this.programCodeField;
            }
            set {
                this.programCodeField = value;
            }
        }
        
        /// <remarks/>
        public int ProgramID {
            get {
                return this.programIDField;
            }
            set {
                this.programIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProgramIDSpecified {
            get {
                return this.programIDFieldSpecified;
            }
            set {
                this.programIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal RMRDiscountAmount {
            get {
                return this.rMRDiscountAmountField;
            }
            set {
                this.rMRDiscountAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RMRDiscountAmountSpecified {
            get {
                return this.rMRDiscountAmountFieldSpecified;
            }
            set {
                this.rMRDiscountAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RMRDiscountCode {
            get {
                return this.rMRDiscountCodeField;
            }
            set {
                this.rMRDiscountCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool RMRIsPercent {
            get {
                return this.rMRIsPercentField;
            }
            set {
                this.rMRIsPercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RMRIsPercentSpecified {
            get {
                return this.rMRIsPercentFieldSpecified;
            }
            set {
                this.rMRIsPercentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ValidCountries {
            get {
                return this.validCountriesField;
            }
            set {
                this.validCountriesField = value;
            }
        }
        
        /// <remarks/>
        public bool ValidForCommercial {
            get {
                return this.validForCommercialField;
            }
            set {
                this.validForCommercialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidForCommercialSpecified {
            get {
                return this.validForCommercialFieldSpecified;
            }
            set {
                this.validForCommercialFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ValidForResidential {
            get {
                return this.validForResidentialField;
            }
            set {
                this.validForResidentialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidForResidentialSpecified {
            get {
                return this.validForResidentialFieldSpecified;
            }
            set {
                this.validForResidentialFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MoniNetUserInfo2))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.monitronics.net/WebServices/")]
    public partial class MoniNetUserInfo {
        
        private int dealerNumberField;
        
        private string branchesField;
        
        private string emailAddressField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string[] rolesField;
        
        private bool isValidUserField;
        
        private int contactNoField;
        
        private int aPP_IDField;
        
        private int dealerTypeField;
        
        /// <remarks/>
        public int DealerNumber {
            get {
                return this.dealerNumberField;
            }
            set {
                this.dealerNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Branches {
            get {
                return this.branchesField;
            }
            set {
                this.branchesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public string[] Roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsValidUser {
            get {
                return this.isValidUserField;
            }
            set {
                this.isValidUserField = value;
            }
        }
        
        /// <remarks/>
        public int ContactNo {
            get {
                return this.contactNoField;
            }
            set {
                this.contactNoField = value;
            }
        }
        
        /// <remarks/>
        public int APP_ID {
            get {
                return this.aPP_IDField;
            }
            set {
                this.aPP_IDField = value;
            }
        }
        
        /// <remarks/>
        public int DealerType {
            get {
                return this.dealerTypeField;
            }
            set {
                this.dealerTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.monitronics.net/WebServices/")]
    public partial class MoniNetUserInfo2 : MoniNetUserInfo {
        
        private bool nonSolicitFlagField;
        
        /// <remarks/>
        public bool NonSolicitFlag {
            get {
                return this.nonSolicitFlagField;
            }
            set {
                this.nonSolicitFlagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MoniNetSvc.BusinessEntities")]
    public partial class DealerLicense {
        
        private System.DateTime expireDateField;
        
        private bool expireDateFieldSpecified;
        
        private string licenseNumberField;
        
        private string licenseTypeField;
        
        private string licensedStateField;
        
        /// <remarks/>
        public System.DateTime ExpireDate {
            get {
                return this.expireDateField;
            }
            set {
                this.expireDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpireDateSpecified {
            get {
                return this.expireDateFieldSpecified;
            }
            set {
                this.expireDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LicenseNumber {
            get {
                return this.licenseNumberField;
            }
            set {
                this.licenseNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LicenseType {
            get {
                return this.licenseTypeField;
            }
            set {
                this.licenseTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LicensedState {
            get {
                return this.licensedStateField;
            }
            set {
                this.licensedStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.monitronics.net/WebServices/")]
    public partial class DealerInfo {
        
        private ExtensionDataObject extensionDataField;
        
        private string cMDealerNoField;
        
        private string dealerNameField;
        
        private string insuranceCompanyField;
        
        private System.DateTime insuranceExpirationDateField;
        
        private string insurancePolicyNoField;
        
        private string insuranceStatusField;
        
        private int mASDealerNoField;
        
        private string mailingAddressField;
        
        private string mailingCityField;
        
        private string mailingCountyField;
        
        private string mailingStateField;
        
        private string mailingZipField;
        
        private string mainFaxField;
        
        private string mainPhoneField;
        
        private string primaryMASPinField;
        
        private string purchaseDealerNoField;
        
        private string purchaseFundingTypeIDField;
        
        private string serviceDealerNoField;
        
        private string serviceFaxField;
        
        private int serviceFundingTypeIDField;
        
        private string servicePhoneField;
        
        private string shippingAddressField;
        
        private string shippingCityField;
        
        private string shippingCountyField;
        
        private string shippingStateField;
        
        private string shippingZipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CMDealerNo {
            get {
                return this.cMDealerNoField;
            }
            set {
                this.cMDealerNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DealerName {
            get {
                return this.dealerNameField;
            }
            set {
                this.dealerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsuranceCompany {
            get {
                return this.insuranceCompanyField;
            }
            set {
                this.insuranceCompanyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InsuranceExpirationDate {
            get {
                return this.insuranceExpirationDateField;
            }
            set {
                this.insuranceExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsurancePolicyNo {
            get {
                return this.insurancePolicyNoField;
            }
            set {
                this.insurancePolicyNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsuranceStatus {
            get {
                return this.insuranceStatusField;
            }
            set {
                this.insuranceStatusField = value;
            }
        }
        
        /// <remarks/>
        public int MASDealerNo {
            get {
                return this.mASDealerNoField;
            }
            set {
                this.mASDealerNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MailingAddress {
            get {
                return this.mailingAddressField;
            }
            set {
                this.mailingAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MailingCity {
            get {
                return this.mailingCityField;
            }
            set {
                this.mailingCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MailingCounty {
            get {
                return this.mailingCountyField;
            }
            set {
                this.mailingCountyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MailingState {
            get {
                return this.mailingStateField;
            }
            set {
                this.mailingStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MailingZip {
            get {
                return this.mailingZipField;
            }
            set {
                this.mailingZipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MainFax {
            get {
                return this.mainFaxField;
            }
            set {
                this.mainFaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MainPhone {
            get {
                return this.mainPhoneField;
            }
            set {
                this.mainPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PrimaryMASPin {
            get {
                return this.primaryMASPinField;
            }
            set {
                this.primaryMASPinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PurchaseDealerNo {
            get {
                return this.purchaseDealerNoField;
            }
            set {
                this.purchaseDealerNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PurchaseFundingTypeID {
            get {
                return this.purchaseFundingTypeIDField;
            }
            set {
                this.purchaseFundingTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ServiceDealerNo {
            get {
                return this.serviceDealerNoField;
            }
            set {
                this.serviceDealerNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ServiceFax {
            get {
                return this.serviceFaxField;
            }
            set {
                this.serviceFaxField = value;
            }
        }
        
        /// <remarks/>
        public int ServiceFundingTypeID {
            get {
                return this.serviceFundingTypeIDField;
            }
            set {
                this.serviceFundingTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ServicePhone {
            get {
                return this.servicePhoneField;
            }
            set {
                this.servicePhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShippingAddress {
            get {
                return this.shippingAddressField;
            }
            set {
                this.shippingAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShippingCity {
            get {
                return this.shippingCityField;
            }
            set {
                this.shippingCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShippingCounty {
            get {
                return this.shippingCountyField;
            }
            set {
                this.shippingCountyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShippingState {
            get {
                return this.shippingStateField;
            }
            set {
                this.shippingStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShippingZip {
            get {
                return this.shippingZipField;
            }
            set {
                this.shippingZipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.monitronics.net/WebServices/")]
    public partial class ExtensionDataObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.monitronics.net/WebServices/")]
    public partial class DealerEmail {
        
        private ExtensionDataObject extensionDataField;
        
        private string emailAddressField;
        
        private string type_IDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Type_ID {
            get {
                return this.type_IDField;
            }
            set {
                this.type_IDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.monitronics.net/WebServices/")]
    public partial class DealerDBA {
        
        private ExtensionDataObject extensionDataField;
        
        private string dBANameField;
        
        private string statesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DBAName {
            get {
                return this.dBANameField;
            }
            set {
                this.dBANameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string States {
            get {
                return this.statesField;
            }
            set {
                this.statesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Service.eContract")]
    public partial class AuthenticationResult2 : AuthenticationResult {
        
        private ProgramDiscounts[] discountsField;
        
        private bool nonSolicitSignedField;
        
        private bool nonSolicitSignedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ProgramDiscounts[] Discounts {
            get {
                return this.discountsField;
            }
            set {
                this.discountsField = value;
            }
        }
        
        /// <remarks/>
        public bool NonSolicitSigned {
            get {
                return this.nonSolicitSignedField;
            }
            set {
                this.nonSolicitSignedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonSolicitSignedSpecified {
            get {
                return this.nonSolicitSignedFieldSpecified;
            }
            set {
                this.nonSolicitSignedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void APIVersionCompletedEventHandler(object sender, APIVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class APIVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal APIVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchContractsCompletedEventHandler(object sender, SearchContractsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchContractsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchContractsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusSearch[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusSearch[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateContractCompletedEventHandler(object sender, CreateContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateContractResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateContractResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void NextSignerCompletedEventHandler(object sender, NextSignerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NextSignerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NextSignerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void VoidContractCompletedEventHandler(object sender, VoidContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoidContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoidContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VoidEnvelopeResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VoidEnvelopeResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetContractCompletedEventHandler(object sender, GetContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContractEnvelope Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContractEnvelope)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetContractAsPrimaryCompletedEventHandler(object sender, GetContractAsPrimaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractAsPrimaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractAsPrimaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContractEnvelope Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContractEnvelope)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendQuoteEmailCompletedEventHandler(object sender, SendQuoteEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendQuoteEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendQuoteEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool SendQuoteEmailResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool SendQuoteEmailResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetContractIDCompletedEventHandler(object sender, GetContractIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int GetContractIDResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetContractIDResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenticateUser2CompletedEventHandler(object sender, AuthenticateUser2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUser2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUser2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticationResult2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticationResult2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateContract2CompletedEventHandler(object sender, CreateContract2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateContract2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateContract2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateContractResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateContractResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateContractConsumerCompletedEventHandler(object sender, CreateContractConsumerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateContractConsumerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateContractConsumerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateContractConsumerResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateContractConsumerResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPerformCallbackToPartnerAPIFlagCompletedEventHandler(object sender, GetPerformCallbackToPartnerAPIFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformCallbackToPartnerAPIFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformCallbackToPartnerAPIFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GetPerformCallbackToPartnerAPIFlagResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GetPerformCallbackToPartnerAPIFlagResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateContract2CompletedEventHandler(object sender, ValidateContract2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateContract2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateContract2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ValidationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ValidationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendQuoteEmail2CompletedEventHandler(object sender, SendQuoteEmail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendQuoteEmail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendQuoteEmail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool SendQuoteEmail2Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool SendQuoteEmail2ResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UploadAttachmentCompletedEventHandler(object sender, UploadAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteAttachmentCompletedEventHandler(object sender, DeleteAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DeleteAttachmentResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteAttachmentResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendNonSolicitAgreementCompletedEventHandler(object sender, SendNonSolicitAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendNonSolicitAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendNonSolicitAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GenericResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GenericResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendCreditAuthorizationCompletedEventHandler(object sender, SendCreditAuthorizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCreditAuthorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCreditAuthorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GenericResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GenericResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendECommerceAgreementCompletedEventHandler(object sender, SendECommerceAgreementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendECommerceAgreementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendECommerceAgreementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SendDocusignTemplateResult2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendDocusignTemplateResult2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RegisterNotificationUrlCompletedEventHandler(object sender, RegisterNotificationUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterNotificationUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterNotificationUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GenericResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GenericResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ContractReadyForArchivalCompletedEventHandler(object sender, ContractReadyForArchivalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContractReadyForArchivalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContractReadyForArchivalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool ContractReadyForArchivalResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ContractReadyForArchivalResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ResendEnvelopeCompletedEventHandler(object sender, ResendEnvelopeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResendEnvelopeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResendEnvelopeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool ResendEnvelopeResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ResendEnvelopeResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchCreditAuthCompletedEventHandler(object sender, SearchCreditAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCreditAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCreditAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditAuthHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditAuthHeader[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendCancelLetterCompletedEventHandler(object sender, SendCancelLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCancelLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCancelLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GenericResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GenericResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetContractDocumentConsumerCompletedEventHandler(object sender, GetContractDocumentConsumerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractDocumentConsumerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractDocumentConsumerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContractDocumentConsumer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContractDocumentConsumer)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591